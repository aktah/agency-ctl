/*
	Edited by Aktah (SAMPCTL)
		forum.script-wise.in.th
*/

#include <a_samp>

// Include แยกที่ไม่มีอยู่ใน Github (เก็บไฟล์ไว้ในโฟลเดอร์ includeEx) 
#include <utils>
#include <morphinc>
#include <BadWords>

// Include ที่มีอยู่ใน Github
#include <streamer>
#include <easyDialog>

#pragma dynamic 10000
#pragma tabsize 0
static gTeam[MAX_PLAYERS];

#define MAX_SPAM 1
#define MAX_STRING 255
#define blau 0x1229FAFF
#define CHECKPOINT_NONE 0
#define CHECKPOINT_HOME 12
#define COLOR_SUPERRED 0xFF0000FF
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_RED 0xAA3333AA
#define COLOR_LIGHTRED 0xFF6347AA
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0xFFA500AA
#define COLOR_OOC 0xE0FFFFAA
#define TEAM_CYAN 1
#define TEAM_BLUE 2
#define TEAM_GREEN 3
#define TEAM_ORANGE 4
#define TEAM_COR 5
#define TEAM_BAR 6
#define TEAM_TAT 7
#define TEAM_CUN 8
#define TEAM_STR 9
#define TEAM_HIT 10
#define TEAM_ADMIN 11
#define OBJECTIVE_COLOR 0x64000064
#define TEAM_GREEN_COLOR 0xFFFFFFAA
#define TEAM_JOB_COLOR 0xFFB6C1AA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define COLOR_ADD 0x63FF60AA
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define TEAM_BALLAS_COLOR 0xD900D3C8
#define TEAM_AZTECAS_COLOR 0x00F6F6AA
#define TEAM_Vance_COLOR 0xBFC0C2FF
#define TEAM_AdminsGangster_COLOR 0xFFFFFFAA
#define TEAM_CMGangster_COLOR 0x3D4F42F6
#define TEAM_DPNCLUB_COLOR 0xFFFF00AA
#define TEAM_CYAN_COLOR 0xD08900F6
#define TEAM_ORANGE_COLOR 0xFF830000
#define TEAM_COR_COLOR 0x39393900
#define TEAM_BAR_COLOR 0x00D90000
#define TEAM_TAT_COLOR 0xBDCB9200
#define TEAM_CUN_COLOR 0xD900D300
#define TEAM_STR_COLOR 0x01FCFF00
#define TEAM_ADMIN_COLOR 0x00808000
#define COLOR_INVIS 0xAFAFAF00
#define COLOR_SPEC 0xBFC0C200
#define GANGZONE_BALLAS 0xD900D3C8
#define GANGZONE_YAKUZA 0xAA3333AA
#define GANGZONE_VAGOS 0xFFC801C8
#define GANGZONE_GROVE 0x00D900C8
#define GANGZONE_AZTEC 0x009FFF96
#define GANGZONE_LCN 0xAFAFAFAA
#define SPECIAL_ACTION_PISSING      68

forward IsAnOwnableCar(carid);
forward GetCar(playerid);
forward LoadCar();
forward SaveCarCoords();
forward SKPoll();
forward PollResult();
forward BackupClear(playerid, calledbytimer);
forward SetPlayerBack(playerid);
forward PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz);
forward OnPlayerEnterFood(playerid, foodid);
forward OnPlayerExitFood(playerid);
forward SafeGivePlayerMoney(plyid, amounttogive);
forward SafeGivePlayerWeapon(plyid, weaponid, ammo);
forward SafeResetPlayerMoney(plyid);
forward SafeResetPlayerWeapons(plyid);
forward ClearChatbox(playerid, lines);
forward CheckMoneyHack();
forward CheckWeaponHack();
forward WarningLog(string[]);
forward IO1(playerid);
forward IO2(playerid);
forward IO3(playerid);
forward IO4(playerid);
forward IO5(playerid);
forward IO6(playerid);
forward IO7(playerid);
forward DKT1(playerid);
forward DKT2(playerid);
forward DKT3(playerid);
forward DKT4(playerid);
forward DKT5(playerid);
forward DKT6(playerid);
forward healmax100(playerid);
forward cpranim(playerid);
forward cprhp(playerid);
forward login(playerid);
forward register(playerid);
forward agencyGateClose();
forward aGateClose();
forward GateClose();
forward fGateClose();
forward saGateClose();
forward sbGateClose();
forward scGateClose();
forward sdGateClose();
forward CheckForWalkingTeleport(playerid);
forward ResetRoadblockTimer();
forward RemoveRoadblock(playerid);
forward LoadProperty();
forward LoadBizz();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
forward LoadCK();
forward SaveCK();
forward LoadFamilies();
forward SaveFamilies();
forward LoadTurfs();
forward SaveTurfs();
forward LoadIRC();
forward SaveIRC();
forward LoadPapers();
forward SavePapers();
forward LoadBoxer();
forward SaveBoxer();
forward OnPropUpdate();
forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward JoinChannel(playerid, number, line[]);
forward JoinChannelNr(playerid, number);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward Deathcpr(playerid);
forward IsAtFishPlace(playerid);
forward IsAtCookPlace(playerid);
forward IsAtBar(playerid);
forward SearchingHit(playerid);
forward DollahScoreUpdate();
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward SendEnemyMessage(color, string[]);
forward SendTeamBeepMessage(team, color, string[]);
forward ABroadCast(color,const string[],level);
forward DateProp(playerid);
forward GetClosestPlayer(p1);
forward IsPlayerInTurf(playerid, turfid);
forward LoadMission(playerid,name[]);
forward SaveMission(playerid,name[]);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward ReportLog(string[]);
forward BanLog(string[]);
forward KickLog(string[]);
forward PayLog(string[]);
forward CKLog(string[]);
forward IsATruck(carid);
forward IsABike(carid);
forward IsAnAmbulance(carid);
forward IsACopCar(carid);
forward IsACopBoat(carid);
forward IsACopsCar(carid);
forward IsAFbiCar(carid);
forward IsAMarinesCar(carid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsAGangMember(playerid);
forward IsAYajok(playerid);
forward IsACop(playerid);
forward IsAMember(playerid);
forward IsAnInstructor(playerid);
forward Spectator();
forward ConvertTicks(ticks);
forward Encrypt(string[]);
forward KartingEnded();
forward StartKarting();
forward PrepareKarting();
forward PaintballEnded();
forward StartPaintball();
forward PreparePaintball();
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward SetPlayerWeapons(playerid);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid,password[]);
forward OnPlayerUpdate(playerid);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(color,const string[]);
forward OOCOff(color,const string[]);
forward OOCNews(color,const string[]);
forward SendJobMessage(job, color, string[]);
forward SendFamilyMessage(family, color, string[]);
forward SendNewFamilyMessage(family, color, string[]);
forward SendIRCMessage(channel, color, string[]);
forward SendTeamMessage(team, color, string[]);
forward SendRadioMessage(member, color, string[]);
forward SendAdminMessage(color, string[]);
forward AddCar(carcoords);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearCK(ck);
forward ClearFamily(family);
forward ClearMarriage(playerid);
forward ClearPaper(paper);
forward ClearCrime(playerid);
forward FishCost(playerid, fish);
forward ClearFishes(playerid);
forward ClearFishID(playerid, fish);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward CarCheck();
forward CarInit();
forward CarTow(carid);
forward CarRespawn(carid);
forward LockCar(carid);
forward UnLockCar(carid);
forward InitLockDoors(playerid);
forward CheckGas();
forward Fillup();
forward StoppedVehicle();
forward SyncTime();
forward SyncUp();
forward SaveAccounts();
forward IsPlayerInZone(playerid, zoneid);
forward Production();
forward Checkprop();
forward PayDay();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward HouseLevel(playerid);
forward CHouseLevel(houseid);
forward CustomPickups();
forward SetCamBack(playerid);
forward FixHour(hour);
forward AddsOn();
forward SetPlayerStar(playerid);
forward ChangeHostname();
forward cprhp(playerid);
forward cprheal(playerid);
//------------------------------------------------------------------------------------------------------
new Weapons[][32] =
{
	{"Unarmed (Fist)"},
	{"Brass Knuckles"},
	{"Golf Club"},
	{"Night Stick"},
	{"Knife"},
	{"Baseball Bat"},
	{"Shovel"},
	{"Pool Cue"},
	{"Katana"},
	{"Chainsaw"},
	{"Purple Dildo"},
	{"Big White Vibrator"},
	{"Medium White Vibrator"},
	{"Small White Vibrator"},
	{"Flowers"},
	{"Cane"},
	{"Grenade"},
	{"Teargas"},
	{"Molotov"},
	{" "},
	{" "},
	{" "},
	{"Colt 45"},
	{"Colt 45 (Silenced)"},
	{"Desert Eagle"},
	{"Normal Shotgun"},
	{"Sawnoff Shotgun"},
	{"Combat Shotgun"},
	{"Micro Uzi (Mac 10)"},
	{"MP5"},
	{"AK47"},
	{"M4"},
	{"Tec9"},
	{"Country Rifle"},
	{"Sniper Rifle"},
	{"Rocket Launcher"},
	{"Heat-Seeking Rocket Launcher"},
	{"Flamethrower"},
	{"Minigun"},
	{"Satchel Charge"},
	{"Detonator"},
	{"Spray Can"},
	{"Fire Extinguisher"},
	{"Camera"},
	{"Night Vision Goggles"},
	{"Infrared Vision Goggles"},
	{"Parachute"},
	{"Fake Pistol"}
};
new VehicleKey[MAX_VEHICLES];
new VehicleGet[MAX_PLAYERS];
new Vote[MAX_PLAYERS];
new poll = 0;
new pmaker = 999;
new pchoice;
new Poll[256];
new V1[64];
new V2[64];
new V3[64];
new V4[64];
new vtime;
new expx = 1;
new lcn;
new aztec;
new grove;
new vagos;
new yakuza;
new ballas;
new agate;
new agencygate;
new pdgate;
new pdngate;
new RentCarKey[MAX_PLAYERS];
new fgate;
new sagate;
new sbgate;
new scgate;
new sdgate;
new swat[MAX_PLAYERS];
//new animcprhacktimer;
new weaponhacktimer;
new moneyhacktimer;
new PlayerEnterFood[MAX_PLAYERS];
new InAFoodPlace[MAX_PLAYERS];
new ScriptMoney[MAX_PLAYERS];
new ScriptMoneyUpdated[MAX_PLAYERS];
new DKT[MAX_PLAYERS];
new Security = 0;
new SpamStrings[MAX_PLAYERS];
new StartingPaintballRound = 0;
new AnnouncedPaintballRound = 0;
new PaintballPlayers = 0;
new PaintballRound = 0;
new PaintballWinner = 999;
new PaintballWinnerKills = 0;
new StartingKartRound = 0;
new EndingKartRound = 0;
new AnnouncedKartRound = 0;
new KartingPlayers = 0;
new KartingRound = 0;
new FirstKartWinner = 999;
new SecondKartWinner = 999;
new ThirdKartWinner = 999;
new InRing = 0;
new RoundStarted = 0;
new BoxDelay = 0;
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new PlayerBoxing[MAX_PLAYERS];
new hitfound = 0;
new hitid = 999;
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new roadblocktimer = 0;
new Jackpot = 0;
new Tax = 0;
new TaxValue = 0;
new CreatedCars[100];
new CreatedCar = 0;
new pTest[MAX_PLAYERS];
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new BusDrivers = 0;
new BusCall = 999;
new BusCallTime[MAX_PLAYERS];
new BusAccepted[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new JobDuty[MAX_PLAYERS];
new RegistrationStep[MAX_PLAYERS];
new MapIconsShown[MAX_PLAYERS];
new OnCK[MAX_PLAYERS];
new GettingCK[MAX_PLAYERS];
new PlayerPaintballing[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new PlayerKarting[MAX_PLAYERS];
new PlayerInKart[MAX_PLAYERS];
new SchoolSpawn[MAX_PLAYERS];
new TakingLesson[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new PlayersChannel[MAX_PLAYERS];
new PlayerOnMission[MAX_PLAYERS];
new MissionCheckpoint[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new BringingPaper[MAX_PLAYERS]; //Paper Boys must pick up a Paper first, then use /deliver
new GotPaper[MAX_PLAYERS]; //The player has a paper so he can use /read
new WritingPaper[MAX_PLAYERS]; //Used for onplayertext so he can type in lines
new WritingPaperNumber[MAX_PLAYERS]; //To which Paper in PaperInfo will it be written
new WritingLine[MAX_PLAYERS]; //Used for onplayertext to see which line he's at
new FishCount[MAX_PLAYERS];
new SpawnChange[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new CprTimePoints[MAX_PLAYERS];
new CprTime[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new TestFishes[MAX_PLAYERS];
new PaperOffer[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new OrderReady[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new MedicTime[MAX_PLAYERS];
new NeedMedicTime[MAX_PLAYERS];
new MedicBill[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerFrozened[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new PlacedNews[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new GettingJob[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new ApprovedLawyer[MAX_PLAYERS];
new CallLawyer[MAX_PLAYERS];
new WantLawyer[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new KickPlayer[MAX_PLAYERS];
new Robbed[MAX_PLAYERS];
new RobbedTime[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new STDPlayer[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new OnAFK[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gLastCar[301];
new gOoc[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new StartTime[MAX_PLAYERS];
new HireCar[MAX_PLAYERS];
new SafeTime[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new gRope[MAX_PLAYERS];
new gGas[MAX_PLAYERS];
new gSpeedo[MAX_PLAYERS];
new gSpentCash[MAX_PLAYERS];
new FirstSpawn[MAX_PLAYERS];
new SwitchKey[MAX_PLAYERS];
new Fixr[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerAccount[MAX_PLAYERS];
new gPlayerMission[MAX_PLAYERS];
new adminonduty[MAX_PLAYERS];
new gLastDriver[302];
new gCarLock[265];
new MissionPlayable = 0;
new noooc = 0;
new nowisper = 0;
new noad = 0;
new nogov = 0;
new aswat = 0;
new adds = 1;
new addtimer = 60000;
new Float:rx, Float:ry, Float:rz;
new carselect[15];
new objstore[128];
new cbjstore[128];
new motd[256];
//new RStart;
new ghour = 0;
new gminute = 0;
new gsecond = 0;
new numplayers = 0;
new dollah = 1000; // Amount player recieves on spawn.
new realtime = 1;
new wtime = 15;
new levelcost = 0;
new deathcost = 50;
new callcost = 20; //20 seconds
new realchat = 1;
new timeshift = 0;
new shifthour;
new othtimer;
new synctimer;
new newmistimer;
new unjailtimer;
new turftimer;
new pickuptimer;
new spectatetimer;
new idletimer;
new productiontimer;
new accountstimer;
new checkgastimer;
new stoppedvehtimer;
new cartimer;
new intrate = 1;
new levelexp = 2;
new civnokill = 0;
new cchargetime = 60;
new txtcost = 25;
new pickups;
new CIV[] = {7,19,20,23,73,101,122};
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new SELLCAR1[] = { 1000, 1124, 1245, 1349, 1475, 1574, 1636, 1762, 1895, 1946, 2000 };
new SELLCAR2[] = { 2099, 2135, 2255, 2378, 2457, 2563, 2614, 2721, 2878, 2988, 3000 };
new SELLCAR3[] = { 3058, 3175, 3212, 3377, 3454, 3555, 3678, 3751, 3865, 3964, 4000 };
new SELLCAR4[] = { 4077, 4123, 4275, 4378, 4422, 4565, 4613, 4752, 4897, 4911, 5000 };
new Float:ChangePos[MAX_PLAYERS][3];
new ChangePos2[MAX_PLAYERS][2];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
new deathcpr[MAX_PLAYERS] = 0;
new intplayerid[MAX_PLAYERS];
new localplayerid[MAX_PLAYERS];
new gunplayerid[MAX_PLAYERS];
new ammoplayerid[MAX_PLAYERS];
new curfew;

#define GasMax 100
#define RunOutTime 15000
#define RefuelWait 5000

#define CAR_AMOUNT 700 //Change to Your Vehicle Amount
new Gas[CAR_AMOUNT];

new Refueling[MAX_PLAYERS];


enum SavePlayerPosEnum
{
    Float:LastX,
    Float:LastY,
    Float:LastZ
}
new SavePlayerPos[MAX_PLAYERS][SavePlayerPosEnum];
new SpeedMode = 1;
new UpdateSeconds = 1;
public GateClose()
{
      MoveDynamicObject (pdngate,-1571.713013, 665.608154, 6.336499, 2.5);
      MoveDynamicObject (pdgate,-1701.770020, 679.915344, 24.057503, 2.5);
      return 1;
}

public aGateClose()
{
      MoveDynamicObject(agate, -1534.51,481.789,6.26789,2.5);
      return 1;
}

public agencyGateClose()
{
      MoveDynamicObject(agencygate, -2202.26, 309.89, 34.2953,2.5);
      return 1;
}

public fGateClose()
{
      MoveDynamicObject(fgate, -2427.838378,499.158966,29.106018,2.5);
      return 1;
}
public saGateClose()
{
      MoveDynamicObject(sagate, -1971.28, 99.2108, 28.5672,2.5);
      return 1;
}
public sbGateClose()
{
      MoveDynamicObject(sbgate, -1964.28, 99.2108, 28.5672,2.5);
      return 1;
}
public scGateClose()
{
      MoveDynamicObject(scgate, -1971.41, 86.9734, 28.5672,2.5);
      return 1;
}
public sdGateClose()
{
      MoveDynamicObject(sdgate, -1964.52, 86.9734, 28.5672,2.5);
      return 1;
}
public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

public CheckMoneyHack()
{
	for(new i = 0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			new string[256];
			new giveplayer[MAX_PLAYER_NAME];
			new money = GetPlayerMoney(i);
			new pcash = ScriptMoney[i];
			if(money < pcash)
			{
				ScriptMoney[i] = money;
			}
			else if(pcash < money)
			{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				new year, month,day;
				getdate(year, month, day);
				new moneynumber = money-pcash;
				format(string, sizeof(string), "AdmWarning : ต้องสงสัยว่า [%d]%s ใช้โปรโกงเงิน จำนวนที่เสก : $%d (%d-%d-%d)", i, giveplayer, moneynumber,month,day,year);
				format(string, sizeof(string), "AdmWarning : ต้องสงสัยว่า [%d]%s ใช้โปรโกงเงิน จำนวนที่เสก : $%d ", i, giveplayer, moneynumber);
				SendAdminMessage(COLOR_YELLOW, string);
				WarningLog(string);
				SafeResetPlayerMoney(i);
				SafeGivePlayerMoney(i, pcash);
				OnPlayerUpdate(i);
			}
		}
	}
  	return 1;
}
public OnFilterScriptInit()
{
     SetTimer("ChangeHostname",1500,1); // Change the, 1000 to whatever you want, in milliseconds ofc.
     return 1;
}
public CheckWeaponHack()
{
	new string[256];
	new giveplayer[MAX_PLAYER_NAME];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	   	if(IsPlayerConnected(i) && !IsPlayerAdmin(i) && gPlayerLogged[i] == 1)
	   	{
	   		if(GetPlayerWeapon(i)==35 || GetPlayerWeapon(i)==36 || GetPlayerWeapon(i)==37 || GetPlayerWeapon(i)==38 || GetPlayerWeapon(i)== 44 || GetPlayerWeapon(i)== 45|| GetPlayerWeapon(i)== 39|| GetPlayerWeapon(i)== 40|| GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK)
		    {
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "AntiCheat: %s ถูกเตะเพราะใช้โปรเสกอาวุธ (Rocket Launcher,Flamethrower,Minigun,Satchel Charge,ietpack) ", giveplayer);
				SendClientMessageToAll(COLOR_LIGHTRED, string);
				printf("AdmWarning : %s ใช้โปรเสกอาวุธต้องห้าม (Rocket Launcher,Flamethrower,Minigun,Satchel Charge)", giveplayer);
				Kick(i);
    		}
		}
	}
 	for(new i=0;i<GetMaxPlayers();i++)
    {
		if(IsPlayerConnected(i) && GetPlayerAmmo(i) >= 1500 && !IsPlayerAdmin(i))
		{
			if(GetPlayerAmmo(i) > 1000)
			{
			    return 1;
   			}
			if(GetPlayerWeapon(i) > 15 && GetPlayerWeapon(i) < 43 && GetPlayerWeapon(i) != 41)
			{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				new year, month,day;
				getdate(year, month, day);
				format(string,  sizeof(string), "AdmWarning : ต้องสงสัยว่า [%d]%s ใช้โปรเสกอาวุธหรือโปรล็อคกระสุน ใช้ปืนไอดี %d ซึ่งมีกระสุนอยู่ %d นัด ! (%d-%d-%d)", i, giveplayer, GetPlayerWeapon(i), GetPlayerAmmo(i),month,day,year);
				format(string, sizeof(string), "AdmWarning : ต้องสงสัยว่า [%d]%s ใช้โปรเสกอาวุธหรือโปรล็อคกระสุน ใช้ปืนไอดี %d ซึ่งมีกระสุนอยู่ %d นัด ! ", i, giveplayer, GetPlayerWeapon(i), GetPlayerAmmo(i));
				SendAdminMessage(COLOR_YELLOW, string);
				WarningLog(string);
			}
		}
	}
	return 1;
}

public WarningLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("AdmWarning.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public SafeGivePlayerMoney(plyid, amounttogive)
{
	new curHour, curMinute, curSecond;
	gettime(curHour, curMinute, curSecond);
	ScriptMoneyUpdated[plyid] = curSecond;
	if (amounttogive < 0)
	{
		GivePlayerMoney(plyid, amounttogive);
		ScriptMoney[plyid] = (ScriptMoney[plyid] + amounttogive);
	}
	else
	{
		ScriptMoney[plyid] = (ScriptMoney[plyid] + amounttogive);
		GivePlayerMoney(plyid, amounttogive);
	}
	return 1;
}
public SafeResetPlayerMoney(plyid)
{
	new curHour, curMinute, curSecond;
	gettime(curHour, curMinute, curSecond);
	ScriptMoneyUpdated[plyid] = curSecond;
	ResetPlayerMoney(plyid);
	ScriptMoney[plyid] = 0;
	return 1;
}
public SafeGivePlayerWeapon(plyid, weaponid, ammo)
{
/*	new curHour, curMinute, curSecond;
	gettime(curHour, curMinute, curSecond);
	ScriptWeaponsUpdated[plyid] = curSecond;*/
	GivePlayerWeapon(plyid, weaponid, ammo);
	//UpdateWeaponSlots(plyid);
	return 1;
}

public SafeResetPlayerWeapons(plyid)
{
/*	new curHour, curMinute, curSecond;
	gettime(curHour, curMinute, curSecond);
	ScriptWeaponsUpdated[plyid] = curSecond;*/
	ResetPlayerWeapons(plyid);
	//UpdateWeaponSlots(plyid);
	return 1;
}
new Music[MAX_PLAYERS];
new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};

new FishNamesNumber = 22;
new FishNames[22][20] = {
	"เสื้อธรรมดา",
	"ปลาหมอ",
	"ปลาการ์ตูน",
	"ปลาสลิด",
	"กางเกง",
	"ปลาดุก",
	"นีโม่",
	"กระป๋อง",
	"ปลากระป๋อง",
	"แมวนํ้า",
	"รองเท้า",
	"ปลาปั๊กเป้า",
	"ปลา",
	"ถุงขยะ",
	"ปลาทูน่า",
	"ไข่ปลาคาเวียร์",
	"ปลาโลมา",
	"ปลาฉลาม",
	"เต่า",
	"ปลาแมว",
	"ถุงเงิน",
	"ปลาหางดาบ"
};

new Float:PaintballSpawns[7][3] = {
{-394.8027,2232.2317,42.4297},
{-430.8412,2240.5371,42.9834},
{-369.2361,2248.3127,42.4844},
{-350.8910,2218.0215,42.4912},
{-384.0544,2206.2908,42.4235},
{-395.7100,2214.9480,42.4297},
{-445.3718,2222.5481,42.4297}
};

new Float:gRandomPlayerSpawns[1][3] = {
{-2657.0518,1358.9689,7.2877} // sp1
};

new Float:gInviteSpawns[10][4] = {
{-1976.5912,166.1818,36.9623,272.6393},
{-1975.8610,162.1945,36.9623,272.0126},
{-1975.7461,157.5404,36.9623,276.1093},
{-1975.2136,151.4920,36.9623,268.2993},
{-1974.9963,145.3430,36.9623,269.2628},
{-1975.5842,140.8170,36.9623,269.8895},
{-1975.7874,134.0368,36.9623,271.7696},
{-1975.1681,129.0926,36.9623,270.8531},
{-1975.9069,121.4700,36.9623,270.5631},
{-1975.3311,112.7078,36.9623,267.7665}
};

/*new Float:gMedicSpawns[2][3] = {
{317.9066,315.6765,999.1484},
{317.6252,311.8465,999.1484}
};*/

new Float:gCopPlayerSpawns[2][3] = {
{243.8837,123.7818,1003.2257},
{249.5289,124.2697,1003.2188}
//{614.8,-608.2,17.2},
//{611.5,-607.8,17.2}
};

new Float:gMedPlayerSpawns[2][3] = {
{1178.1,-1321.0,14.1},
{1177.7,-1325.0,14.0}
};

enum pBoxingStats
{
    TitelName[128],
    TitelWins,
    TitelLoses,
};
new Titel[pBoxingStats];

enum cCKInfo
{
	cSendername[20],
	cGiveplayer[20],
	cUsed,
};
new CKInfo[10][cCKInfo];

enum cInfo
{
	cModel,
	Float:cLocationx,
	Float:cLocationy,
	Float:cLocationz,
	Float:cAngle,
	cColorOne,
	cColorTwo,
	cOwner[MAX_PLAYER_NAME],
	cDescription[MAX_PLAYER_NAME],
	cValue,
	cLicense,
	cRegistration,
	cOwned,
	cLock,
};

new CarInfo[588][cInfo];

enum pPaperInfo
{
	PaperUsed,
	PaperMaker[20],
	PaperTitle[64],
	PaperText1[128],
	PaperText2[128],
	PaperText3[128],
	PaperText4[128],
	PaperText5[128],
	PaperText6[128],
	PaperText7[128],
	SafeSaving,
};
new PaperInfo[10][pPaperInfo];

enum pPaper
{
	pMaker[20],
	pTitle[64],
	pLine1[128],
	pLine2[128],
	pLine3[128],
	pLine4[128],
	pLine5[128],
	pLine6[128],
	pLine7[128],
};
new Paper[MAX_PLAYERS][pPaper];

enum fInfo
{
	FamilyTaken,
	FamilyName[20],
	FamilyMOTD[128],
	FamilyColor[20],
	FamilyLeader[MAX_PLAYER_NAME],
	FamilyMembers,
	Float:FamilySpawn[4],
	FamilyInterior,
};
new FamilyInfo[10][fInfo];

enum zInfo
{
	zOwner[64],
	zColor[20],
    Float:zMinX,
    Float:zMinY,
    Float:zMaxX,
    Float:zMaxY,
};
new TurfInfo[6][zInfo];
new Turfs[6];

enum pFishing
{
	pFish1[20],
	pFish2[20],
	pFish3[20],
	pFish4[20],
	pFish5[20],
	pWeight1,
	pWeight2,
	pWeight3,
	pWeight4,
	pWeight5,
	pFid1,
	pFid2,
	pFid3,
	pFid4,
	pFid5,
	pLastFish,
	pFishID,
	pLastWeight,
};
new Fishes[MAX_PLAYERS][pFishing];
new BadWords[25][0] = {"ควย","พ่อมึงตาย","แม่มึงตาย","หี","สัส","เหี้ย","สัด","พ่อมึง","แม่มึง","กวย","เหรี้ย","มึง","มรึง","kuy","kuyy","kuyyy","noob","fuck","fucku","ค.ว.ย","ค ว ย","ค/ว/ย","ดอก","กู","คุวย"};

enum pCooking
{
	pCook1[20],
	pCook2[20],
	pCook3[20],
	pCook4[20],
	pCook5[20],
	pCWeight1,
	pCWeight2,
	pCWeight3,
	pCWeight4,
	pCWeight5,
	pCookID1,
	pCookID2,
	pCookID3,
	pCookID4,
	pCookID5,
};
new Cooking[MAX_PLAYERS][pCooking];

enum pGroceries
{
	pChickens,
	pChicken,
	pHamburgers,
	pHamburger,
	pPizzas,
	pPizza,
};
new Groceries[MAX_PLAYERS][pGroceries];

enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum hNews
{
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hAdd1[128],
	hAdd2[128],
	hAdd3[128],
	hAdd4[128],
	hAdd5[128],
	hContact1[128],
	hContact2[128],
	hContact3[128],
	hContact4[128],
	hContact5[128],
};
new News[hNews];

enum pInfo
{
	pKey[128],
	pLevel,
	pBomb,
	pAdmin,
	pDonateRank,
	gPupgrade,
	pConnectTime,
	pPcarkey,
	pReg,
	pSex,
	pAge,
	pOrigin,
	pCK,
	pMuted,
	pExp,
	pCash,
	pAccount,
	pCrimes,
	pKills,
	pDeaths,
	pArrested,
	pWantedDeaths,
	pPhoneBook,
	pLottoNr,
	pFishes,
	pBiggestFish,
	pJob,
	pPayCheck,
	pHeadValue,
	pJailed,
	pJailTime,
	pMats,
	pDrugs,
	pLeader,
	pMember,
	pFMember,
	pRank,
	pChar,
	pContractTime,
	pDetSkill,
	pSexSkill,
	pBoxSkill,
	pRoadblock,
	pLawSkill,
	pMechSkill,
	pJackSkill,
	pCarSkill,
	pNewsSkill,
	pDrugsSkill,
	pCookSkill,
	pFishSkill,
	Float:pHealth,
	Float:pSHealth,
	pInt,
	pLocal,
	pTeam,
	pModel,
	pPnumber,
	pPhousekey,
	pPbiskey,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pCarLic,
	pFlyLic,
	pRequestingBackup,
	pBoatLic,
	pFishLic,
	pGunLic,
	pGun1,
	pGun2,
	pGun3,
	pGun4,
	pAmmo1,
	pAmmo2,
	pAmmo3,
	pAmmo4,
	pRobber,
	pCarTime,
	pPayDay,
	pPayDayHad,
	pCDPlayer,
	pWins,
	pLoses,
	pAlcoholPerk,
	pDrugPerk,
	pMiserPerk,
	pPainPerk,
	pTraderPerk,
	pTut,
	pMissionNr,
	pWarns,
	pAdjustable,
	pFuel,
	pMarried,
	pMarriedTo[128],
};
new PlayerInfo[MAX_PLAYERS][pInfo];

enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hHealthx,
	hHealthy,
	hHealthz,
	hArmourx,
	hArmoury,
	hArmourz,
	hOwner[MAX_PLAYER_NAME],
	hDiscription[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hArm,
	hInt,
	hLock,
	hOwned,
	hRooms,
	hRent,
	hRentabil,
	hTakings,
	hVec,
	hVcol1,
	hVcol2,
	hDate,
	hLevel,
};

new HouseInfo[34][hInfo];

enum bInfo
{
    bOwned,
	bOwner[64],
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
	bProducts,
	bMaxProducts,
	bPriceProd,
};
new BizzInfo[5][bInfo];

enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
	sbInterior,
	sbProducts,
	sbMaxProducts,
	sbPriceProd,
};
new SBizzInfo[12][sbInfo];

enum pHaul
{
	pCapasity,
	pLoad,
};

new PlayerHaul[200][pHaul];

enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];

enum mInfo
{
    mTitle[128],
    mText1[128],
    mText2[128],
    mText3[128],
    mText4[128],
    mText5[128],
    mText6[128],
    mText7[128],
    mText8[128],
    mText9[128],
    mText10[128],
    mText11[128],
    mText12[128],
    mText13[128],
    mText14[128],
    mText15[128],
    mText16[128],
    mText17[128],
    mText18[128],
    mGText1[128],
    mGText2[128],
    mGText3[128],
    mGText4[128],
    mGText5[128],
    mGText6[128],
	Float:mCP1[3],
	Float:mCP2[3],
	Float:mCP3[3],
	Float:mCP4[3],
	Float:mCP5[3],
	Float:mCP6[3],
	mReward,
	mToggle,
};
new MissionInfo[mInfo];

enum kInfo
{
    kTitle[128],
    kMaker[MAX_PLAYER_NAME],
    kText1[128],
    kText2[128],
    kText3[128],
    kText4[128],
    kText5[128],
    kText6[128],
    kText7[128],
    kText8[128],
    kText9[128],
    kText10[128],
    kText11[128],
    kText12[128],
    kText13[128],
    kText14[128],
    kText15[128],
    kText16[128],
    kText17[128],
    kText18[128],
    kGText1[128],
    kGText2[128],
    kGText3[128],
    kGText4[128],
    kGText5[128],
    kGText6[128],
	Float:kCP1[3],
	Float:kCP2[3],
	Float:kCP3[3],
	Float:kCP4[3],
	Float:kCP5[3],
	Float:kCP6[3],
	kNumber,
	kReward,
	kToggle,
};
new PlayMission[kInfo];

enum iInfo
{
	iAdmin[128],
	iMOTD[128],
	iPassword[128],
	iNeedPass,
	iLock,
	iPlayers,
};
new IRCInfo[10][iInfo];

new RandCars[20][1] = {
{496},{542},{507},{585},
{466},{492},{579},{559},
{400},{551},{516},{475},
{561},{550},{566},{558},
{562},{562},{603},{560}
};


new RandLCars[1][1] = {
{431}// coach
};


new GunPrice[30][1] = {
{500}, //parachute
{400}, //golfclub
{300}, //nightstick
{200}, //knife
{700}, //baseballbat
{300}, //shovel
{100}, //poolcue
{400}, //purpledildo
{780}, //whitedildo
{560}, //longwhitedildo
{530}, //whitedildo2
{200}, //flowers
{600}, //cane
{500}, //sdpistol
{1000}, //colt45
{3000}, //deagle
{2000}, //Tec9
{3000}, //uzi
{2500}, //mp5
{3000}, //shotgun
{6000}, //spas12
{4000}, //sawnoff
{5000}, //ak47
{5000}, //m4
{1000}, //rifle
{25}, //pistolammo
{40}, //shotgunammo
{25}, //smgammo
{40}, //assaultammo
{50} //rifle
};

new JoinPed[70][1] = {
{280},//POLICE_FORCE
{281},
{282},
{283},
{284},
{266},
{288},
{71},
{166},
{295},
{148},
{286},//FBI/ATF
{164},
{163},
{287},//NATIONAL_GUARD
{285},
{70},//FIRE/AMBULANCE
{274},
{275},
{276},
{277},
{278},
{279},
{258},//LA_COSA_NOSTRA
{112},
{126},
{125},
{124},
{113},
{111},
{98},
{120},//YAKUZA
{121},
{122},
{123},
{169},
{186},
{228},
{127},//HITMANS
{165},
{186},
{93},
{141},
{148},//NEWS_REPORTERS
{188},
{187},
{255},//TAXI_CAB_COMPANY
{253},
{59},//DRIVING/FLYING_SCHOOL
{60},//DRIVING/FLYING_SCHOOL
{76},//DRIVING/FLYING_SCHOOL
{150},//DRIVING/FLYING_SCHOOL
{105},//GROVE STREET FAMILY
{106},//GROVE STREET FAMILY
{107},//GROVE STREET FAMILY
{271},//GSF
{269},//GSF
{102},//BALLAS
{103},//BALLAS
{104},//BALLAS
{108},//LSV
{109},//LSV
{110},//LSV
{114},//AZTEC
{115},//AZTEC
{116},//AZTEC
{100},//Vance
{247},//Vance
{248},//Vance
{254}//Vance
};

new Peds[217][1] = {
{33},
{281},//TEAM_ADMIN
{286},{287},{228},{113},{120},{147},{294},{227},{61},{171},
{247},//CIVILIANS DOWN HERE
{248},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{264},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{292},//CESAR
{293},//OGLOC
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};

//------------------------------------------------------------------------------------------------------

main()
{
print(" ");
print(" ");
print(" The GodFather");
print(" forum.script-wise.in.th");
print("_____________________");
print(" ");
}

//------------------------------------------------------------------------------------------------------

public SearchingHit(playerid)
{
	new string[256];
	new giveplayer[MAX_PLAYER_NAME];
	new searchhit = 0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(searchhit == 0)
		    {
			    if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMember] != 8)
			    {
			        GetPlayerName(i, giveplayer, sizeof(giveplayer));
			        searchhit = 1;
			        hitfound = 1;
			        hitid = i;
			        for(new k=0; k<MAX_PLAYERS; k++)
					{
						if(IsPlayerConnected(k))
						{
				        	if(PlayerInfo[k][pMember] == 8 || PlayerInfo[k][pLeader] == 8)
				        	{
	               				SendClientMessage(k, COLOR_WHITE, "|__________________ ข้อความ __________________|");
				                SendClientMessage(k, COLOR_DBLUE, "*** ข้อความ: เป้าหมายได้เข้ามาแล้ว ***");
				                format(string, sizeof(string), " เป้าหมาย: %s   ID: %d   ค่าหัว: $%d", giveplayer, i, PlayerInfo[i][pHeadValue]);
								SendClientMessage(k, COLOR_DBLUE, string);
								SendClientMessage(k, COLOR_YELLOW, "ใช้ givehit ไอดีตนเอง, เพื่อยืนยันภารกิจในการล่าเป้าหมาย");
								SendClientMessage(k, COLOR_WHITE, "|________________________________________________________|");
	      					}
					    }
					}
					return 0;
			    }
			}
		}
	}
	if(searchhit == 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "   No Contracts available !");
	}
	return 0;
}
public IO1(playerid)
{
	ClearChatbox(playerid, 5);
	SendClientMessage(playerid, 0xF62A69AA, " ก่อนอื่น (คุณจะไม่สามารถขยับตัวได้จนกว่าจะสอบเสร็จ)");
	SendClientMessage(playerid, 0xF6F6A9AA, " ก่อนอื่น จะต้องบอกว่า การขับรถนั้น สิ่งที่ควรจะต้องระวังในการขับรถคือ");
	SendClientMessage(playerid, 0xF6F6A9AA, " ห้ามขับเสี่ยงๆ เมื่อไหร่ที่คุณขับรถ, คุณจะต้องคอยระวังตลอดเวลา");
	SendClientMessage(playerid, 0xF6F6A9AA, " ในสถานที่นี้ รร. สอนขับรถแห่ง San Fierro, เราจะพยายามให้คุณขับรถให้ระวัง เมื่อเป็นไปได้");
}
public IO2(playerid)
{
	ClearChatbox(playerid, 5);
	SendClientMessage(playerid, 0xF62A69AA, "__________การจำกัดความเร็ว__________");
	SendClientMessage(playerid, 0xF6F6A9AA, "แน่นอนว่าขับรถด้วยความเร็วในเมือง มันอาจจะดูเท่");
	SendClientMessage(playerid, 0xF6F6A9AA, "แต่ถ้ารถเกิดการทรงตัวละ อุบัติเหตุอาจเกิดขึ้นได้");
	SendClientMessage(playerid, 0xF6F6A9AA, "และถ้าตำรวจเห็น คุณก็อาจโดนค่าปรับเอาก็ได้");
	SendClientMessage(playerid, 0xF6F6A9AA, "จงจำไว้อย่าขับรถเร็วหรือช้าเกินไป");
}
public IO3(playerid)
{
	SendClientMessage(playerid, 0xF6F6A9AA, "และมีอีกสิ่งหนึ่งที่สำคัญคือการคุณโทรศัพท์ขณะขับรถ");
	SendClientMessage(playerid, 0xF6F6A9AA, "ระหว่างตอนขับรถก็เป็นสาเหตุเสี่ยงเช่นกันที่จะทำให้เกิดอุบัติเหตุได้");
	SendClientMessage(playerid, 0xF6F6A9AA, "กรุณาจอดรถข้างทางเพื่อคุยธุระให้เสร็จก่อน แล้วจึงค่อยขับต่อไป");
	SendClientMessage(playerid, 0xF62A69AA, "___________________________________");
}
public IO4(playerid)
{
	ClearChatbox(playerid, 5);
	SendClientMessage(playerid, 0xF62A69AA, "__________สัญลักษณ์บนถนน__________");
	SendClientMessage(playerid, 0xF62A69AA, " ");
	SendClientMessage(playerid, 0xF6F6A9AA, "ถ้ามีเส้นสีขาวบนขอขถนนแสดงว่า คุณสามารถจอดได้ทุกเวลา ณ ที่นี่");
	SendClientMessage(playerid, 0xF6F6A9AA, "ถ้าคุณเห็นรถพยาบาลหรือรถของหน่วยงานรัฐเปิดหวอให้คุณจอดรถริมทางก่อน");
	SendClientMessage(playerid, 0xF6F6A9AA, "ถ้าเค้าขับผ่านไป คุณก็ขับรถของคุณต่อ");
	SendClientMessage(playerid, 0xF62A69AA, "__________________________________");
}
public IO5(playerid)
{
	ClearChatbox(playerid, 5);
	SendClientMessage(playerid, 0xF62A69AA, "________กฏการขับรถบนถนน__________");
	SendClientMessage(playerid, 0xF6F6A9AA, "ที่นี่เราให้คุณขับรถชิดเลนซ้าย และการจอดรถให้คุณจอดบนฟุตบาท");
	SendClientMessage(playerid, 0xF6F6A9AA, "และไม่ต้องสนใจไฟแดง ไฟเขียว แค่แน่ใจว่าไม่มีรถผู้อื่นอยู่");
	SendClientMessage(playerid, 0xF6F6A9AA, "คุณก็สามารถขับรถคุณต่อไปได้");
	SendClientMessage(playerid, 0xF62A69AA, "_________________________________");
}
public IO6(playerid)
{
 	SendClientMessage(playerid, 0xF60000AA, "จบการสอนแค่นี่ !");
 	SendClientMessage(playerid, 0xF60000AA, "เราหวังว่าคุณคงจะเข้าใจ ขอให้โชคดีในการสอบ !");
	SendClientMessage(playerid, 0xF62A69AA, "________________________________ ");
	SetTimerEx("DKT1", 5000, 0, "d", playerid);
}

public DKT1(playerid)
{
	ClearChatbox(playerid, 5);
	SendClientMessage(playerid, 0xF62A69AA, " ยินดีต้อนรับสู่ข้อสอบของกรมการขนส่งของ San Fierro");
	SendClientMessage(playerid, 0xF6F6A9AA, " ใน DKT (Driving Knowledge Test), คุณจะถูกถามคำถาม, เพื่อทดสอบความรู้ที่ได้มา");
	SendClientMessage(playerid, 0xF6F6A9AA, " ตอนคุณเรียนบทฝึกสอนในเริ่มแรก คุณจะต้องตอบถูกทั้งหมดทุกข้อ");
	SendClientMessage(playerid, 0xF6F6A9AA, " ถ้าคุณตอบผิดแม้แต่ข้อเดียว คือคุณตก, แต่เราจะไม่เอาเงินคุณไป");
	SendClientMessage(playerid, 0xF6F6A9AA, " ตอนคุณจะตอบคำถาม, แค่พิมพ์เลขที่อยู่ข้างหน้าของคำตอบ");
	SendClientMessage(playerid, 0xF6F6A9AA, " ถ้าคำถามนั้นๆมี 2 คำตอบ, ถ้าคำถามนั้นคุณคิดว่า ตอบ 1 กับ 2, ให้พิมพ์ 1/2");
	SetTimerEx("DKT2", 20000, 0, "d", playerid);
}

public DKT2(playerid)
{
    DKT[playerid] = 1;
	ClearChatbox(playerid, 6);
 	SendClientMessage(playerid, 0xF62A69AA, "|______________________ คำถามที่ 1 ______________________|");
	SendClientMessage(playerid, 0xF6F6A9AA, "ความปลอดภัยในการขับขี่เป็นเรื่องสำคัญหรือไม่?");
	SendClientMessage(playerid, 0xF6F6A9AA, "1: สำคัญ");
	SendClientMessage(playerid, 0xF6F6A9AA, "2: ไม่เห็นสำคัญตรงไหนเลยไม่ต้องไปสน");
	SendClientMessage(playerid, 0xF6F6A9AA, "3: You Suck!!");
	SendClientMessage(playerid, 0xF62A69AA, "|________________________________________________________|");
	SendClientMessage(playerid, 0xF62A69AA, " ");
	SendClientMessage(playerid, 0xF62A69AA, " ");
}

public DKT3(playerid)
{
    DKT[playerid] = 2;
	ClearChatbox(playerid, 5);
 	SendClientMessage(playerid, 0xF62A69AA, "|______________________ คำถามที่ 2 ______________________|");
	SendClientMessage(playerid, 0xF6F6A9AA, "การจำกัดความเร็วในการขับสำคัญเพราะว่า?");
	SendClientMessage(playerid, 0xF6F6A9AA, "1: ไม่เห็นสำคัญตรงไหนเลย");
	SendClientMessage(playerid, 0xF6F6A9AA, "2: การขับรถเร็วจะทำให้เสียการทรงตัว / ควบคุม");
	SendClientMessage(playerid, 0xF6F6A9AA, "3: การขับรถเร็วจะทำให้มองไม่เห็นทาง");
	SendClientMessage(playerid, 0xF6F6A9AA, "4: การขับรถเร็วทำให้เราดูเท่ขึ้น");
	SendClientMessage(playerid, 0xF62A69AA, "|________________________________________________________|");
	SendClientMessage(playerid, 0xF62A69AA, " ");
}

public DKT4(playerid)
{
    DKT[playerid] = 3;
	ClearChatbox(playerid, 5);
 	SendClientMessage(playerid, 0xF62A69AA, "|______________________ คำถามที่ 3 ______________________|");
	SendClientMessage(playerid, 0xF6F6A9AA, "ทำไมการคุยโทรศัพท์ขณะขับรถถูกตัดสินว่าอันตราย?");
	SendClientMessage(playerid, 0xF6F6A9AA, "1: โทรศัพท์อาจระเบิดได้");
	SendClientMessage(playerid, 0xF6F6A9AA, "2: เพราะทำให้ต้องซื้อโทรศัพท์ใหม่");
	SendClientMessage(playerid, 0xF6F6A9AA, "3: การคุยโทรศัพท์ระหว่างขับรถมีโอกาสเสี่ยงที่จะทำให้เกิดอุบัติเหตุ");
	SendClientMessage(playerid, 0xF6F6A9AA, "4: มันอันตรายตรงไหน?");
	SendClientMessage(playerid, 0xF62A69AA, "|________________________________________________________|");
	SendClientMessage(playerid, 0xF62A69AA, " ");
}

public DKT5(playerid)
{
    DKT[playerid] = 4;
	ClearChatbox(playerid, 5);
	SendClientMessage(playerid, 0xF62A69AA, "|______________________ คำถามที่ 4 ______________________|");
	SendClientMessage(playerid, 0xF6F6A9AA, "ถ้าคุณขับรถอยู่แล้วเห็นรถพยาบาลหรือรถของหน่วยงานรัฐเปิดหวอ คุณจะทำอย่างไร?");
	SendClientMessage(playerid, 0xF6F6A9AA, "1: ลงไปงัดหน้าแมร่งเลย");
	SendClientMessage(playerid, 0xF6F6A9AA, "2: หลบข้างทาง");
	SendClientMessage(playerid, 0xF6F6A9AA, "4: ไปวางระเบิดc4ใส่รถหน่วยรัฐซะเลย");
	SendClientMessage(playerid, 0xF6F6A9AA, "3: ตบเกรียนหน่วยรัฐ");
	SendClientMessage(playerid, 0xF62A69AA, "|________________________________________________________|");
	SendClientMessage(playerid, 0xF62A69AA, " ");
}

public DKT6(playerid)
{
    DKT[playerid] = 5;
	ClearChatbox(playerid, 5);
 	SendClientMessage(playerid, 0xF62A69AA, "|______________________ คำถามที่ 5 ______________________|");
	SendClientMessage(playerid, 0xF6F6A9AA, "ถ้าคุณเจอตำรวจกำลังตั้งด่านตรวจอยู่คุณจะทำยังไง?");
	SendClientMessage(playerid, 0xF6F6A9AA, " 1: ขับรถแหกด่านไปเลย");
	SendClientMessage(playerid, 0xF6F6A9AA, " 2: ขับรถไปทางอื่น");
	SendClientMessage(playerid, 0xF6F6A9AA, " 3: จอดรถให้ตรวจ");
	SendClientMessage(playerid, 0xF6F6A9AA, " 4: ลงไปงัดหน้าแมร่งเลย");
	SendClientMessage(playerid, 0xF62A69AA, "|________________________________________________________|");
}

public healmax100(playerid)
{
	SetPlayerHealth(playerid, 100);
}

public cprheal(playerid)
{
					SetPlayerHealth(playerid, 100);
					TogglePlayerControllable(playerid, 1);
					PlayerFrozened[playerid] = 0;
					ClearAnimations(playerid);
					gunplayerid[playerid] = 0;
					ammoplayerid[playerid] = 0;
					SetPlayerHealth(playerid, 100);
					ClearAnimations(playerid);
}

public cprhp(playerid)
{
	deathcpr[playerid] = 2;
}

public SKPoll()
{
	if(poll == 1)
	{
       SendClientMessageToAll(COLOR_YELLOW, "Poll Topic: การสำรวจล้มเหลว, ไม่มีผู้ใช้สิทธิ์ออกเสียงลงคะแนน");
	   poll = 0;
	   pchoice = 0;
	   pmaker = 999;
       return 1;
	}
	new string[256];
	new all;
	new nv;
	new nvote;
	new v1 = 0;
	new v2 = 0;
	new v3 = 0;
	new v4 = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	   if(IsPlayerConnected(i))
	   {
	    	all++;
	    	if(Vote[i] == 0)
	    	{
				  nv ++;
	    	}
	    	else if(Vote[i] == 1)
	    	{
				  v1 ++;
	    	}
	    	else if(Vote[i] == 2)
	    	{
				  v2 ++;
	    	}
	    	else if(Vote[i] == 3)
	    	{
				  v3 ++;
	    	}
	    	else if(Vote[i] == 4)
	    	{
				  v4 ++;
	    	}
	    	else if(Vote[i] == 99)
	    	{
				  nvote ++;
	    	}
	    	Vote[i] = 0;
       }
	}
	if(nv <= all/2)
	{
	    format(string, sizeof(string), "Poll Close: การสำรวจความคิดเห็นได้จบลงแล้ว, ผู้ลงคะแนน %d คน จากทั้งหมด %d คน",all-nv,all);
		SendClientMessageToAll(COLOR_YELLOW, string);
		if(v1 > v2 && v1 > v3 && v1 > v4)
		{
            poll = 1001;
		    SetTimer("PollResult",1500,false);
		}
		else if(v2 > v1 && v2 > v3 && v2 > v4)
		{
            poll = 1002;
		    SetTimer("PollResult",1500,false);
		}
		else if(v3 > v1 && v3 > v2 && v3 > v4)
		{
            poll = 1003;
		    SetTimer("PollResult",1500,false);
		}
		else if(v4 > v1 && v4 > v2 && v4 > v3)
		{
            poll = 1004;
		    SetTimer("PollResult",1500,false);
		}
		else if(nvote > v4 && nvote > v1 && nvote > v2 && nvote > v3)
		{
            poll = 1098;
		    SetTimer("PollResult",1500,false);
		}
		else
		{
            poll = 1099;
		    SetTimer("PollResult",1500,false);
		}
		new sendername[64];
		GetPlayerName(pmaker, sendername, sizeof(sendername));
	    format(string, sizeof(string), "Poll Topic: %s  Maker: %s",Poll,sendername);
		SendClientMessageToAll(COLOR_YELLOW, string);
		if(pchoice == 2) {
	    format(string, sizeof(string), "Poll Count: %s[%d] | %s[%d] | NoVote[%d]",V1,v1,V2,v2,nvote);
		SendClientMessageToAll(COLOR_YELLOW, string); }
		else if(pchoice == 3) {
        format(string, sizeof(string), "Poll Count: %s[%d] | %s[%d] | %s[%d] | NoVote[%d]",V1,v1,V2,v2,V3,v3,nvote);
		SendClientMessageToAll(COLOR_YELLOW, string); }
		else if(pchoice == 4) {
	    format(string, sizeof(string), "Poll Count: %s[%d] | %s[%d] | %s[%d] | %s[%d] | NoVote[%d]",V1,v1,V2,v2,V3,v3,V4,v4,nvote);
		SendClientMessageToAll(COLOR_YELLOW, string); }
	}
    else
	{
	    SendClientMessageToAll(COLOR_YELLOW, "Poll Fail: การสำรวจล้มเหลว, มีผู้ใช้สิทธิ์ไม่ถึงครึ่งของจำนวนคนทั้งหมด");
	    poll = 0;
	    pchoice = 0;
	    pmaker = 999;
	}
	return 1;
}

public PollResult()
{
	new string[256];
	if(poll == 1001)
	{
	        format(string, sizeof(string), "Poll Result: (1):%s ได้รับการโหวตมากที่สุด",V1);
		    SendClientMessageToAll(0xFFFFA6FF, string);
	}
	if(poll == 1002)
	{
	        format(string, sizeof(string), "Poll Result: (2):%s ได้รับการโหวตมากที่สุด",V2);
		    SendClientMessageToAll(0xFFFFA6FF, string);
	}
	if(poll == 1003)
	{
	        format(string, sizeof(string), "Poll Result: (3):%s ได้รับการโหวตมากที่สุด",V3);
		    SendClientMessageToAll(0xFFFFA6FF, string);
	}
	if(poll == 1004)
	{
	        format(string, sizeof(string), "Poll Result: (4):%s ได้รับการโหวตมากที่สุด",V4);
		    SendClientMessageToAll(0xFFFFA6FF, string);
	}
	if(poll == 1098)
	{
		    SendClientMessageToAll(0xFFFFA6FF, "Poll Result: ไม่สามารถสรุปผลได้แน่ชัด, มีผู้ใช้สิทธิ์ NoVote มากที่สุด");
	}
	if(poll == 1099)
	{
		    SendClientMessageToAll(0xFFFFA6FF, "Poll Result: ไม่สามารถสรุปผลได้แน่ชัด, คะแนนเสียงเท่ากัน");
	}
	poll = 0;
	pchoice = 0;
	pmaker = 999;
}

public login(playerid)
{
		SendClientMessage(playerid, 0xF6F6A9AA, "SERVER: โปรดอ่าน");
		SendClientMessage(playerid, 0xFF0000FF, "SERVER: เกมส์นี้เหมาะสำหรับผู้เล่นที่มีอายุ 17 ปีขึ้นไป");
		SendClientMessage(playerid, COLOR_WHITE, "SERVER: ตัวละครในเกมส์ถูกควบคุมด้วยมนุษย์ด้วยกัน ดังนั้นนี้คือสังคมจำลอง โปรดใช้สติในการเล่นเกมส์");
		SendClientMessage(playerid, 0xF6F6A9AA, "SERVER: คุณได้ลงทะเบียนไว้แล้วกรุณาพิมพ์ /login เพื่อเข้าเล่น");
}

public register(playerid)
{
		SendClientMessage(playerid,0xBDF620AA,"SERVER: โปรด /register เพื่อสมัครเข้าเล่น");
}

public ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
	return 1;
}
public ResetRoadblockTimer()
{
	roadblocktimer = 0;
	return 1;
}
public RemoveRoadblock(playerid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] == 1 && PlayerInfo[i][pLeader] == 1)
			{
				DisablePlayerCheckpoint(i);
			}
		}
	}
	DestroyDynamicObject(PlayerInfo[playerid][pRoadblock]);
	PlayerInfo[playerid][pRoadblock] = 0;
	return 1;
}
public ExtortionBiz(bizid, money)
{
    new string[256];
    format(string, sizeof(string), "No-one");
    if(strcmp(BizzInfo[bizid][bExtortion],string, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(string, sizeof(string), "%s", name);
			strmid(wstring, string, 0, strlen(string), 255);
			if(strcmp(BizzInfo[bizid][bExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    SafeGivePlayerMoney(i, value);
			    BizzInfo[bizid][bTill] -= value;
			}
		}
	}
	return 1;
}

public ExtortionSBiz(bizid, money)
{
    new string[256];
    format(string, sizeof(string), "No-one");
    if(strcmp(SBizzInfo[bizid][sbExtortion],string, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        new name[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			GetPlayerName(i, name, sizeof(name));
			format(string, sizeof(string), "%s", name);
			strmid(wstring, string, 0, strlen(string), 255);
			if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    SafeGivePlayerMoney(i, value);
			    SBizzInfo[bizid][sbTill] -= value;
			}
		}
	}
	return 1;
}

public PreparePaintball()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            SendClientMessage(i, COLOR_YELLOW, "Paintball Match will start in 20 seconds.");
	        }
		}
	}
 	SetTimer("StartPaintball", 20000, 0);
	return 1;
}

public StartPaintball()
{
	PaintballRound = 1;
	StartingPaintballRound = 0;
	PaintballWinner = 999;
	PaintballWinnerKills = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            ResetPlayerWeapons(i);
	            GivePlayerWeapon(i, 29, 999);
	            TogglePlayerControllable(i, 1);
	            SendClientMessage(i, COLOR_YELLOW, "Paintball Match started, 4 minutes left.");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	        }
	    }
	}
	SetTimer("PaintballEnded", 240000, 0);
	return 1;
}

public PaintballEnded()
{
	new string[256];
	new name[MAX_PLAYER_NAME];
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            if(IsPlayerConnected(PaintballWinner))
	            {
	                GetPlayerName(PaintballWinner, name, sizeof(name));
	                format(string,sizeof(string), "** %s won the Paintball Match with %d kills **",name,PaintballWinnerKills);
	                SendClientMessage(i, COLOR_WHITE, string);
	            }
	            ResetPlayerWeapons(i);
	            PlayerPaintballing[i] = 0;
	            SetPlayerPos(i, SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ]);
	        }
		}
	}
	AnnouncedPaintballRound = 0;
    PaintballRound = 0;
	return 1;
}

public PrepareKarting()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 9;
				SetPlayerCheckpoint(i,2308.3540,-2354.0039,12.6842,8.0);
				SendClientMessage(i, COLOR_YELLOW, "Kart Race will start in 20 seconds, go to the starting line.");
	        }
		}
	}
	SetTimer("StartKarting", 20000, 0);
	return 1;
}

public StartKarting()
{
	KartingRound = 1;
	StartingKartRound = 0;
	EndingKartRound = 0;
	FirstKartWinner = 999;
	SecondKartWinner = 999;
	ThirdKartWinner = 999;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 10;
	            SendClientMessage(i, COLOR_YELLOW, "Green light, go go go !");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	            SetPlayerCheckpoint(i,2308.3540,-2354.0039,12.6842,8.0);
	        }
	    }
	}
	SetTimer("KartingEnded", 240000, 0);
	return 1;
}

public GetCar(playerid)
{
	new carkey = PlayerInfo[playerid][pPcarkey];
	new carid = CreateVehicle(CarInfo[carkey][cModel],CarInfo[carkey][cLocationx],CarInfo[carkey][cLocationy],CarInfo[carkey][cLocationz],CarInfo[carkey][cAngle],CarInfo[carkey][cColorOne],CarInfo[carkey][cColorTwo],300000);
	VehicleGet[playerid] = carid;
	VehicleKey[carid] = carkey;
}

public KartingEnded()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 0;
	            DisablePlayerCheckpoint(i);
	        }
		}
	}
	AnnouncedKartRound = 0;
    KartingRound = 0;
	return 1;
}

public DollahScoreUpdate()
{
	new LevScore;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
   			LevScore = PlayerInfo[i][pLevel];
			SetPlayerScore(i, LevScore);
		}
	}
	return 1;
}

public Encrypt(string[])
{
	for(new x=0; x < strlen(string); x++)
	  {
		  string[x] += (3^x) * (x % 15);
		  if(string[x] > (0xff))
		  {
			  string[x] -= 256;
		  }
	  }
	return 1;
}

stock right(source[], len)
{
	new retval[MAX_STRING], srclen;
	srclen = strlen(source);
	strmid(retval, source, srclen - len, srclen, MAX_STRING);
	return retval;
}

public Spectator()
{
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(KickPlayer[i]==1) { Kick(i); }
			else if(KickPlayer[i]==2) { Ban(i); }
			//if(GetPlayerPing(i) >= 500 && PlayerInfo[i][pAdmin] < 1) { Kick(i); }
			if(Spectate[i] < 253 && Spectate[i] != 255)
			{
				SetPlayerColor(i,COLOR_SPEC);
				TogglePlayerControllable(i, 0);
				new targetid = Spectate[i];
				if(IsPlayerConnected(targetid))
				{
				    TogglePlayerSpectating(i, 1);
				    if(PlayerInfo[i][pAdmin] >= 1)
				    {
				        new Float:health;
					    new name[MAX_PLAYER_NAME];
					    GetPlayerName(targetid, name, sizeof(name));
					    GetPlayerHealth(targetid, health);
					    format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~y~%s(ID:%d)~n~~y~health:%.1f",name,targetid,health);
					    GameTextForPlayer(i, string, 2500, 3);
				    }
				    if(IsPlayerInAnyVehicle(targetid))
					{
					    new carid = GetPlayerVehicleID(targetid);
					    PlayerSpectateVehicle(i, carid);
					}
					else
					{
					    PlayerSpectatePlayer(i, targetid);
					}
					if(GetPlayerInterior(targetid) == 0)
					{
						SetPlayerInterior(i,0);
					}
					else if(GetPlayerInterior(targetid) > 0)
					{
						SetPlayerInterior(i,GetPlayerInterior(targetid));
					}
				}//Targetid connected
			}
			if(Spectate[i] == 253)
			{
				TogglePlayerControllable(i, 1);
				TogglePlayerSpectating(i, 0);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				Unspec[i][sLocal] = 255;
				SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]-1.0, 1.0, -1, -1, -1, -1, -1, -1);
				gTeam[i] = PlayerInfo[i][pTeam];
				SetPlayerToTeamColor(i);
				MedicBill[i] = 0;
				if(PlayerInfo[i][pDonateRank] > 0)
		        {
		            SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pModel], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(i);
					SetCameraBehindPlayer(i);
		        }
		        else
		        {
					SpawnPlayer(i);
				}
				Spectate[i] = 255;
			}
			if(Spectate[i] == 254)
			{
				TogglePlayerControllable(i, 1);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				SetPlayerPos(i, Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 256)
			{
				SetPlayerToTeamColor(i);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 257)
			{
				Spectate[i] = 254;
			}
		}
	}
}

//------------------------------------------------------------------------------------------------------

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(gTeam[playerid] == 1 || gTeam[playerid] >= 3)
	{
		if (IsACopCar(vehicleid) && !ispassenger)
		{
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z);
			SendClientMessage(playerid,COLOR_GREY," คุณไม่มีกุญแจสำหรับรถคันนี้ !");
			PlayerPlaySound(playerid, 1085, X, Y, Z);
		}
	}
	return 0;
}

public IsAnInstructor(playerid)
{ 
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==11)
		{
		    return 1;
		}
		if(leader==11)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==5 || member==6 || member==8 || member== 12 || member==13 || member==14 || member==15 || member==16 || member==17 || member==18 || member==20 )
		{
		    return 1;
		}
		if(leader==5 || leader==6 || leader==8 || leader==12 || leader==13 || leader==14 || leader==15 || leader==16 || leader==17 || leader==18 ||leader==20 )
		{
		    return 1;
		}
	}
	return 0;
}

public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][pLeader];
	    new member = PlayerInfo[playerid][pMember];
	    if(member==1 || member==2 || member==3 || member==7|| member==19 || member==21 || member==22)
		{
		    return 1;
		}
		else if(leader==1 || leader==2 || leader==3 || leader==7|| leader==19 || leader==21 || leader==22)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(25.0,playerid,207.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
		    return 1;
		}
		else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047))
		{//Zip & Victim
		    return 1;
		}
	}
	return 0;
}

public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{//SF
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{//LV
		    return 1;
		}
	}
	return 0;
}

public IsAtFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
	}
	return 0;
}

public IsAtCookPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
	    {//Cluckin Bell
	        return 1;
	    }
	    else if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
		{//Burgershot
		    return 1;
		}
		else if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
		{//Well Stacked Pizza
		    return 1;
		}
	}
	return 0;
}

public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797))
		{//In grove street bar (with girlfriend), and in Havanna
		    return 1;
		}
		else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734))
		{//PIG Pen
		    return 1;
		}
	}
	return 0;
}

public IsABoat(carid)
{
	if(carid == 33 || carid == 34 || carid == 172 || carid == 173 || carid == 174|| carid == 256 || carid == 257 || carid == 258 || carid == 259|| carid == 260|| carid == 198 || carid == 199|| carid == 200|| carid == 201)
	{
		return 1;
	}
	return 0;
}

public IsAPlane(carid)
{
	if(carid==28||carid==35||carid==36||carid==37||carid==38||carid==39||carid==72||carid==75||carid==85||carid==171||carid==202||carid==205)
	{
		return 1;
	}
	return 0;
}

public IsACopCar(carid)
{
	if(carid >= 1 && carid <= 44 || carid >= 148 && carid <= 151 || carid >= 172 && carid <= 176 || carid == 164 || carid == 166 || carid == 167 || carid == 168)
	{
		return 1;
	}
	return 0;
}
public IsAnOwnableCar(carid)
{
	if(carid>=288&&carid<=999)
	{
		return 1;
	}
	return 0;
}

public IsACopBoat(carid)
{
	if(carid == 33 || carid == 34|| carid == 198 || carid == 199|| carid == 200|| carid == 201)
	{
		return 1;
	}
	return 0;
}

public IsACopsCar(carid)
{
	if(carid >= 1 && carid <= 28)
	{
		return 1;
	}
	return 0;
}

public IsAFbiCar(carid)
{
	if(carid >= 40 && carid <= 44 || carid >= 166 && carid <= 168)
	{
		return 1;
	}
	return 0;
}

public IsAMarinesCar(carid)
{
	if(carid >= 29 && carid <= 32 || carid >= 35 && carid <= 39 || carid >= 148 && carid <= 151 || carid >= 172 && carid <= 176 || carid == 164)
	{
		return 1;
	}
	return 0;
}

public IsAnAmbulance(carid)
{
	if(carid >= 45 && carid <= 49)
	{
		return 1;
	}
	return 0;
}

public IsABike(carid)
{
	if(carid >= 137 && carid <= 146)
	{
		return 1;
	}
	return 0;
}

public IsATruck(carid)
{
	if(carid==124||carid==125||carid==126||carid==127)
	{
		return 1;
	}
	return 0;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerConnect(playerid)
{
    SetPlayerMapIcon(playerid, 55, -2026.7444,-105.9794,38.9219, 52, 1 );
    new PlayerName[MAX_PLAYER_NAME];
	new joiner[256];
	GetPlayerName(playerid, PlayerName, sizeof(PlayerName));
	GetPlayerName(playerid, joiner, sizeof(joiner));
	format(joiner,sizeof(joiner),"*** %s ได้เชื่อมต่อกับเซิฟเวอร์ [Joiner]",joiner);
	RentCarKey[playerid] = 999;
    SendClientMessageToAll(COLOR_GRAD4,joiner);
	if(Security != 0)
	{
	    SendClientMessage(playerid, COLOR_YELLOW, "Host has broken one of the Agreement rules, action has been taken.");
	    Kick(playerid);
	    return 1;
	}
	gActivePlayers[playerid]++;
	numplayers++;
	new plname[MAX_PLAYER_NAME];
	new string[MAX_PLAYER_NAME];
	SelectChar[playerid] = 0; HidePM[playerid] = 0; PhoneOnline[playerid] = 0;
	SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 0;
	GettingJob[playerid] = 0; GuardOffer[playerid] = 999; GuardPrice[playerid] = 0;
    ApprovedLawyer[playerid] = 0; CallLawyer[playerid] = 0; WantLawyer[playerid] = 0;
	KickPlayer[playerid] = 0; CurrentMoney[playerid] = 0; UsedFind[playerid] = 0;
	CP[playerid] = 0; Robbed[playerid] = 0; SpawnChange[playerid] = 1;
	CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; CarCalls[playerid] = 0;
	RobbedTime[playerid] = 0; MoneyMessage[playerid] = 0; Condom[playerid] = 0;
	STDPlayer[playerid] = 0; SexOffer[playerid] = 999; SexPrice[playerid] = 0;
	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0;
	TalkingLive[playerid] = 255; LiveOffer[playerid] = 999; TakingLesson[playerid] = 0;
	RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; MapIconsShown[playerid] = 0;
	DrugOffer[playerid] = 999; PlayerCuffed[playerid] = 0; PlayerFrozened[playerid] = 0; PlayerCuffedTime[playerid] = 0;
	DrugPrice[playerid] = 0; RegistrationStep[playerid] = 0; OnCK[playerid] = 999; GettingCK[playerid] = 999;
	DrugGram[playerid] = 0; ConnectedToPC[playerid] = 0; OrderReady[playerid] = 0;
	JailPrice[playerid] = 0; MedicTime[playerid] = 0; NeedMedicTime[playerid] = 0; MedicBill[playerid] = 0; GotHit[playerid] = 0;
	WantedPoints[playerid] = 0; GoChase[playerid] = 999; GetChased[playerid] = 999; PlacedNews[playerid] = 0;
	OnDuty[playerid] = 0; OnAFK[playerid] = 0; WantedLevel[playerid] = 0; TestFishes[playerid] = 0;
	BoxWaitTime[playerid] = 0; SchoolSpawn[playerid] = 0; ChangePos2[playerid][1] = 0;
	SafeTime[playerid] = 60; TransportDuty[playerid] = 0; PlayerTied[playerid] = 0;
	BusCallTime[playerid] = 0; TaxiCallTime[playerid] = 0; MedicCallTime[playerid] = 0; MechanicCallTime[playerid] = 0;
	CprTimePoints[playerid] = 0; CprTime[playerid] = 0; FindTimePoints[playerid] = 0; FindTime[playerid] = 0; JobDuty[playerid] = 0;
	Mobile[playerid] = 255; Music[playerid] = 0; BoxOffer[playerid] = 999; PlayerBoxing[playerid] = 0;
	Spectate[playerid] = 255; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	Unspec[playerid][sLocal] = 255; FishCount[playerid] = 0;
	WritingPaper[playerid] = 0; WritingPaperNumber[playerid] = 999; WritingLine[playerid] = 0; BringingPaper[playerid] = 0; GotPaper[playerid] = 0;
	PaperOffer[playerid] = 999; ConsumingMoney[playerid] = 0;
    gLastCar[playerid] = 0; FirstSpawn[playerid] = 0;
	gOoc[playerid] = 0; gNews[playerid] = 0; BigEar[playerid] = 0; gDice[playerid] = 0; gRope[playerid] = 0; gFam[playerid] = 0;
	gSpeedo[playerid] = 0; gGas[playerid] = 0;adminonduty[playerid] = 0;
	gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0; gPlayerAccount[playerid] = 0;
	gPlayerSpawned[playerid] = 0; PlayerKarting[playerid] = 0; PlayerInKart[playerid] = 0;
	PlayerTazeTime[playerid] = 0; PlayerStoned[playerid] = 0;
	StartTime[playerid] = 0; TicketOffer[playerid] = 999; TicketMoney[playerid] = 0;
	MatsHolding[playerid] = 0; TutTime[playerid] = 0;
	gPlayerMission[playerid] = 0; TaxiAccepted[playerid] = 999; BusAccepted[playerid] = 999;
	PlayerInfo[playerid][pCash] = dollah; NoFuel[playerid] = 0;
	HireCar[playerid] = 299; PlayersChannel[playerid] = 999;
	TransportValue[playerid] = 0; TransportMoney[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = 999;
	Locator[playerid] = 0; PlayerOnMission[playerid] = 0; MissionCheckpoint[playerid] = 0;
	WatchingTV[playerid] = 0; PlayerPaintballing[playerid] = 0; PlayerPaintballKills[playerid] = 0;
	Fishes[playerid][pLastFish] = 0; Fishes[playerid][pFishID] = 0;
	VehicleGet[playerid] = 0;
	ProposeOffer[playerid] = 999; MarryWitness[playerid] = 999; MarryWitnessOffer[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999; GotProposedBy[playerid] = 999; DivorceOffer[playerid] = 999;
	SafeGivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	new Text: Text = TextDrawCreate(5.0, 431.0, "forum.script-wise.in.th");
	TextDrawUseBox(Text, 0);
	TextDrawFont(Text, 3);
	TextDrawSetShadow(Text,0);
	TextDrawSetOutline(Text,1);
	TextDrawBackgroundColor(Text,0x000000FF);
	TextDrawColor(Text,0xFFFFFFFF);
	TextDrawShowForPlayer(playerid, Text);
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pDonateRank] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pPcarkey] = 999;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pOrigin] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pAccount] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pFishes] = 0;
	PlayerInfo[playerid][pBiggestFish] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDrugs] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pFMember] = 255;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pChar] = 0;
	PlayerInfo[playerid][pContractTime] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;
	PlayerInfo[playerid][pSexSkill] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pLawSkill] = 0;
	PlayerInfo[playerid][pMechSkill] = 0;
	PlayerInfo[playerid][pJackSkill] = 0;
	PlayerInfo[playerid][pCarSkill] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	PlayerInfo[playerid][pDrugsSkill] = 0;
	PlayerInfo[playerid][pCookSkill] = 0;
	PlayerInfo[playerid][pFishSkill] = 0;
	PlayerInfo[playerid][pSHealth] = 0.0;
	PlayerInfo[playerid][pHealth] = 50.0;
	PlayerInfo[playerid][pPos_x] = 1.7308;
	PlayerInfo[playerid][pPos_y] = 31.5672;
	PlayerInfo[playerid][pPos_z] = 1199.6012;
	PlayerInfo[playerid][pInt] = 15;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pModel] = 250;
	PlayerInfo[playerid][pPnumber] = 0;
	PlayerInfo[playerid][pPhousekey] = 255;
	PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pGun1] = 0;
	PlayerInfo[playerid][pGun2] = 0;
	PlayerInfo[playerid][pGun3] = 0;
	PlayerInfo[playerid][pGun4] = 0;
	PlayerInfo[playerid][pAmmo1] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pRobber] = 0;
	PlayerInfo[playerid][pCarTime] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pPayDayHad] = 0;
	PlayerInfo[playerid][pCDPlayer] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pMissionNr] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pFuel] = 0;
	PlayerInfo[playerid][pAdjustable] = 0;
	ClearCrime(playerid);
	ClearFishes(playerid);
	ClearCooking(playerid);
	ClearGroceries(playerid);
	ClearMarriage(playerid);
	SetPlayerColor(playerid,COLOR_GRAD2);
	GetPlayerName(playerid, plname, sizeof(plname));
	format(string, sizeof(string), "%s.ini", plname);
	if(fexist(string))
	{
		gPlayerAccount[playerid] = 1;
		SendClientMessage(playerid, 0xF6F6ABAA, "SERVER: กำลังโหลดข้อมูลตัวละคร . . .");
		SendClientMessage(playerid, 0xF6F6ABAA, "SERVER: กำลังเชื่อมต่อกับเซิฟเวอร์กรุณารอซักครู่นะครับ . . .");
		SetTimerEx("login", 3500, 0, "d", playerid);
		return 1;
	}
	else
	{
		gPlayerAccount[playerid] = 0;
		SendClientMessage(playerid, 0xF6F6ABAA, "SERVER: กำลังโหลดข้อมูลของคุณกรุณารอซักครู่ . . .");
		SendClientMessage(playerid, 0xF6F6ABAA, "SERVER: คุณยังไม่ได้สมัครสมาชิกกรุณาทำการสมัครด้วย. . .");
		SetTimerEx("register", 3500, 0, "d", playerid);
		return 1;
	}
}



public JoinChannel(playerid, number, line[])
{
    if(IsPlayerConnected(playerid))
	{
	    if(strcmp(IRCInfo[number][iPassword],line, true ) == 0 )
		{
	        JoinChannelNr(playerid, number);
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "   พาสเวิดไม่ถูกต้อง !");
	    }
	}
	return 1;
}

public JoinChannelNr(playerid, number)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[256];
		new sendername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayersChannel[playerid] < 999)
	    {
			format(string, sizeof(string), "* %s ได้ออกจาก Channel.", sendername);
			SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
			IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	    }
		new channel; channel = number; channel += 1;
	    PlayersChannel[playerid] = number;
	    IRCInfo[PlayersChannel[playerid]][iPlayers] += 1;
    	new wstring[128];
		format(string, sizeof(string), "%s", sendername);
		strmid(wstring, string, 0, strlen(string), 255);
		if(strcmp(IRCInfo[number][iAdmin],wstring, true ) == 0 )
		{
		    format(string, sizeof(string), "* You have joined IRC Channel %d as the Administrator.", channel);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		else
		{
		    format(string, sizeof(string), "* You have joined IRC Channel %d, Admin: %s.", channel, IRCInfo[number][iAdmin]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
		format(string, sizeof(string), "MOTD: %s.", IRCInfo[number][iMOTD]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "* %s has joined the Channel.", sendername);
		SendIRCMessage(number, COLOR_GREEN, string);
	}
	return 1;
}

public ClearCK(ck)
{
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "No-one");
	strmid(CKInfo[ck][cSendername], string, 0, strlen(string), 255);
	strmid(CKInfo[ck][cGiveplayer], string, 0, strlen(string), 255);
	CKInfo[ck][cUsed] = 0;
	SaveCK();
	return 1;
}

public ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "No-one");
		strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return 1;
}

public ClearPaper(paper)
{
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "None");
	PaperInfo[paper][PaperUsed] = 0;
	strmid(PaperInfo[paper][PaperMaker], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperTitle], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText1], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText2], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText3], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText4], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText5], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText6], string, 0, strlen(string), 255);
	strmid(PaperInfo[paper][PaperText7], string, 0, strlen(string), 255);
	SavePapers();
	return 1;
}

public ClearFamily(family)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerInfo[i][pFMember] == family)
	        {
	            SendClientMessage(i, COLOR_LIGHTBLUE, "* The Family you are in got Deleted by the Organisation Leader, you got kicked out automaticly.");
	            PlayerInfo[i][pFMember] = 255;
	        }
	    }
	}
    new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "None");
	FamilyInfo[family][FamilyTaken] = 0;
	strmid(FamilyInfo[family][FamilyName], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyMOTD], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyLeader], string, 0, strlen(string), 255);
	format(string, sizeof(string), "0xFF000069");
	strmid(FamilyInfo[family][FamilyColor], string, 0, strlen(string), 255);
	FamilyInfo[family][FamilyMembers] = 0;
	FamilyInfo[family][FamilySpawn][0] = 0.0;
	FamilyInfo[family][FamilySpawn][1] = 0.0;
	FamilyInfo[family][FamilySpawn][2] = 0.0;
	FamilyInfo[family][FamilySpawn][3] = 0.0;
	FamilyInfo[family][FamilyInterior] = 0;
	SaveFamilies();
	return 1;
}

public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return 1;
}

public FishCost(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new cost = 0;
		switch (fish)
		{
		    case 1:
		    {
		        cost = 1;
		    }
		    case 2:
		    {
		        cost = 3;
		    }
		    case 3:
		    {
		        cost = 3;
		    }
		    case 5:
		    {
		        cost = 5;
		    }
		    case 6:
		    {
		        cost = 2;
		    }
		    case 8:
		    {
		        cost = 8;
		    }
		    case 9:
		    {
		        cost = 12;
		    }
		    case 11:
		    {
		        cost = 9;
		    }
		    case 12:
		    {
		        cost = 7;
		    }
		    case 14:
		    {
		        cost = 12;
		    }
		    case 15:
		    {
		        cost = 9;
		    }
		    case 16:
		    {
		        cost = 7;
		    }
		    case 17:
		    {
		        cost = 7;
		    }
		    case 18:
		    {
		        cost = 10;
		    }
		    case 19:
		    {
		        cost = 4;
		    }
		    case 21:
		    {
		        cost = 3;
		    }
		}
		return cost;
	}
	return 0;
}

public ClearFishes(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Fishes[playerid][pFid1] = 0; Fishes[playerid][pFid2] = 0; Fishes[playerid][pFid3] = 0;
		Fishes[playerid][pFid4] = 0; Fishes[playerid][pFid5] = 0;
		Fishes[playerid][pWeight1] = 0; Fishes[playerid][pWeight2] = 0; Fishes[playerid][pWeight3] = 0;
		Fishes[playerid][pWeight4] = 0; Fishes[playerid][pWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearFishID(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "None");
		switch (fish)
		{
		    case 1:
		    {
		        strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight1] = 0;
		        Fishes[playerid][pFid1] = 0;
		    }
		    case 2:
		    {
		        strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight2] = 0;
		        Fishes[playerid][pFid2] = 0;
		    }
		    case 3:
		    {
		        strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight3] = 0;
		        Fishes[playerid][pFid3] = 0;
		    }
		    case 4:
		    {
		        strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight4] = 0;
		        Fishes[playerid][pFid4] = 0;
		    }
		    case 5:
		    {
		        strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight5] = 0;
		        Fishes[playerid][pFid5] = 0;
		    }
		}
	}
	return 1;
}

public ClearCooking(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Cooking[playerid][pCookID1] = 0; Cooking[playerid][pCookID2] = 0; Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0; Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0; Cooking[playerid][pCWeight2] = 0; Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0; Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearCookingID(playerid, cook)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nothing");
		switch (cook)
		{
		    case 1:
		    {
		        strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight1] = 0;
		        Cooking[playerid][pCookID1] = 0;
		    }
		    case 2:
		    {
		        strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight2] = 0;
		        Cooking[playerid][pCookID2] = 0;
		    }
		    case 3:
		    {
		        strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight3] = 0;
		        Cooking[playerid][pCookID3] = 0;
		    }
		    case 4:
		    {
		        strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight4] = 0;
		        Cooking[playerid][pCookID4] = 0;
		    }
		    case 5:
		    {
		        strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight5] = 0;
		        Cooking[playerid][pCookID5] = 0;
		    }
		}
	}
	return 1;
}

public ClearGroceries(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
	    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
	    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
	}
	return 1;
}

public Lotto(number)
{
	new JackpotFallen = 0;
	new string[256];
	new winner[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Lottery News: Today the Winning Number has fallen on: %d.", number);
    OOCOff(COLOR_WHITE, string);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLottoNr] > 0)
		    {
			    if(PlayerInfo[i][pLottoNr] == number)
			    {
			        JackpotFallen = 1;
			        GetPlayerName(i, winner, sizeof(winner));
					format(string, sizeof(string), "Lottery News: %s has won the Jackpot of $%d .", winner, Jackpot);
					OOCOff(COLOR_WHITE, string);
					format(string, sizeof(string), "* You have Won $%d with your Lottery Ticket .", Jackpot);
					SendClientMessage(i, COLOR_YELLOW, string);
					ConsumingMoney[i] = 1;
					SafeGivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, COLOR_LIGHTBLUE, "*  You haven't won with your Lottery Ticket this time.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(125000); rand += 15789;
	    Jackpot = rand;
	    SaveStuff();
	    format(string, sizeof(string), "Lottery News: The new Jackpot has been started with $%d.", Jackpot);
		OOCOff(COLOR_WHITE, string);
	}
	else
	{
	    new rand = random(15000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(string, sizeof(string), "Lottery News: The Jackpot has been raised to $%d.", Jackpot);
		OOCOff(COLOR_WHITE, string);
	}
	return 1;
}


//------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------
public OnPlayerDisconnect(playerid,reason)
{
	new spieler[256];
    new string[256];
	switch(reason)
    {
        case 0:
        {
             GetPlayerName(playerid, spieler, sizeof(spieler));
             format(string, sizeof(string), "*** %s ได้หลุดออกจากเซิฟเวอร์[Crashed]", spieler);
             SendClientMessageToAll(COLOR_GRAD3, string);
             if(WantedLevel[playerid] >= 1)
             {
             GetPlayerName(playerid, spieler, sizeof(spieler));
             format(string, sizeof(string), "** ทุกหน่วยโปรดทราบ, หน่วยข่าวกรองของเราได้แจ้งมาว่า");
             SendTeamMessage(2, TEAM_BLUE_COLOR, string);
             format(string, sizeof(string), "** ผู้ต้องหา %s ได้หายตัวไปจากเกม [Crashed]", spieler);
             SendTeamMessage(2, TEAM_BLUE_COLOR, string);
             format(string, sizeof(string), "** ผู้ต้องหา %s ได้ถูกจับแล้ว", spieler);
             SendTeamMessage(2, TEAM_BLUE_COLOR, string);
             SetPlayerInterior(playerid, 10);
             SetPlayerPos(playerid,264.6288,77.5742,1001.0391);
             PlayerInfo[playerid][pJailed] = 1;
             PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(180);
             SafeGivePlayerMoney(playerid, - (WantedLevel[playerid])*(3000));
			}
		}
        case 1:
        {
             GetPlayerName(playerid, spieler, sizeof(spieler));
             format(string, sizeof(string), "*** %s ได้ออกจากเซิฟเวอร์ [Quit]", spieler);
             SendClientMessageToAll(COLOR_GRAD1, string);
             if(WantedLevel[playerid] >= 1)
             {
             GetPlayerName(playerid, spieler, sizeof(spieler));
             format(string, sizeof(string), "** ทุกหน่วยโปรดทราบ, หน่วยข่าวกรองของเราได้แจ้งมาว่า");
             SendTeamMessage(2, TEAM_BLUE_COLOR, string);
             format(string, sizeof(string), "** ผู้ต้องหา %s ได้หายตัวไปจากเกม [Quit]", spieler);
             SendTeamMessage(2, TEAM_BLUE_COLOR, string);
             format(string, sizeof(string), "** ผู้ต้องหา %s ได้ถูกจับแล้ว", spieler);
             SendTeamMessage(2, TEAM_BLUE_COLOR, string);
             SetPlayerInterior(playerid, 10);
             SetPlayerPos(playerid,264.6288,77.5742,1001.0391);
             PlayerInfo[playerid][pJailed] = 1;
             PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(180);
             SafeGivePlayerMoney(playerid, - (WantedLevel[playerid])*(3000));
			}
		}
        case 2:
        {
             GetPlayerName(playerid, spieler, sizeof(spieler));
             format(string, sizeof(string), "*** %s ได้ออกจากเซิฟเวอร์[Kick/Ban]", spieler);
             SendClientMessageToAll(COLOR_LIGHTRED, string);
             if(WantedLevel[playerid] >= 1)
             {
             GetPlayerName(playerid, spieler, sizeof(spieler));
             format(string, sizeof(string), "** ทุกหน่วยโปรดทราบ, หน่วยข่าวกรองของเราได้แจ้งมาว่า");
             SendTeamMessage(2, TEAM_BLUE_COLOR, string);
             format(string, sizeof(string), "** ผู้ต้องหา %s ได้หายตัวไปจากเกม [kick/ban]", spieler);
             SendTeamMessage(2, TEAM_BLUE_COLOR, string);
             format(string, sizeof(string), "** ผู้ต้องหา %s ได้ถูกจับแล้ว", spieler);
             SendTeamMessage(2, TEAM_BLUE_COLOR, string);
             SetPlayerInterior(playerid, 10);
             SetPlayerPos(playerid,264.6288,77.5742,1001.0391);
             PlayerInfo[playerid][pJailed] = 1;
             PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(60);
             SafeGivePlayerMoney(playerid, - (WantedLevel[playerid])*(1000));
			}
        }
	}

	DestroyVehicle(RentCarKey[playerid]);
	gActivePlayers[playerid]--;
	numplayers--;
	PlayerInfo[playerid][pAdjustable] = 1;
	OnPlayerUpdate(playerid);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(TaxiAccepted[i] < 999)
	        {
		        if(TaxiAccepted[i] == playerid)
		        {
		            TaxiAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Left the game", 5000, 1);
		            TaxiCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(BusAccepted[i] < 999)
	        {
		        if(BusAccepted[i] == playerid)
		        {
		            BusAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~Bus Caller~n~~r~Left the game", 5000, 1);
		            BusCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	    }
	}
	if(GettingCK[playerid] < 999)
	{
	    if(IsPlayerConnected(GettingCK[playerid]))
	    {
	        SendClientMessage(GettingCK[playerid], COLOR_YELLOW, "Your Character Kill has left the server, try again later.");
	        OnCK[GettingCK[playerid]] = 999;
	    }
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string, sizeof(string), "~w~Passenger left~n~~g~Earned $%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		}
	}
	if(GotHit[playerid] > 0)
	{
	    if(GetChased[playerid] < 999)
	    {
	        if(IsPlayerConnected(GetChased[playerid]))
	        {
	        	SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Your Hit has left the server.");
	            GoChase[GetChased[playerid]] = 999;
			}
	    }
	}
	if(PlayerPaintballing[playerid] != 0)
	{
	    PaintballPlayers --;
	}
	if(PlayerKarting[playerid] > 0 && PlayerInKart[playerid] > 0)
	{
	    KartingPlayers --;
	}
	if(PlayersChannel[playerid] < 999)
	{
		IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	}
	if(HireCar[playerid] != 299)
	{
		gLastDriver[HireCar[playerid]] = 300;
		gCarLock[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
	}
	if(VehicleGet[playerid] != 999)
	{
    		for(new i = 0; i < MAX_PLAYERS; i++)
    		{
    		    if(IsPlayerConnected(i))
	    		{
	        		if(IsPlayerInVehicle(i, VehicleGet[playerid]))
	        		{
	            		RemovePlayerFromVehicle(i);
	        		}
	        	}
    		}
    		DestroyVehicle(VehicleGet[playerid]);
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if(PlayerInfo[playerid][pPhousekey] != gLastCar[playerid]-1)
		{
			gCarLock[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
	if(PlayerBoxing[playerid] > 0)
	{
	    if(Boxer1 == playerid)
	    {
	        if(IsPlayerConnected(Boxer2))
	        {
	        	PlayerBoxing[Boxer2] = 0;
	        	SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer2, 5);
	        	GameTextForPlayer(Boxer2, "~r~Match interupted", 5000, 1);
			}
	    }
	    else if(Boxer2 == playerid)
	    {
	        if(IsPlayerConnected(Boxer1))
	        {
	        	PlayerBoxing[Boxer1] = 0;
	        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer1, 5);
	        	GameTextForPlayer(Boxer1, "~r~Match interupted", 5000, 1);
			}
	    }
	    InRing = 0;
     	RoundStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
    if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
    else if(TransportDuty[playerid] == 2)
	{
		BusDrivers -= 1;
	}
	if(PlayerInfo[playerid][pJob] == 11)
	{
	    if(JobDuty[playerid] == 1) { Medics -= 1; }
	}
	else if(PlayerInfo[playerid][pJob] == 7)
	{
	    if(JobDuty[playerid] == 1) { Mechanics -= 1; }
	}
}

public SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
			gOoc[playerid] = 1; gNews[playerid] = 1; gFam[playerid] = 1;
			TogglePlayerControllable(playerid, 0);
			PlayerFrozened[playerid] = 1;
			RegistrationStep[playerid] = 1;
			SendClientMessage(playerid, COLOR_YELLOW, "ยินดีต้อนรับเข้าสู่ The Samp-ROLEPLAY Server , โปรดกรอกข้อมูลลงทะเบียนไห้ครบถ้วน");
			SendClientMessage(playerid, COLOR_LIGHTRED, "คุณเป็น ชาย หรือ หญิง ? (ตอบ: ชาย หรือ หญิง)");
	    }
		new rand;
		new house = PlayerInfo[playerid][pPhousekey];
		if(PlayerPaintballing[playerid] != 0)
		{
		    ResetPlayerWeapons(playerid);
      		GivePlayerWeapon(playerid, 29, 999);
		    rand = random(sizeof(PaintballSpawns));
			SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
		    return 1;
		}
		if(deathcpr[playerid] == 3) //cprspawn
		{
			SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			SetPlayerVirtualWorld(playerid, localplayerid[playerid]);
			SetPlayerInterior(playerid, intplayerid[playerid]);
			CprTime[playerid] = 1;
			CprTimePoints[playerid] = 20;
			new string[256];
  			new name[MAX_PLAYER_NAME];
			GetPlayerName(playerid, name, sizeof(name));
			MedicBill[playerid] = 0;
			format(string, sizeof(string), "* %s ร้องขอความช่วยเหลือ", name);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SendClientMessage(playerid, COLOR_ALLDEPT, "*** หากต้องการรอหมอ ให้พิมพ์ /service medic เพื่อเรียกหมอ ***");
			SendClientMessage(playerid, COLOR_ALLDEPT, "*** หากไม่ต้องการรอหมอ ให้พิมพ์ /death เพื่อตรอมใจตาย ***");
			SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
  			ResetPlayerWeapons(playerid);
			SetPlayerArmour(playerid, 0);
			GivePlayerWeapon(playerid, gunplayerid[playerid],ammoplayerid[playerid]);
			deathcpr[playerid] = 1;
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 1)
		{
		    SetPlayerInterior(playerid, 10);
			SetPlayerPos(playerid,227.4012,110.1810,999.0156);
			SetPlayerSkin(playerid, 268);
			SendClientMessage(playerid, COLOR_LIGHTRED, "คุณยังติดคุกอยู่, กลับสู่คุก");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
		    SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,268.5777,1857.9351,9.8133);
			SetPlayerSkin(playerid, 268);
			SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
			return 1;
		}
		if(MedicBill[playerid] == 1 && PlayerInfo[playerid][pJailed] == 0 && PlayerPaintballing[playerid] == 0)
		{
		    new string[256];
		    new cut = PlayerInfo[playerid][pLevel]*100; //PlayerInfo[playerid][pLevel]*deathcost;
			SafeGivePlayerMoney(playerid, -cut);
			format(string, sizeof(string), " DOC: ค่ารักษาพยาบาลของคุณคือ $%d ", cut);
			SendClientMessage(playerid, COLOR_ALLDEPT, string);
			MedicBill[playerid] = 0;
			MedicTime[playerid] = 0;
			NeedMedicTime[playerid] = 0;
			PlayerInfo[playerid][pDeaths] += 1;
			SetPlayerHealth(playerid, 25.0);
		    /*SetPlayerInterior(playerid, 5);
	        rand = random(sizeof(gMedicSpawns));
			SetPlayerPos(playerid, gMedicSpawns[rand][0], gMedicSpawns[rand][1], gMedicSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
	        TogglePlayerControllable(playerid, 0);
	        GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~y~You are recovering from your ~r~wounds~y~...", 35000, 3);
	        MedicTime[playerid] = 1;
	        if(PlayerInfo[playerid][pDonateRank] > 0)
	        {
	            NeedMedicTime[playerid] = 30;
	        }
	        else
	        {
	        	NeedMedicTime[playerid] = 60;
			}
	        PlayerPlaySound(playerid, 1062, 0.0, 0.0, 0.0);
		    return 1;*/
		}
		SetTimerEx("cprhp", 2000, 0, "d", playerid);
		ClearAnimations(playerid);
		if(house !=255)
		{
		    if(SpawnChange[playerid]) //If 1, then you get to your house, else spawn somewhere else
		    {
				SetPlayerToTeamColor(playerid);
				SetPlayerInterior(playerid,HouseInfo[house][hInt]);
				SetPlayerPos(playerid, HouseInfo[house][hExitx], HouseInfo[house][hExity],HouseInfo[house][hExitz]); // Warp the player
				PlayerInfo[playerid][pLocal] = house;
				PlayerInfo[playerid][pInt] = HouseInfo[house][hInt];
				return 1;
			}
		}
		if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)//GROVE STREET spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, 2492.6484,-1702.5197,1018.3438);
		    PlayerInfo[playerid][pInt] = 3;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)//BALLAS spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 5);
		    SetPlayerPos(playerid, 307.7400,1122.2672,1083.8828);
		    PlayerInfo[playerid][pInt] = 5;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)//VAGOS spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 15);
		    SetPlayerPos(playerid, 2246.8684,-1161.3959,1029.7969);
		    PlayerInfo[playerid][pInt] = 15;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)//AZTECAS spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 10);
		    SetPlayerPos(playerid, 2261.0935,-1222.1864,1049.0234);
		    PlayerInfo[playerid][pInt] = 10;
		    return 1;
		}
		if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)//Mayor spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, 356.2998,151.9914,1025.7891);
		    PlayerInfo[playerid][pInt] = 3;
			PlayerInfo[playerid][pLocal] = 241;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)//Police Force spawn & FBI/ATF
		{
			SetPlayerToTeamColor(playerid);
		    rand = random(sizeof(gCopPlayerSpawns));
			SetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid, -1616.127,683.413,7.1875);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
	    }
   		if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)//Police Force spawn & FBI/ATF
		{
			SetPlayerToTeamColor(playerid);
		    rand = random(sizeof(gCopPlayerSpawns));
			SetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid, -684.3210,939.5605,13.6328);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
	    }
		if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//National Guard spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -1346.2050,492.3983,11.2027);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)//Fire/Ambulance spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -2656.0393,635.0596,14.4531);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
        if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)//LaCosaNostra spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 5);
		    SetPlayerPos(playerid, 1230.5728,-807.8337,1084.0078);
		    PlayerInfo[playerid][pInt] = 5;
		    return 1;
		}
		if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)//Yakuza spawn
		{
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, 1);
		    SetPlayerPos(playerid, -2160.4790,645.9357,1057.5861);
		    PlayerInfo[playerid][pInt] = 1;
		    return 1;
		}
	    if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8) //Hitman spawn
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid,-2442.7756,522.9667,29.9126);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9) //News spawn
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -2050.8962,460.0262,35.1719);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) //Taxi Cab Company spawn
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -2055.0073,6.8907,35.3281);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20) //Red blood
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -2184.8813,-262.8727,40.7195);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if(IsAnInstructor(playerid)) //Driving/Flying School spawn
	    {
			if(SchoolSpawn[playerid] == 0)
			{
		        SetPlayerToTeamColor(playerid);
				SetPlayerPos(playerid, -2032.6810,-117.4816,1035.1719);
				SetPlayerFacingAngle(playerid, 275.1114);
				SetPlayerInterior(playerid,3);
				PlayerInfo[playerid][pInt] = 3;
			}
			else if(SchoolSpawn[playerid] == 1)
			{
				SetPlayerToTeamColor(playerid);
				SetPlayerPos(playerid, 414.4144,2531.9580,19.1565);
				SetPlayerFacingAngle(playerid, 4.6505);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
	        return 1;
	    }
        if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16) //Vance spawn
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, 2329.8027,-1182.8723,1027.9766);
			SetPlayerInterior(playerid,5);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
     	if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17) //ประตูผี
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -2533.5793,1220.4492,37.4219);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
        if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18) //ใต็ตึก
	    {
	        SetPlayerToTeamColor(playerid);
			SetPlayerPos(playerid, -1716.4918,1018.1818,17.5859);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)//Police Force spawn & FBI/ATF
		{
			SetPlayerToTeamColor(playerid);
		    rand = random(sizeof(gCopPlayerSpawns));
			SetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid, -2237.2070,2354.2764,4.9798);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
	    }
	    if (PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)//Police Force spawn & FBI/ATF
		{
			SetPlayerToTeamColor(playerid);
		    rand = random(sizeof(gCopPlayerSpawns));
			SetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid, 1579.7631,-1636.1940,13.5595);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
	    }
        if (PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)//National Guard spawn
		{
			SetPlayerToTeamColor(playerid);
		    rand = random(sizeof(gCopPlayerSpawns));
			SetPlayerPos(playerid, gCopPlayerSpawns[rand][0], gCopPlayerSpawns[rand][1], gCopPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid, 2744.9077,-2453.8093,13.8623);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
	    }
		if ((gTeam[playerid]) == 1)
	    {
			SetPlayerToTeamColor(playerid);
			rand = random(sizeof(gMedPlayerSpawns));
			SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		if(PlayerInfo[playerid][pFMember] != 255)
		{
		    new family = PlayerInfo[playerid][pFMember];
		    SetPlayerToTeamColor(playerid);
		    SetPlayerInterior(playerid, FamilyInfo[family][FamilyInterior]);
		    SetPlayerPos(playerid, FamilyInfo[family][FamilySpawn][0],FamilyInfo[family][FamilySpawn][1],FamilyInfo[family][FamilySpawn][2]);
		    SetPlayerFacingAngle(playerid, FamilyInfo[family][FamilySpawn][3]);
		    return 1;
		}
	    else
	    {
			SetPlayerToTeamColor(playerid);
			if(PlayerInfo[playerid][pOrigin] == 1)//SF
			{
			    SetPlayerPos(playerid,-2656.8699,1359.4066,7.2877);
				SetPlayerFacingAngle(playerid, 134.2490);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				rand = random(sizeof(gRandomPlayerSpawns));
				SetPlayerPos(playerid, gRandomPlayerSpawns[rand][0], gRandomPlayerSpawns[rand][1], gRandomPlayerSpawns[rand][2]); // Warp the player
				SetPlayerFacingAngle(playerid, 134.2490);
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			return 1;
		}
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
	new name[MAX_PLAYER_NAME];
	new string[256];
	//new dmessage[128];
	//new deathreason[20];
	new playercash;
	new victimteam;
	new Float:px,Float:py,Float:pz;
	new killerteam;

	victimteam = gTeam[playerid];
	killerteam = gTeam[killerid];
	gPlayerSpawned[playerid] = 0;
	GetPlayerName(playerid, name, sizeof(name));
	PlayerInfo[playerid][pLocal] = 255;
	GetPlayerPos(playerid, px, py, pz);
	if(killerid != 255)
	{
	    if(PlayerInfo[killerid][pJailed] == 1 || PlayerInfo[killerid][pJailed] == 2 || PlayerInfo[killerid][pJailed] == 3)
		{
			GameTextForPlayer(killerid, "~y~ KILL ~n~~r~More Time", 2000, 3);
			SendClientMessage(killerid, COLOR_DBLUE, " ผู้คุมขัง: เพิ่มเวลาการติดคุกของคุณเป็น 120 วินาที");
			PlayerInfo[killerid][pJailTime] += 120;
			if(JailPrice[killerid] > 1)
			{
				JailPrice[killerid] += 5000;
				SendClientMessage(killerid, COLOR_LIGHTRED, " และ + ค่าประกันตัวออกอีก $5000");
			}
		}
		if(PlayerInfo[killerid][pJailed] == 99)
		{
		    GameTextForPlayer(killerid, "~y~KILL ~n~~r~More Time", 2000, 3);
			SendClientMessage(killerid, COLOR_DBLUE, " ผู้คุมขัง: ยังไม่เข็ดอีกหรอ งั้นผมจะเพิ่มเวลาให้คุณ 300 วินาทีต่อการค่าคน 1 คนแล้วกันนะ");
			PlayerInfo[killerid][pJailTime] += 300;
		}
		if(GetPlayerState(killerid) == 2)
		{
			SendClientMessage(killerid, COLOR_YELLOW, "Drive-By Kill, การกะทำนี้ผิดกฏของเซิฟเวอร์กรุณาอย่าทำอีก!");
			return 1;
		}
	}
	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "   The line just went dead....");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	ClearCrime(playerid);
	if(PlayerPaintballing[playerid] != 0)
	{
	    PlayerPaintballKills[killerid] ++;
	    if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
	    {
	        new killer[MAX_PLAYER_NAME];
	        PaintballWinner = killerid;
	        PaintballWinnerKills = PlayerPaintballKills[killerid];
	        GetPlayerName(killerid, killer, sizeof(killer));
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
	                if(PlayerPaintballing[i] != 0)
	                {
	                    format(string, sizeof(string), "* %s is in the lead with %d Kills.",killer,PaintballWinnerKills);
						SendClientMessage(i, COLOR_WHITE, string);
	                }
	            }
	        }
	    }
	    return 1;
	}
	if(GettingCK[playerid] < 999 || OnCK[playerid] < 999)
	{
	    if(IsPlayerConnected(killerid))
	    {
	        if(GettingCK[killerid] < 999 || OnCK[playerid] < 999)
	        {
	            new killer[MAX_PLAYER_NAME];
	            new dier[MAX_PLAYER_NAME];
	            GetPlayerName(playerid, dier, sizeof(dier));
				GetPlayerName(killerid, killer, sizeof(killer));
	            format(string, sizeof(string), "* %s has performed a Character Kill on you, you aren't able to play with this Character anymore.",killer);
	            SendClientMessage(playerid, COLOR_LIGHTRED, string);
	            format(string, sizeof(string), "** %s has Character Killed %s **",killer,dier);
	            CKLog(string);
	            PlayerInfo[playerid][pCK] = 1;
	            if(GettingCK[playerid] < 999) { GettingCK[playerid] = 999; }
	            else if(OnCK[playerid] < 999) { OnCK[playerid] = 999; }
	            if(GettingCK[killerid] < 999) { GettingCK[killerid] = 999; }
	            else if(OnCK[killerid] < 999) { OnCK[killerid] = 999; }
	            KickPlayer[playerid] = 1;
	        }
	    }
	}
	if(PlayerInfo[playerid][pHeadValue] > 0)
	{
	    if(IsPlayerConnected(killerid))
	    {
		    if(gTeam[killerid] == 10 || PlayerInfo[killerid][pLeader] == 8)
		    {
		        if(GoChase[killerid] == playerid)
		        {
		            ConsumingMoney[killerid] = 1;
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(killerid, killer, sizeof(killer));
					SafeGivePlayerMoney(killerid, PlayerInfo[playerid][pHeadValue]);
					format(string,128,"<< Hitman %s has fulfilled the contract on %s and collected $%d >>",killer,name,PlayerInfo[playerid][pHeadValue]);
					SendFamilyMessage(8, COLOR_YELLOW, string);
					PlayerInfo[playerid][pHeadValue] = 0;
					GotHit[playerid] = 0;
					GetChased[playerid] = 999;
					GoChase[killerid] = 999;
				}
			}
		}
	}
    if(PlayerInfo[playerid][pDeaths] > 3)
		{
			new rand = random(4);
			if(rand == 1)
			{
	            if(PlayerInfo[playerid][pPnumber] > 0)
	            {
	                PlayerInfo[playerid][pPnumber] = 0;
				    format(string, sizeof(string), "* %s ทำโทรศัพท์ตกและโทรศัพท์ของเค้าได้หายไป", name);
				    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
			}
			else if(rand == 2)
			{
	            if(PlayerInfo[playerid][pPhoneBook] > 0)
	            {
	                PlayerInfo[playerid][pPhoneBook] = 0;
				    format(string, sizeof(string), "* %s ทำสมุดจดเบอร์โทรศัพท์หล่นหาย", name);
				    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
			}
			else if(rand == 3)
			{
	            if(PlayerInfo[playerid][pDrugs] > 0)
	            {
	                PlayerInfo[playerid][pDrugs]  = 0;
				    format(string, sizeof(string), "* %s ทำยาเสพติดตกท่อระบายน้ำ", name);
				    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else if(PlayerInfo[playerid][pMats] > 0)
	            {
	                PlayerInfo[playerid][pMats]  = 0;
				    format(string, sizeof(string), "* %s ทำดินปืนตกข้างทาง", name);
				    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
			}
			else if(rand == 4)
			{
			    if(PlayerInfo[playerid][pRank] != 6)
	            {
		            if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pMember] == 3)
		            {
		                PlayerInfo[playerid][pRank]  = 1;
					    format(string, sizeof(string), "* %s ทำตราประจำตำแหน่งตกท่อระบายน้ำข้างๆ", name);
					    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            }
		        }
			}
	        PlayerInfo[playerid][pDeaths] = 0;
		}
	if(victimteam >= 4)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(playerid, killer, sizeof(killer));
			new slice = 100; //$100
			playercash = ScriptMoney[playerid];
			if(gTeam[killerid] != 2) { WantedPoints[killerid] += 2; } //+ 2 wanted points
			if(SafeTime[playerid] <= 0)
			{
				if(gTeam[killerid] != gTeam[playerid])
				{
					if(GetPlayerState(killerid) == 1)
					{
						PlayerInfo[killerid][pKills] = PlayerInfo[killerid][pKills] + 2;
					}
					else
					{
						PlayerInfo[killerid][pKills]++;
					}
					PlayerInfo[playerid][pKills]--;
				}
			}
			/*if (strlen(deathreason) > 0)// patch
			{
				if (((gTeam[killerid]) == 1) || ((gTeam[killerid]) == 3 && civnokill) || gTeam[killerid] == gTeam[playerid])//med kill criminal
				{
					format(string, sizeof(string), ".: %s murdered %s. (%s) :.", killer, name, deathreason);
				}
				else
				{
					format(string, sizeof(string), ".: %s murdered %s. (%s) for $%d :.", killer, name, deathreason, slice);
				}

			}
			else
			{
				if (((gTeam[killerid]) == 1) || ((gTeam[killerid]) == 3 && civnokill || gTeam[killerid] == gTeam[playerid]))
				{
					format(string, sizeof(string), ".: %s murdered %s :.", killer, name);
				}
				else
				{
					format(string, sizeof(string), ".: %s murdered %s for $%d :.", killer, name, slice);
				}
			}*/
			if (((gTeam[killerid]) == 1) || ((gTeam[killerid]) == 3 && civnokill) || (gTeam[killerid] == gTeam[playerid] && gTeam[playerid] != 4))
			{
				slice = 0;
			}
			if (((gTeam[killerid]) != 4) && ((gTeam[killerid]) == gTeam[playerid]))//no team kill
			{
				slice = 0;
			}
			if (playercash > 0)
			{
				SafeGivePlayerMoney(playerid, -slice);
			}
			else
			{
				slice = slice+500;
			}
			SafeGivePlayerMoney(killerid, slice);
			//GameTextForPlayer(playerid, dmessage, 5000, 2);
			PlayerPlaySound(killerid, 1083, 0.0, 0.0, 0.0);
			if (((gTeam[killerid]) == 3) && reason != 49)
			{
				new killer[MAX_PLAYER_NAME];
				GetPlayerName(playerid, killer, sizeof(killer));
				format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
				SendClientMessage(killerid, COLOR_SUPERRED, string);
				SetPlayerCriminal(killerid,255, "ฆาตกร");
			}
			else if (((gTeam[killerid]) == 3) && reason == 49)
			{
				new killer[MAX_PLAYER_NAME];
				GetPlayerName(playerid, killer, sizeof(killer));
				format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
				SendClientMessage(killerid, COLOR_SUPERRED, string);
				SetPlayerCriminal(killerid,255, "ฆ่าแล้วหนี");
			}
		}
	}
	else if (victimteam == 2)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(playerid, killer, sizeof(killer));
			// Cop kill
			PlayerInfo[playerid][pKills]--;
			if (gTeam[killerid] == 2)//cops kill cop
			{
				//format(string,128,".: Officer %s murdered Officer %s (%s) and was sued for $%d :.",killer,name,deathreason);
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
			}
			else
			{
				//format(string,128,".: %s murdered Officer %s (%s) :.",killer,name,deathreason);
		    }
			if (gTeam[killerid] == 3 || gTeam[killerid] == 12)
			{
			    WantedPoints[killerid] += 2; //+ 2 wanted points
				if(reason != 49)
				{
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(playerid, killer, sizeof(killer));
					format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
					SendClientMessage(killerid, COLOR_SUPERRED, string);
					SetPlayerCriminal(killerid,255, "ฆาตกร");
				}
				else if (reason == 49)
				{
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(playerid, killer, sizeof(killer));
					format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
					SendClientMessage(killerid, COLOR_SUPERRED, string);
					SetPlayerCriminal(killerid,255, "ฆ่าแล้วหนี");
				}
			}
			if (gTeam[killerid] == 5 || gTeam[killerid] == 10)
			{
				if(gTeam[playerid] != 5 || gTeam[playerid] != 10 && reason != 49)
				{
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(playerid, killer, sizeof(killer));
					format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
					SendClientMessage(killerid, COLOR_SUPERRED, string);
					WantedPoints[killerid] += 2; //+ 2 wanted points
					SetPlayerCriminal(killerid,255, "ฆาตกร");
				}
				else if (gTeam[playerid] != 5 || gTeam[playerid] != 10 && reason == 49)
				{
					new killer[MAX_PLAYER_NAME];
					GetPlayerName(playerid, killer, sizeof(killer));
					format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
					SendClientMessage(killerid, COLOR_SUPERRED, string);
					WantedPoints[killerid] += 2; //+ 2 wanted points
					SetPlayerCriminal(killerid,255, "ฆ่าแล้วหนี");
				}
			}
			if(gTeam[killerid] >= 5 && SafeTime[playerid] <= 0)
			{
				if(GetPlayerState(killerid) == 1)
				{
					PlayerInfo[killerid][pKills] = PlayerInfo[killerid][pKills]+2;
				}
				else
				{
					PlayerInfo[killerid][pKills]++;
				}
				WantedPoints[killerid]+=2;
			}
			//BroadCast(COLOR_RED, string);
		}
	}
	else if (victimteam == 3)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(playerid, killer, sizeof(killer));
			// Civ kill
			if ((gTeam[killerid]) == 2)//cops kill civ
			{
			    if(WantedLevel[playerid] < 1)
			    {
					//format(string,128,".: Officer %s murdered %s (%s) and was sued for $%d :.",killer,name,deathreason);
					PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
				}
			}
			else
			{
				//format(string,128,".: %s murdered %s (%s) :.",killer,name,deathreason);
				WantedPoints[killerid] += 2;
		    }
			if (((gTeam[killerid]) >= 2 || (gTeam[killerid]) == 1) && reason != 49)
			{
				new killer[MAX_PLAYER_NAME];
				GetPlayerName(playerid, killer, sizeof(killer));
				format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
				SendClientMessage(killerid, COLOR_SUPERRED, string);
				SetPlayerCriminal(killerid,255, "ฆาตกร");
			}
			else if (((gTeam[killerid]) >= 2 || (gTeam[killerid]) == 1) && reason == 49)
			{
				new killer[MAX_PLAYER_NAME];
				GetPlayerName(playerid, killer, sizeof(killer));
				format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
				SendClientMessage(killerid, COLOR_SUPERRED, string);
				SetPlayerCriminal(killerid,255, "ฆ่าแล้วหนี");
			}
		    //BroadCast(COLOR_RED, string);
		}
	}
	else if (victimteam == 1)
	{
	    if(IsPlayerConnected(killerid))
	    {
			//new killer[MAX_PLAYER_NAME];
			//GetPlayerName(playerid, killer, sizeof(killer));
			// Civ kill
			if ((gTeam[killerid]) == 2)//cops kill civ
			{
				//format(string,128,".: Officer %s murdered Paramedic %s (%s) and was sued for $%d :.",killer,name,deathreason);
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
			}
			else if ((gTeam[killerid]) == 1)//med kill civ
			{
				//format(string,128,".: Paramedic %s murdered %s (%s) and was sued for $%d :.",killer,name,deathreason);
				PlayerPlaySound(killerid, 1084, 0.0, 0.0, 0.0);
			}
			else
			{
				//format(string,128,".: %s murdered %s (%s) :.",killer,name,deathreason);
		    }
			if (((gTeam[killerid]) == 4) && reason != 49)
			{
				new killer[MAX_PLAYER_NAME];
				GetPlayerName(playerid, killer, sizeof(killer));
				format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
				SendClientMessage(killerid, COLOR_SUPERRED, string);
				SetPlayerCriminal(killerid,255, "ฆาตกร");
			}
			else if (((gTeam[killerid]) == 3) && reason == 49)
			{
				new killer[MAX_PLAYER_NAME];
				GetPlayerName(playerid, killer, sizeof(killer));
				format(string,256,".: คุณสังหาร %s ด้วย %s ในระยะ %.2f ฟุต :.",killer,Weapons[reason],GetDistanceBetweenPlayers(playerid,killerid));
				SendClientMessage(killerid, COLOR_SUPERRED, string);
				SetPlayerCriminal(killerid,255, "ฆ่่าแล้วหนี");
			}
		    //BroadCast(COLOR_RED, string);
		}
	}
	if (victimteam >= 3 && WantedPoints[playerid] > 0 && killerteam == 2)
	{
	    SetPlayerFree(playerid,killerid, "Got Killer");
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,COLOR_GRAD2);
	return 1;
}

public OnPlayerSpawn(playerid)
{
	GangZoneShowForPlayer(playerid, ballas, GANGZONE_BALLAS);
    GangZoneShowForPlayer(playerid, yakuza, GANGZONE_YAKUZA);
    GangZoneShowForPlayer(playerid, vagos, GANGZONE_VAGOS);
    GangZoneShowForPlayer(playerid, grove, GANGZONE_GROVE);
    GangZoneShowForPlayer(playerid, aztec, GANGZONE_AZTEC);
    GangZoneShowForPlayer(playerid, lcn, GANGZONE_LCN);
    adminonduty[playerid] = 0;
	InitLockDoors(playerid);
	STDPlayer[playerid] = 0;
	gTeam[playerid] = PlayerInfo[playerid][pTeam]; //Set the Team
	if (gTeam[playerid] == 4) //medic / criminal reset team
	{
		gTeam[playerid] = 3;
	}
	if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_YELLOW, "SERVER: คุณได้ลงทะเบียนไว้แล้วพิมพ์ /login [พาสเวิด] เพื่อเข้าเล่น");
        KickPlayer[playerid] = 1;
 	}
 	if(MapIconsShown[playerid] != 1)
	{
	    MapIconsShown[playerid] = 1;
	    /*for(new i = 0; i < sizeof(BizzInfo); i++)
		{
			SetPlayerMapIcon(playerid,i + 1,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],36,COLOR_LIGHTRED);
		}
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
		    SetPlayerMapIcon(playerid,i + 20,SBizzInfo[i][sbEntranceX],SBizzInfo[i][sbEntranceY],SBizzInfo[i][sbEntranceZ],36,COLOR_LIGHTRED);
		}*/
		SetPlayerMapIcon(playerid, 1, -2029.5083,-96.1286,35.1641, 55, COLOR_WHITE);	//รถสีฟ้ารร.
		SetPlayerMapIcon(playerid, 2, -1616.127,683.413,7.1875, 30, COLOR_WHITE);	//สนตำรวจ
		SetPlayerMapIcon(playerid, 3, -1618.8979,866.1496,7.6953, 52, COLOR_WHITE);    //Bank
		SetPlayerMapIcon(playerid, 5, -2287.9817,-79.9263,35.3203, 6, COLOR_WHITE);	//ร้านปืน
	}
	if(gTeam[playerid] == 11 && PlayerInfo[playerid][pLeader] == 0)
	{
	    MedicBill[playerid] = 0;
	    new rand = random(sizeof(CIV));
		SendClientMessage(playerid, COLOR_LIGHTRED, "คุณได้ถูกปลดจากการเป็นหลีดเดอร์ , ตอนนี้คุณกลับไปเป็นประชาชนธรรมดา !");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
		PlayerInfo[playerid][pModel] = CIV[rand];
		SpawnPlayer(playerid);
	}
	if(PlayerInfo[playerid][pMember] == 0)
	{
	if(gTeam[playerid] == 1 && gTeam[playerid] == 2 && gTeam[playerid] == 5 && gTeam[playerid] == 10 && gTeam[playerid] == 12)
	{
	        MedicBill[playerid] = 0;
	        new rand = random(sizeof(CIV));
			SendClientMessage(playerid, COLOR_LIGHTRED, "คุณได้ถูกไล่ออกจากอาชีพ/แฟลมิลี่/องค์กร , ตอนนี้คุณกลับไปเป็นประชาชนธรรมดา !");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
            SetSpawnInfo(playerid, gTeam[playerid], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
			PlayerInfo[playerid][pModel] = CIV[rand];
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] >= 0)
	{
	    if(PlayerInfo[playerid][pMember] > 0 || PlayerInfo[playerid][pLeader] > 0)
	    {
			//SendClientMessage(playerid, COLOR_LIGHTRED, "You are part of a Family/Force, you've been forced to the right Class + Char !");
			//MedicBill[playerid] = 0;
			new model = PlayerInfo[playerid][pChar];
			if(PlayerInfo[playerid][pMember] == 1) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 2) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 3) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 4) { SetSpawnInfo(playerid, 1, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 5) { SetSpawnInfo(playerid, 10, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 6) { SetSpawnInfo(playerid, 10, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 7) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 8) { SetSpawnInfo(playerid, 10, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 9) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 10) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 11) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pMember] == 12) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //GROVE STREET
			else if(PlayerInfo[playerid][pMember] == 13) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //BALLAS
			else if(PlayerInfo[playerid][pMember] == 14) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //VAGOS
			else if(PlayerInfo[playerid][pMember] == 15) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //AZTECAS
			else if(PlayerInfo[playerid][pMember] == 16) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //Vance
			else if(PlayerInfo[playerid][pMember] == 17) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //ประตูผั
			else if(PlayerInfo[playerid][pMember] == 18) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //ใต็ตึก
			else if(PlayerInfo[playerid][pMember] == 19) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; } //องกรณ์ลับ
			else if(PlayerInfo[playerid][pMember] == 20) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //redblood
			else if(PlayerInfo[playerid][pMember] == 21) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }//lspd
			else if(PlayerInfo[playerid][pMember] == 22) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; } //lsarmy
			else if(PlayerInfo[playerid][pLeader] == 1) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 2) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 3) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 4) { SetSpawnInfo(playerid, 1, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 5) { SetSpawnInfo(playerid, 10, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 6) { SetSpawnInfo(playerid, 10, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 7) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 8) { SetSpawnInfo(playerid, 10, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 9) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 10) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 11) { SetSpawnInfo(playerid, 12, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; PlayerInfo[playerid][pModel] = model; }
			else if(PlayerInfo[playerid][pLeader] == 12) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //GROVE STREET
			else if(PlayerInfo[playerid][pLeader] == 13) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //BALLAS
			else if(PlayerInfo[playerid][pLeader] == 14) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //VAGOS
			else if(PlayerInfo[playerid][pLeader] == 15) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //AZTECAS
			else if(PlayerInfo[playerid][pLeader] == 16) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //Vance
			else if(PlayerInfo[playerid][pMember] == 17) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //ประตูผั
			else if(PlayerInfo[playerid][pMember] == 18) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //ใต็ตึก
			else if(PlayerInfo[playerid][pMember] == 19) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; } //องกรณ์ลับ
			else if(PlayerInfo[playerid][pMember] == 20) { SetSpawnInfo(playerid, 5, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; PlayerInfo[playerid][pModel] = model; } //redblood
            else if(PlayerInfo[playerid][pMember] == 21) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; }//lspd
			else if(PlayerInfo[playerid][pMember] == 22) { SetSpawnInfo(playerid, 2, model,0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; PlayerInfo[playerid][pModel] = model; } //lsarmy
			//SetSpawnInfo(playerid, team, model,0.0,0.0,0.0,0,0,0,0,0,0,0);
			//SpawnPlayer(playerid);
		}
	}
	if(PlayerInfo[playerid][pChar] > 0) { SetPlayerSkin(playerid, PlayerInfo[playerid][pChar]); }
	else { SetPlayerSkin(playerid, PlayerInfo[playerid][pModel]); }
	SetPlayerWeapons(playerid);
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);
	for(new i = 0; i < sizeof(Turfs); i++)
	{
	    GangZoneShowForPlayer(playerid, i, TurfInfo[i][zColor]);
	}
	if(MapIconsShown[playerid] != 1)
	{
	    MapIconsShown[playerid] = 1;
	    for(new i = 0; i < sizeof(BizzInfo); i++)
		{
			SetPlayerMapIcon(playerid,i + 1,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ],36,COLOR_LIGHTRED);
		}
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
		    SetPlayerMapIcon(playerid,i + 20,SBizzInfo[i][sbEntranceX],SBizzInfo[i][sbEntranceY],SBizzInfo[i][sbEntranceZ],36,COLOR_LIGHTRED);
		}
	}
	return 1;
}

public CKLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ck.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public PayLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public KickLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public BanLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

public OnPlayerEnterCheckpoint(playerid)
{
	new string[128];
	new name[MAX_PLAYER_NAME];
	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
	    TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999)
	{
	    BusAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Reached destination", 5000, 1);
		BusCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid]==1)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
		    PlayerInfo[playerid][pJackSkill] ++;
			if(PlayerInfo[playerid][pJackSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Car Jack Skill is now Level 2, you will earn more Money and quicker Reload Time."); }
			else if(PlayerInfo[playerid][pJackSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Car Jack Skill is now Level 3, you will earn more Money and quicker Reload Time."); }
			else if(PlayerInfo[playerid][pJackSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Car Jack Skill is now Level 4, you will earn more Money and quicker Reload Time."); }
			else if(PlayerInfo[playerid][pJackSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Car Jack Skill is now Level 5, you will earn more Money and quicker Reload Time."); }
			new level = PlayerInfo[playerid][pJackSkill];
			if(level >= 0 && level <= 50)
			{
			    new rand = random(sizeof(SELLCAR1));
			    format(string, sizeof(string), " คุณขโมยรถไปส่งได้เงินจำนวน $%d, โปรดรออีก 20 นาทีเพื่อส่งครั้งต่อไป", SELLCAR1[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SafeGivePlayerMoney(playerid, SELLCAR1[rand]);
			    PlayerInfo[playerid][pCarTime] = 1200;
			}
			else if(level >= 51 && level <= 100)
			{
			    new rand = random(sizeof(SELLCAR2));
			    format(string, sizeof(string), " คุณขโมยรถไปส่งได้เงินจำนวน $%d, โปรดรออีก 18 นาทีเพื่อส่งครั้งต่อไป", SELLCAR2[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SafeGivePlayerMoney(playerid, SELLCAR2[rand]);
			    PlayerInfo[playerid][pCarTime] = 1080;
			}
			else if(level >= 101 && level <= 200)
			{
			    new rand = random(sizeof(SELLCAR3));
			    format(string, sizeof(string), " คุณขโมยรถไปส่งได้เงินจำนวน $%d, โปรดรออีก 16 นาทีเพื่อส่งครั้งต่อไป", SELLCAR3[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SafeGivePlayerMoney(playerid, SELLCAR3[rand]);
			    PlayerInfo[playerid][pCarTime] = 960;
			}
			else if(level >= 201 && level <= 400)
			{
			    new rand = random(sizeof(SELLCAR4));
			    format(string, sizeof(string), " คุณขโมยรถไปส่งได้เงินจำนวน $%d, โปรดรออีก 14 นาทีเพื่อส่งครั้งต่อไป", SELLCAR4[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SafeGivePlayerMoney(playerid, SELLCAR4[rand]);
			    PlayerInfo[playerid][pCarTime] = 840;
			}
			else if(level >= 401)
			{
			    new money = 10000;
			    format(string, sizeof(string), " คุณขโมยรถไปส่งได้เงินจำนวน $%d, โปรดรออีก 12 นาทีเพื่อส่งครั้งต่อไป", money);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SafeGivePlayerMoney(playerid, money);
			    PlayerInfo[playerid][pCarTime] = 720;
			}
			GameTextForPlayer(playerid, "~y~Sold the car", 2500, 1);
			CP[playerid] = 0;
		    DisablePlayerCheckpoint(playerid);
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		}
		else
		{
		    GameTextForPlayer(playerid, "Not in a car", 5000, 1);
		}
	}
	else if(CP[playerid] == 5)
	{
	    GameTextForPlayer(playerid, "~y~At the Missions Checkpoint", 2500, 1);
		CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 99)
	{
		DisablePlayerCheckpoint(playerid);
		PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
		GameTextForPlayer(playerid, "~w~Gps is clear", 5000, 1);
		GetPlayerName(playerid, name, sizeof(name));
		format(string, sizeof(string), "* %s ได้ปิดเครื่อง GPS", name);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else if(CP[playerid] == 9)//Karting
	{
		GameTextForPlayer(playerid, "~r~Wait here for more Kart Racers", 4000, 3);
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 10) { CP[playerid] = 11; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2258.7874,-2402.9712,12.7035,8.0); }
	else if(CP[playerid] == 11) { CP[playerid] = 12; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2225.8755,-2461.3875,12.7190,8.0); }
	else if(CP[playerid] == 12) { CP[playerid] = 13; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2276.9983,-2662.8328,12.8580,8.0); }
	else if(CP[playerid] == 13) { CP[playerid] = 14; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2449.1399,-2663.0562,12.8138,8.0); }
	else if(CP[playerid] == 14) { CP[playerid] = 15; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2566.9814,-2504.5686,12.7692,8.0); }
	else if(CP[playerid] == 15) { CP[playerid] = 16; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2719.0520,-2503.5962,12.7706,8.0); }
	else if(CP[playerid] == 16) { CP[playerid] = 17; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2720.7881,-2405.6589,12.7441,8.0); }
	else if(CP[playerid] == 17) { CP[playerid] = 18; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2571.5195,-2401.1531,12.7528,8.0); }
	else if(CP[playerid] == 18) { CP[playerid] = 19; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2406.6995,-2423.1182,12.6641,8.0); }
	else if(CP[playerid] == 19) { CP[playerid] = 20; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2322.9194,-2341.5715,12.6664,8.0); }
	else if(CP[playerid] == 20)//End of Karting
	{
	    CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	    GetPlayerName(playerid, name, sizeof(name));
	    if(FirstKartWinner == 999)
	    {
	        FirstKartWinner = playerid;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
		            if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
		            {
		                format(string, sizeof(string), "* %s finished First in the Kart Race.",name);
		                SendClientMessage(i, COLOR_WHITE, string);
		            }
				}
			}
	    }
	    else if(SecondKartWinner == 999)
	    {
	        SecondKartWinner = playerid;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
		            if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
		            {
		                format(string, sizeof(string), "* %s finished Second in the Kart Race.",name);
		                SendClientMessage(i, COLOR_WHITE, string);
		            }
				}
			}
	    }
	    else if(ThirdKartWinner == 999)
	    {
	        ThirdKartWinner = playerid;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
		            if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
		            {
		                format(string, sizeof(string), "* %s finished Third in the Kart Race.",name);
		                SendClientMessage(i, COLOR_WHITE, string);
		                SendClientMessage(i, COLOR_WHITE, "** Karting Race Over **");
		                CP[i] = 0;
		                DisablePlayerCheckpoint(i);
		            }
				}
	        }
	    }
	}
	else if(MissionCheckpoint[playerid] > 0 && PlayMission[kToggle] == 1)//Missions + Checkpoint on toggle
	{
        	RingTone[playerid] = 20;
		    switch(MissionCheckpoint[playerid])
		    {
	        	case 1:
		        {
					format(string, sizeof(string), "%s", PlayMission[kGText1]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText4]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText5]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText6]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP2][0], PlayMission[kCP2][1], PlayMission[kCP2][2], 8);
					MissionCheckpoint[playerid] = 2;
		        }
		        case 2:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText2]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText7]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText8]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText9]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP3][0], PlayMission[kCP3][1], PlayMission[kCP3][2], 8);
					MissionCheckpoint[playerid] = 3;
		        }
		        case 3:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText3]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText10]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText11]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText12]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP4][0], PlayMission[kCP4][1], PlayMission[kCP4][2], 8);
					MissionCheckpoint[playerid] = 4;
		        }
		        case 4:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText4]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText13]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText14]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText15]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP5][0], PlayMission[kCP5][1], PlayMission[kCP5][2], 8);
					MissionCheckpoint[playerid] = 5;
		        }
		        case 5:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText5]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText16]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText17]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText18]);
					SendClientMessage(playerid, COLOR_YELLOW2, string);
					DisablePlayerCheckpoint(playerid);
					SetPlayerCheckpoint(playerid, PlayMission[kCP6][0], PlayMission[kCP6][1], PlayMission[kCP6][2], 8);
					MissionCheckpoint[playerid] = 6;
		        }
		        case 6:
		        {
		            format(string, sizeof(string), "%s", PlayMission[kGText6]);
					GameTextForPlayer(playerid, string, 8000, 3);
					format(string, sizeof(string), "..:: Mission Passed : %s | Reward received: $%d ::..", PlayMission[kTitle], PlayMission[kReward]);
					SendClientMessage(playerid, COLOR_GREEN, string);
					DisablePlayerCheckpoint(playerid);
					SafeGivePlayerMoney(playerid, PlayMission[kReward]);
					PlayerInfo[playerid][pMissionNr] = PlayerOnMission[playerid];
					MissionCheckpoint[playerid] = 0;
					PlayerOnMission[playerid] = 0;
		        }
		    }
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				GameTextForPlayer(playerid, "~w~You are~n~~y~Home", 5000, 1);
		    }
		}
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}

}

public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	new string[256];
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    if(PlayerKarting[playerid] > 0 && PlayerInKart[playerid] > 0)
		{
		    PlayerInKart[playerid] = 0;
		    KartingPlayers --;
		}
	    if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
			    BusDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* คุณได้เลิกรับงาน และได้เงิน $%d", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			SafeGivePlayerMoney(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    format(string, sizeof(string), "~w~The ride cost~n~~r~$%d",TransportCost[playerid]);
			    GameTextForPlayer(playerid, string, 5000, 1);
			    format(string, sizeof(string), "~w~Passenger left the taxi~n~~g~Earned $%d",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
				SafeGivePlayerMoney(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
				TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI & BUSSES
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    new vehicleid = GetPlayerVehicleID(playerid);
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
	            {
	                if(ScriptMoney[playerid] < TransportValue[i])
	                {
	                    format(string, sizeof(string), "* You need $%d to enter.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						RemovePlayerFromVehicle(playerid);
	                }
	                else
	                {
	                    if(TransportDuty[i] == 1)
	                    {
	                        format(string, sizeof(string), "* You paid $%d to the Taxi Driver.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ได้ขึ้นแท็กซี่ของคุณ", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
							TransportTime[i] = 1;
	                    	TransportTime[playerid] = 1;
	                    	TransportCost[playerid] = TransportValue[i];
	                    	TransportCost[i] = TransportValue[i];
	                    	TransportDriver[playerid] = i;
	                    }
	                    else if(TransportDuty[i] == 2)
	                    {
	                        format(string, sizeof(string), "* You paid $%d to the Bus Driver.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ได้ขึ้นรถบัสของคุณ", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
	                    }
						SafeGivePlayerMoney(playerid, - TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
	                }
	            }
	        }
	    }
	}
	if(newstate == PLAYER_STATE_WASTED)
	{
		if(deathcpr[playerid] == 2 && WantedLevel[playerid] == 0 && PlayerInfo[playerid][pJailed] == 0 && PlayerPaintballing[playerid] == 0)
		{
		deathcpr[playerid] = 3;
		GetPlayerInterior(playerid);
		intplayerid[playerid] = GetPlayerInterior(playerid);
		GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		localplayerid[playerid] = GetPlayerVirtualWorld(playerid);
		gunplayerid[playerid] = GetPlayerWeapon(playerid);
		ammoplayerid[playerid] = GetPlayerAmmo(playerid);
		GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
		}
		if(WantedLevel[playerid] >= 1)
		{
		    new price = WantedLevel[playerid] * 2000;
			new count;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(gTeam[i] == 2 && CrimInRange(30.0, playerid,i))
				    {
						count = 1;
						format(string, sizeof(string), "~w~Running Suspect~r~Killed~n~Bonus~g~$%d", price);
						GameTextForPlayer(i, string, 5000, 1);
						ConsumingMoney[i] = 1;
						SafeGivePlayerMoney(i, price / 2);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
					}
				}
			}
			if(count == 1)
			{
				SafeGivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pWantedDeaths] += 1;
				PlayerInfo[playerid][pJailed] = 1;
			    PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(120);
			    format(string, sizeof(string), "* คุณติดคุก %d วินาที , และเสียค่าปรับจำนาน $%d เพราะคุณฝ่าฝืนการจับกุมจากเจ้าหน้าที่", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
                PlayerInfo[playerid][pRobber] = 0;
			    PlayerFrozened[playerid] = 0;
			    SetPlayerSkin(playerid, 268);
			    WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
				SetPlayerStar(playerid);
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER) //buggy dont finnish
	{// 38 / 49 / 56 = SS
		new newcar = GetPlayerVehicleID(playerid);
		new keycar = VehicleKey[newcar];
		new oldcar = gLastCar[playerid];
		new housecar = PlayerInfo[playerid][pPhousekey]+1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		if(IsABoat(newcar))
		{
		    if(PlayerInfo[playerid][pBoatLic] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่รู้เกี่ยวกับการขับเรือ, ดังนั้นคุณต้องออกจากเรือ !");
			    RemovePlayerFromVehicle(playerid);
			}
		}
		else if(IsAPlane(newcar))
		{
		    if(PlayerInfo[playerid][pFlyLic] < 1)
			{
			    if(TakingLesson[playerid] == 1) { }
			    else {
			    SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่รู้เกี่ยวกับการขับเครื่องบิน, ดังนั้นคุณต้องออกจากเครื่องบิน !");
			    RemovePlayerFromVehicle(playerid); }
			}
		}
		else if(newcar >= 138 && newcar <= 147 || newcar >= 177)
		{
		}
		else
		{
			if(PlayerInfo[playerid][pCarLic] < 1)
			{
			    if(PlayerDrunk[playerid] >= 5)
				{
				    WantedPoints[playerid] += 1;
					SetPlayerCriminal(playerid,255, "เมาแล้วขับ");
				}
				if(TakingLesson[playerid] == 1) { }
				else {
				SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่รู้เกี่ยวกับการขับรถ, ดังนั้นคุณต้องออกจากรถ !");
                RemovePlayerFromVehicle(playerid); }
			}
			else if(PlayerDrunk[playerid] >= 5)
			{
			    WantedPoints[playerid] += 1;
				SetPlayerCriminal(playerid,255, "เมาแล้วขับ");
			}
		}//Done with car check
		if(IsATruck(newcar))
		{
			format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[newcar][pLoad],PlayerHaul[newcar][pCapasity]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
			SendClientMessage(playerid, COLOR_WHITE, "ข้อมูล: คุณสามารถส่งผลิตถัณท์ให้กับธุรกิจได้");
			SendClientMessage(playerid, COLOR_WHITE, "ข้อมูล: คำสั่งต่างๆคือ  /load /buyprods /sellprods");
		}
		if(newcar >= 247 && newcar <= 252)
		{
			if (HireCar[playerid] != newcar)
			{
				format(string, sizeof(string), "~w~You can Rent this car~n~Cost:~g~$200~n~~w~To rent type ~g~/rentfino~w~~n~to get out type ~r~/exit");
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		if(newcar >= 134 && newcar <= 137)
		{
			if (HireCar[playerid] != newcar)
			{
				format(string, sizeof(string), "~w~You can Rent this car~n~Cost:~g~$2500~n~~w~To rent type ~g~/rentplane~w~~n~to get out type ~r~/exit");
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		if(newcar >= 256 && newcar <= 260)
		{
			if (HireCar[playerid] != newcar)
			{
				format(string, sizeof(string), "~w~You can Rent this car~n~Cost:~g~$150~n~~w~To rent type ~g~/rentboat~w~~n~to get out type ~r~/exit");
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, string, 5000, 3);
			}
		}
		if(PlayerKarting[playerid] != 0)
		{
		    new kart = GetPlayerVehicleID(playerid);
		    if(kart==110||kart==111||kart==112||kart==113||kart==114||kart==115)
		    {
		        PlayerInKart[playerid] = 1;
		    	KartingPlayers ++;
			}
		}
		if(newcar >= 288)
		{
	  	if(keycar != 999)
		{
		    /*if(CarInfo[keycar][cOwned]==0)
		    {
		        TogglePlayerControllable(playerid, 0);
				PlayerFrozened[playerid] = 1;
		        format(string,sizeof(string),"~w~Vehicle: %s~n~Price: ~g~%d~n~~w~/v buy to buy this vehicle~n~~r~/exit ~w~to exit this vehicle",CarInfo[newcar][cDescription],CarInfo[newcar][cValue]);
				GameTextForPlayer(playerid,string,5000,5);
		    }*/
		    if(CarInfo[keycar][cOwned]==1)
		    {
		        format(string,sizeof(string),"* เจ้าของรถคันนี้คือ %s",CarInfo[keycar][cOwner]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				/*if(keycar != vehicle)
				{
				    RemovePlayerFromVehicle(playerid);
				    SendClientMessage(playerid, COLOR_GREY, " คุณไม่มีกุญแจสำหรับรถคันนี้");
				PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
				}*/
				/*if(PlayerInfo[playerid][pPcarkey] == newcar) { }
				else
				{
				    if(PlayerInfo[playerid][pINAdmin] >= 1337)
					{
					    SendClientMessage(playerid, COLOR_GREY, "  You can drive this car because you are admin on duty !");
					}
				    else
				    {
				    	RemovePlayerFromVehicle(playerid);
				    	SendClientMessage(playerid, COLOR_GREY, " คุณไม่มีกุญแจสำหรับรถคันนี้");
						PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
					}
				}*/
		    }
		    }
		}
		if(newcar >= 138 && newcar <= 147)
		{
		    if(PlayerInfo[playerid][pLevel] > 2)
		    {
			        SendClientMessage(playerid,COLOR_LIGHTRED,"   คุณมีเวลเกินที่จะขี่จักรยานแล้ว !");
 					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					SetPlayerPos(playerid, x, y, z+2);
					PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar >= 138 && newcar <= 147)
		{
		    if(WantedLevel[playerid] > 0 || WantedPoints[playerid] > 0)
		    {
			        SendClientMessage(playerid,COLOR_LIGHTRED,"   คุณมีค่าความต้องการตัวไม่สามารถขี่จักรยานได้ !");
 					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					SetPlayerPos(playerid, x, y, z+2);
					PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 165)
		{
		    if(PlayerInfo[playerid][pAdmin] >= 4) { }
			else
			{
		        	SendClientMessage(playerid,COLOR_GREY," เครื่องบินลำนี้สำหรับ ADMIN เท่านั้น!");
					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					SetPlayerPos(playerid, x, y, z+2);
					PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 35 || newcar == 36 || newcar == 37 || newcar == 38 || newcar == 39 || newcar == 148 || newcar == 149 || newcar == 150 || newcar == 151 || newcar == 172 || newcar == 173 || newcar == 174 || newcar == 175 || newcar == 176)
		{
		    if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//national guard
		    {
		        if(PlayerInfo[playerid][pRank] < 3)
		        {
			        SendClientMessage(playerid,COLOR_GREY,"   คุณต้องยศ 3 เท่านั้น !");
 					new Float:x, Float:y, Float:z;
					GetPlayerPos(playerid, x, y, z);
					SetPlayerPos(playerid, x, y, z+2);
					PlayerPlaySound(playerid, 1085, x, y, z+2);
		        }
		    }
		    else
		    {
		        SendClientMessage(playerid,COLOR_GREY,"  สำหรับนาวิกโยธินเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
        if(newcar >= 12 && newcar <= 17||newcar >= 35 && newcar <= 39||newcar >=148 && newcar <= 149||newcar >=196 && newcar <= 197)//car id curfew
		{
		    if(PlayerInfo[playerid][pMember] == 3&& curfew==1 || PlayerInfo[playerid][pLeader] == 3&& curfew==1 || PlayerInfo[playerid][pMember] == 1&& curfew==1 || PlayerInfo[playerid][pLeader] == 1&& curfew==1 || PlayerInfo[playerid][pMember] == 2&& curfew==1 || PlayerInfo[playerid][pLeader] == 2&& curfew==1 ) { }//curfewcar
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับปัฏิบัติการเคอฟิวล์เท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 45 || newcar == 46 || newcar == 47 || newcar == 48 || newcar == 49 || newcar == 50)
		{
		    if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4) { }
			else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับหน่วยแพทย์เท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 33 || newcar == 34)
		{
		    if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1||PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2||PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3) { }
			else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับตำรวจ/FBI/นาวิกโยธิน เท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 1 || newcar == 2 || newcar == 3 || newcar == 4 || newcar == 5 || newcar == 6 || newcar == 7 || newcar == 8 || newcar == 9 || newcar == 10 || newcar == 11 || newcar == 14 || newcar == 15 || newcar == 16 || newcar == 17 || newcar == 18 || newcar == 23 || newcar == 24 || newcar == 25 || newcar == 26 || newcar == 27 )
		{
		    if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1) { }
			else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับตำรวจเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 63 || newcar == 64 || newcar == 65|| newcar == 202|| newcar == 203|| newcar == 204|| newcar == 205)
		{
		    if(PlayerInfo[playerid][pMember] == 7||PlayerInfo[playerid][pLeader] == 7) { }
			else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับนายกรัฐมนตรีเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 40 || newcar == 41 || newcar == 42 || newcar == 43 || newcar == 166 || newcar == 167 || newcar == 168|| newcar == 44)
		{
		    if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2) { }
			else
			{
		        SendClientMessage(playerid,COLOR_GREY,"  สำหรับเจ้าหน้าที่ FBI เท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 29 || newcar == 30 || newcar == 31 || newcar == 32 || newcar == 164)
		{
		    if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3) { }
			else
			{
		        SendClientMessage(playerid,COLOR_GREY,"  สำหรับนาวิกโยธินเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
        if(newcar == 122 || newcar == 123)
		{
		    if(PlayerInfo[playerid][pJob] != 14)
		    {
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับคนขับรถบัสเท่านั้น !");
  				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
        if(newcar == 128 || newcar == 129 || newcar == 130)
		{
		    if(PlayerInfo[playerid][pJob] != 16)
		    {
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับคนขับรถบรรทุกเท่านั้น !");
  				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
        if(newcar == 152 || newcar == 153)
		{
		    if(PlayerInfo[playerid][pJob] != 7)
		    {
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับช่างซ่อมรถเท่านั้น !");
  				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 82 || newcar == 83 || newcar == 84 || newcar == 85)
		{
            if(TakingLesson[playerid] == 1) { }
		    else if(!IsAnInstructor(playerid))
		    {
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับนายทะเบียนเท่านั้น !");
  				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 76 || newcar == 77 || newcar == 78 || newcar == 79 || newcar == 80 || newcar == 81|| newcar == 253 || newcar == 254 || newcar == 255)
		{
		    if(PlayerInfo[playerid][pMember] == 10||PlayerInfo[playerid][pLeader] == 10) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับคนขับแท็กซี่เท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 57 || newcar == 58 || newcar == 59 || newcar == 60 || newcar == 61 || newcar == 62|| newcar == 219 || newcar == 220 || newcar == 221 || newcar == 222 || newcar == 223)
		{
		    if(PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับยากุซ่าเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 104 || newcar == 105 || newcar == 106 || newcar == 107 || newcar == 108 || newcar == 109|| newcar == 229 || newcar == 230 || newcar == 231 || newcar == 232 || newcar == 233)
		{
		    if(PlayerInfo[playerid][pMember] == 13||PlayerInfo[playerid][pLeader] == 13) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับแก๊งค์ม่วงเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
				}
		}
		if(newcar == 92 || newcar == 93 || newcar == 94 || newcar == 95 || newcar == 96 || newcar == 97|| newcar == 224 || newcar == 225 || newcar == 226 || newcar == 227 || newcar == 228)
		{
		    if(PlayerInfo[playerid][pMember] == 12||PlayerInfo[playerid][pLeader] == 12) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับแก๊งค์เขียวเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 86 || newcar == 87 || newcar == 88 || newcar == 89 || newcar == 90 || newcar == 91|| newcar == 234 || newcar == 235 || newcar == 236 || newcar == 237 || newcar == 238)
		{
		    if(PlayerInfo[playerid][pMember] == 15||PlayerInfo[playerid][pLeader] == 15) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับแก๊งค์ฟ้าเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 98 || newcar == 99 || newcar == 100 || newcar == 101 || newcar == 102 || newcar == 103|| newcar == 239 || newcar == 240 || newcar == 241 || newcar == 242)
		{
		    if(PlayerInfo[playerid][pMember] == 14||PlayerInfo[playerid][pLeader] == 14) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับแก๊งค์เหลืองเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 110 || newcar == 111 || newcar == 112 || newcar == 113 || newcar == 114 || newcar == 115)
		{
		    if(PlayerInfo[playerid][pMember] == 16||PlayerInfo[playerid][pLeader] == 16) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับแว็นบอยเท่านั้น!");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
                }
      	if(newcar >= 157 && newcar <= 163 || newcar >= 177 && newcar <= 184)
		{
		    if(PlayerInfo[playerid][pMember] == 19||PlayerInfo[playerid][pLeader] == 19) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"สำหรับองกรณ์ลับเท่านั้น  ");
		        RemovePlayerFromVehicle(playerid);
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+3);
		    }
		}
		if(newcar >= 267 && newcar <= 276)
		{
		    if(PlayerInfo[playerid][pMember] == 20||PlayerInfo[playerid][pLeader] == 20) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"สำหรับ Red blood เท่านั้น  ");
		        RemovePlayerFromVehicle(playerid);
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+3);
		    }
		}
		if(newcar >= 185 && newcar <= 195)
		{
		    if(PlayerInfo[playerid][pMember] == 17||PlayerInfo[playerid][pLeader] == 17) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"  สำหรับแก๊งประตูผีเท่านั้น !");
		        RemovePlayerFromVehicle(playerid);
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+3);
		    }
		}
        if(newcar >= 261 && newcar <= 266)
		{
		    if(PlayerInfo[playerid][pMember] == 18||PlayerInfo[playerid][pLeader] == 18) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"  สำหรับทีมงานใต้ตึกเท่านั้น !");
		        RemovePlayerFromVehicle(playerid);
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+3);
		    }
		}
		if(newcar == 59)
		{
		}
		if(newcar == 51 || newcar == 52 || newcar == 53 || newcar == 54 || newcar == 55 || newcar == 56|| newcar == 214 || newcar == 215 || newcar == 216 || newcar == 217 || newcar == 218)
		{
		    if(PlayerInfo[playerid][pMember] == 5||PlayerInfo[playerid][pLeader] == 5) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับมาเฟียเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 66 || newcar == 67 || newcar == 68 || newcar == 69 || newcar == 70 || newcar == 71 || newcar == 72||newcar == 210||newcar == 211||newcar == 212||newcar == 213)
		{
		    if(PlayerInfo[playerid][pMember] == 8||PlayerInfo[playerid][pLeader] == 8) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับนักล่าค่าหัวเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 75 || newcar == 171)
		{
			if(PlayerInfo[playerid][pNewsSkill] < 200)
			{
			    SendClientMessage(playerid, COLOR_GREY, "สกิลทำข่าวต่ำไป, ไม่สามารถนำเครื่องขึ้นได้ !");
   				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
			}
		}
		if(newcar == 73 || newcar == 74 || newcar == 75 || newcar == 169 || newcar == 170 || newcar == 171)
		{
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9){ }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "สำหรับนักข่าวเท่านั้น !");
   				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
			}
		}
		if(newcar==116||newcar==117||newcar==118||newcar==119||newcar==120||newcar==121)
		{
		    if(PlayerKarting[playerid] != 1)
		    {
  				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		        }
		}
		if(newcar == 154 || newcar == 155 || newcar == 156)
		{
		    if (PlayerInfo[playerid][pAdmin] >= 1||PlayerInfo[playerid][pAdmin] >= 1) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"ต้องเช่าที่หน้าโชว์รูมนะครับ !(/rentcar ที่ตัว i ด้านซ้าย) ");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 244 || newcar == 245 || newcar == 246)
		{
		    if (PlayerInfo[playerid][pPnumber] >= 999999999) { }
		    else
			{
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   สนใจกรุณาพิม /donate เพื่อที่จะสอบถามสิ่งต่างๆ");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   ขอบคุณครับ ^^");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
		if(newcar == 287 )
		{
		    if (PlayerInfo[playerid][pDonateRank] >= 4) { }
		    else
			{
                SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   platinum เพ็กเกจเท่านั้น");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   สนใจกรุณาพิม /donate เพื่อที่จะสอบถามสิ่งต่างๆ");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   ขอบคุณครับ ^^");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
        if(newcar >= 277 && newcar <= 280)
		{
		    if (PlayerInfo[playerid][pDonateRank] >= 1) { }
		    else
			{
                SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   kowledge เพ็กเกจเท่านั้น");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   สนใจกรุณาพิม /donate เพื่อที่จะสอบถามสิ่งต่างๆ");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   ขอบคุณครับ ^^");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
        if(newcar == 281  || newcar == 282)
		{
		    if (PlayerInfo[playerid][pDonateRank] >= 2) { }
		    else
			{
                SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   silver เพ็กเกจเท่านั้น");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   สนใจกรุณาพิม /donate เพื่อที่จะสอบถามสิ่งต่างๆ");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   ขอบคุณครับ ^^");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
        if(newcar == 283 || newcar == 284)
		{
		    if (PlayerInfo[playerid][pDonateRank] >= 3) { }
		    else
			{
                SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   gold เพ็กเกจเท่านั้น");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   สนใจกรุณาพิม /donate เพื่อที่จะสอบถามสิ่งต่างๆ");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   ขอบคุณครับ ^^");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
        if(newcar == 285 || newcar == 286)
		{
		    if (PlayerInfo[playerid][pDonateRank] >= 4) { }
		    else
			{
                SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   platinum เพ็กเกจเท่านั้น");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   สนใจกรุณาพิม /donate เพื่อที่จะสอบถามสิ่งต่างๆ");
		        SendClientMessage(playerid,TEAM_AZTECAS_COLOR,"   ขอบคุณครับ ^^");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
				PlayerPlaySound(playerid, 1085, x, y, z+2);
		    }
		}
        if(newcar == 12 || newcar == 13|| newcar == 19|| newcar == 20|| newcar == 21|| newcar == 22|| newcar == 196|| newcar == 197)
		{
		    if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1||PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับตำรวจ/FBIเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
		    }
		}
        if(newcar == 198 || newcar == 199|| newcar == 200|| newcar == 201)
		{
		    if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับตำรวจเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
		    }
		}
		if( newcar == 206|| newcar == 207)
		{
		    if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับเจ้าหน้าที่ FBI เท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
		    }
		}
        if(newcar == 208 || newcar == 209)
		{
		    if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3) { }
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"   สำหรับทหารเท่านั้น !");
				new Float:x, Float:y, Float:z;
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x, y, z+2);
		    }
		}


	    if(oldcar != 301)
		{
			if((housecar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != housecar))
			{
				if(gLastDriver[oldcar] == playerid && oldcar != newcar)
				{
					gLastDriver[oldcar] = 300;
					gCarLock[oldcar] = 0;
					UnLockCar(oldcar);
				}
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		new price = WantedLevel[playerid] * 2000;
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
		{
			SetPlayerSpawn(playerid);
		    }
   		if(WantedLevel[playerid] > 0 && !IsACop(playerid))
     	{
    		//new dstring[128];
			//new wanted = WantedPoints[playerid];
  			while(WantedPoints[playerid] > 0)
		    {
            	WantedPoints[playerid] --;
		    }
     		SetPlayerInterior(playerid, 10);
    		SetPlayerPos(playerid,227.4012,110.1810,999.0156);
			SafeGivePlayerMoney(playerid, - price);
			PlayerInfo[playerid][pWantedDeaths] += 1;
			PlayerInfo[playerid][pJailed] = 1;
  			PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(120);
           	format(string, sizeof(string), "* คุณติดคุกเป็นเวลา %d วินาที , และเสียค่าปรับจำนาน $%d เพราะคุณกระทำความผิด", PlayerInfo[playerid][pJailTime], price);
   			SendClientMessage(playerid, COLOR_LIGHTRED, string);
   			PlayerInfo[playerid][pRobber] = 0;
   			SetPlayerSkin(playerid, 268);
			WantedLevel[playerid] = 0;
			WantedPoints[playerid] = 0;
			SetPlayerStar(playerid);
		}
		if(IsACop(playerid))
     	{
			SetPlayerStar(playerid);
		}
		if(PlayerOnMission[playerid] > 0)
		{
			GameTextForPlayer(playerid, "~r~Mission failed", 5000, 3);
			PlayerOnMission[playerid] = 0;
		    PlayerInfo[playerid][pMissionNr] = 0;
		}
		WantedPoints[playerid] = 0;
		WantedLevel[playerid] = 0;
		SetPlayerStar(playerid);
		if(PlayerInfo[playerid][pDonateRank] > 0) { SetPlayerHealth(playerid, 100.0); }
		else { SetPlayerHealth(playerid, 50.0+PlayerInfo[playerid][pSHealth]); }
		MedicBill[playerid] = 1;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return 1;
}

public HireCost(carid)
{
	switch (carid)
	{
		case 69:
		{
			return 90000; //bullit
		}
		case 70:
		{
			return 130000; //infurnus
		}
		case 71:
		{
			return 100000; //turismo
		}
		case 72:
		{
			return 80000;
		}
		case 73:
		{
			return 70000;
		}
		case 74:
		{
			return 60000;
		}
	}
	return 0;
}

public CarCheck()
{
	new string[256];
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsPlayerConnected(j))
	    {
	        SetVehicleParamsForPlayer(99, j, 0, 0);
	        SetVehicleParamsForPlayer(100, j, 0, 0);
	        SetVehicleParamsForPlayer(101, j, 0, 0);
	        SetVehicleParamsForPlayer(102, j, 0, 0);
	        SetVehicleParamsForPlayer(103, j, 0, 0);
	        SetVehicleParamsForPlayer(104, j, 0, 0);
	        SetVehicleParamsForPlayer(105, j, 0, 0);
	        SetVehicleParamsForPlayer(106, j, 0, 0);
	        SetVehicleParamsForPlayer(107, j, 0, 0);
	        SetVehicleParamsForPlayer(108, j, 0, 0);
	        SetVehicleParamsForPlayer(109, j, 0, 0);
		    new Float:health;
		    GetPlayerHealth(j, health);
			SetPlayerHealth(j, health - 1.0);
			if(STDPlayer[j]==1)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Lost 4 health due to STD.");
			}
			else if(STDPlayer[j]==2)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 12.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Lost 8 health due to STD.");
			}
			else if(STDPlayer[j]==3)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 20.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Lost 12 health due to STD.");
			}

			if(ScriptMoney[j] < 0)
			{
			    if(MoneyMessage[j]==0)
			    {
				    format(string, sizeof(string), "You are in debt, you have till next Time Check to get: $%d or you go to jail.", ScriptMoney[j]);
					SendClientMessage(j, COLOR_LIGHTRED, string);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
			    MoneyMessage[j] = 0;
			}
		}
	}
	for(new c = 1; c < 254; c++)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if (PlayerInfo[i][pJob] == 5)
				{
					SetVehicleParamsForPlayer(c, i, 0, 0);
				}
			}
		}
		if (gLastDriver[c] == 301)
		{
			//CarRespawn(c);
		}
		if (gLastDriver[c] >= 300)
		{
			gLastDriver[c]++;
		}
		//foundowner = -1;
	}
	return 1;
}

public CarInit()
{
	for(new c = 1; c < 254; c++)
	{
 		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return 1;
}

public CarRespawn(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehicleToRespawn(carid);
	gLastDriver[carid] = 299;
	return 1;
}

public LockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,1);
		}
	}
}

public UnLockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(!IsAPlane(carid))
			{
				SetVehicleParamsForPlayer(carid,i,0,0);
			}
		}
	}
}

public InitLockDoors(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		new c;
		while (c < 254)
		{
			c++;
			if (gCarLock[c] == 1)
			{
				SetVehicleParamsForPlayer(c,playerid,0,1);
			}
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	if (GetPlayerState(playerid) == 1)
	{
		return 1;
	}
	if(gGas[playerid] == 0)
	{
	    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~Left car", 500, 3);
	}
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
    PlayerInfo[playerid][pModel] = Peds[classid][0];

    if (RegistrationStep[playerid] == 0 && gPlayerLogged[playerid] != 1)
    {
        ClearChatbox(playerid, 10);
        SendClientMessage(playerid, COLOR_GREEN, " ~ Welcome to GTA Roleplay! ~");
        SendClientMessage(playerid, COLOR_RED, " Use Max 12 Letters in your Name or it wont save! ");
        SendClientMessage(playerid, COLOR_YELLOW2, " ");
        SendClientMessage(playerid, COLOR_YELLOW2, " ");
        SendClientMessage(playerid, COLOR_YELLOW2, " ");
        SendClientMessage(playerid, COLOR_YELLOW2, " ");
        SendClientMessage(playerid, COLOR_YELLOW2, " ");
        SendClientMessage(playerid, COLOR_YELLOW2, " ");
        if (gPlayerAccount[playerid] != 0)
        {
            new loginstring[128];
            new loginname[64];
            GetPlayerName(playerid,loginname,sizeof(loginname));
            format(loginstring,sizeof(loginstring),"Welcome, %s\nThat nick is registered.\nYou can now login:",loginname);
            ShowPlayerDialog(playerid,12346,DIALOG_STYLE_INPUT,"Login",loginstring,"Login","Exit");
        }
        else
        {
            gPlayerAccount[playerid] = 0;
           	new regstring[128];
            new regname[64];
            GetPlayerName(playerid,regname,sizeof(regname));
            format(regstring,sizeof(regstring),"Welcome, %s\nYou dont have an account.\nPlease register:",regname);
            ShowPlayerDialog(playerid,12345,DIALOG_STYLE_INPUT,"Register",regstring,"Register","Exit");
        }
        //PlayerPlaySound(playerid, 1187, 0.0, 0.0, 0.0);
        PlayerInfo[playerid][pModel] = Peds[classid][0];
        SetPlayerTeamFromClass(playerid,classid);
    }
    else SpawnPlayer(playerid);
    return false;

     /*if (classid == 1)
    {
            format(string, sizeof(string), "~y~> ~p~Police Chief ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 2)
    {
            format(string, sizeof(string), "~y~> ~p~FBI/ATF Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 3)
    {
            format(string, sizeof(string), "~y~> ~p~National Guard General ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 4)
    {
            format(string, sizeof(string), "~y~> ~p~Fire/Ambulance Chief ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 5)
    {
            format(string, sizeof(string), "~y~> ~p~Espana Drogas Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 6)
    {
            format(string, sizeof(string), "~y~> ~p~Luciano Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 7)
    {
            format(string, sizeof(string), "~y~> ~p~Mayor ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 8)
    {
            format(string, sizeof(string), "~y~> ~p~Hitman Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 9)
    {
            format(string, sizeof(string), "~y~> ~p~News Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 10)
    {
            format(string, sizeof(string), "~y~> ~p~Taxi Cab Company Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 11)
    {
            format(string, sizeof(string), "~y~> ~p~License Faction Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 14)
    {
            format(string, sizeof(string), "~y~> ~p~Nortenos Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 15)
    {
            format(string, sizeof(string), "~y~> ~p~Grove Street Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else if (classid == 16)
    {
            format(string, sizeof(string), "~y~> ~p~Jefferson Saints Leader ~y~< ~n~Leaders only!");
            GameTextForPlayer(playerid,string,3500,6);
    }
    else
    {
        format(string, sizeof(string), "~y~> ~g~Civilian ~y~<");
        GameTextForPlayer(playerid,string,3500,6);
    }
    SetPlayerTeamFromClass(playerid,classid);
    SetupPlayerForClassSelection(playerid);
    return 1;*/
}
public SetupPlayerForClassSelection(playerid)
{
    /*switch (gTeam[playerid])
    {
        case TEAM_BLUE:
        {
            SetPlayerInterior(playerid,5);
            SetPlayerPos(playerid,323.4,305.6,999.1);
            SetPlayerFacingAngle(playerid, 90.0);
            SetPlayerCameraPos(playerid,323.4-1.5-1.0,305.6,999.1+0.7);
            SetPlayerCameraLookAt(playerid,323.4-1.0,305.6,999.1+0.7);

        }
        case TEAM_ADMIN:
        {
            SetPlayerInterior(playerid,3);
            SetPlayerPos(playerid,-2654.4,1424.2,912.4);
            SetPlayerFacingAngle(playerid, 90.0);
            SetPlayerCameraPos(playerid,-2654.4-1.5,1424.2,912.4+0.7);
            SetPlayerCameraLookAt(playerid,-2654.4,1424.2,912.4+0.7);
        }
        default:
        {
            SetPlayerInterior(playerid,3);
            SetPlayerPos(playerid,361.8270,174.0347,1008.3893);
            SetPlayerFacingAngle(playerid,90);
            SetPlayerCameraPos(playerid, 361.7270,169.0347,1008.3893);
            SetPlayerCameraLookAt(playerid,361.8270,174.0347,1008.3893);
        }
    }*/
}
//---------------------------------------------------------

public SetPlayerTeamFromClass(playerid,classid)
{
     /*if (classid >= 1 && classid <= 14)
    {
        gTeam[playerid] = 11; //admin
        PlayerInfo[playerid][pTeam] = 11;
    }
    else
    {
        gTeam[playerid] = 3;
        PlayerInfo[playerid][pTeam] = 3;
    }*/
}

//---------------------------------------------------------

public SetPlayerCriminal(playerid,declare,reason[])
{//example: SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
	if(IsPlayerConnected(playerid))
	{
	    PlayerInfo[playerid][pCrimes] += 1;
	    new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "พลเมืองดี");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(turnmes, sizeof(turnmes), "* คุณกระทำความผิดข้อหา ( %s ) ผู้รายงาน: %s",reason,turner);
		SendClientMessage(playerid, COLOR_LIGHTRED, turnmes);
		if(points > 0)
		{
		    new yesno;
			if(points == 2) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5) { if(WantedLevel[playerid] != 2) { WantedLevel[playerid] = 2; wlevel = 2; yesno = 1; } }
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14) { if(WantedLevel[playerid] != 10) { WantedLevel[playerid] = 10; wlevel = 10; yesno = 1; } }
			if(WantedLevel[playerid] >= 1) { if(gTeam[playerid] == 3) { gTeam[playerid] = 4; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), " ระดับความต้องการตัว: %d", wlevel);
				SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
				SetPlayerStar(playerid);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1 || PlayerInfo[i][pMember] == 2||PlayerInfo[i][pLeader] == 2 || PlayerInfo[i][pMember] == 3||PlayerInfo[i][pLeader] == 3|| PlayerInfo[i][pMember] == 19||PlayerInfo[i][pLeader] == 19|| PlayerInfo[i][pMember] == 21||PlayerInfo[i][pLeader] == 21 || PlayerInfo[i][pMember] == 22||PlayerInfo[i][pLeader] == 22)
					    {
							format(cbjstore, sizeof(turnmes), "HQ: ทุกหน่วยโปรดทราบ: ผู้รายงาน: %s",turner);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
							format(cbjstore, sizeof(turnmes), "HQ: ข้อหา: %s, ผู้กระทำความผิด: %s",reason,turned);
							SendClientMessage(i, TEAM_BLUE_COLOR, cbjstore);
						}
					}
				}
			}
		}
	}//not connected
}
//---------------------------------------------------------

public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new crbjstore[128];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "911");
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		format(turnmes, sizeof(turnmes), "SMS: คุณถูกจับแล้ว, คุณจะไม่มีการอาชญากรรมอีกต่อไป, โดย: MOLE (555)");
		RingTone[playerid] = 20;
		SendClientMessage(playerid, COLOR_YELLOW, turnmes);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
			    {
					format(crbjstore, sizeof(crbjstore), "HQ: เจ้าหน้าที่ %s จับผู้ต้องหา",turner);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
					format(crbjstore, sizeof(crbjstore), "%s , %s",turned,reason);
					SendClientMessage(i, COLOR_DBLUE, crbjstore);
				}
			}
		}
	}
}

public RingToner()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 6)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 20)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
			}
		}
	}
	SetTimer("RingTonerRev", 1000, 0);
	return 1;
}

public RingTonerRev()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 5)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 19)
			{
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				RingTone[i] = 0;
			}
		}
	}
	SetTimer("RingToner", 1000, 0);
	return 1;
}

public OtherTimer()
{
    new Float:maxspeed = 175.0;
    new plname[MAX_PLAYER_NAME];
	new string[256];
	new Float:oldposx, Float:oldposy, Float:oldposz;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (GetPlayerState(i) == 1) CheckForWalkingTeleport(i);
			if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerAccount[i] == 1 && gPlayerLogged[i] == 0)
				{
					new loginname[64];
					new loginstring[128];
					GetPlayerName(i,loginname,64);
					format(loginstring,sizeof(loginstring),"Welcome, %s\nYou can now login:",loginname);
					ShowPlayerDialog(i,12346,DIALOG_STYLE_INPUT,"Login",loginstring,"Login","Exit");
				}
			}
			if(gPlayerAccount[i] == 1 && gPlayerLogged[i] == 0)
			{
				SendClientMessage(i, COLOR_YELLOW, "SERVER: โปรด /login เพื่อเข้าเล่น");
			}
		}
	    if(GetPlayerState(i) == 2)
	    {
			GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
			if(TelePos[i][5] > 550.0)
			{
				TelePos[i][0] = 0.0;
				TelePos[i][1] = 0.0;
			}
			if(TelePos[i][0] != 0.0)
			{
				new Float:xdist = TelePos[i][3]-TelePos[i][0];
				new Float:ydist = TelePos[i][4]-TelePos[i][1];
				new Float:sqxdist = xdist*xdist;
				new Float:sqydist = ydist*ydist;
				new Float:distance = (sqxdist+sqydist)/31;
				if(gSpeedo[i] == 2)
				{
					if(distance <10)
					{
						format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph :   ~w~%.0f",distance);
					}
					if(distance > 10 && distance < 100)
					{
						format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph :  ~w~%.0f",distance);
					}
					if(distance > 100)
					{
						format(string, 256, "~n~~n~~n~~n~~n~~n~~n~~g~mph : ~w~%.0f",distance);
					}
					GameTextForPlayer(i, string, 2000, 5);
				}
				if(distance > maxspeed && PlayerInfo[i][pAdmin] < 4)
				{
					new tmpcar = GetPlayerVehicleID(i);
					if(!IsAPlane(tmpcar))
					{
						GetPlayerName(i, plname, sizeof(plname));
						format(string, 256, "AdmWarning: ต้องสงสัยว่า [%d]%s ใช้ความเร็ว %.0f mph ต่อ 1 วินาที",i,plname,distance);
						SendAdminMessage(COLOR_YELLOW, string);
					}
				}
			}
			if(TelePos[i][5] < 550.0 && TelePos[i][3] != 0.0)
			{
				TelePos[i][0] = TelePos[i][3];
				TelePos[i][1] = TelePos[i][4];
			}
		}
	    if(PlayerInfo[i][pLocal] != 255 && PlayerInfo[i][pInt] != 0)
		{
			new house = PlayerInfo[i][pLocal];
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			if(oldposz != 0.0)
			{
				if(oldposz < 600.0)
				{
					if(house > 10000)
					{
						if (!PlayerToPoint(6, i,1040.6,-1021.0,31.7) && house == 10001 ||!PlayerToPoint(6, i,-2720.5,217.5,4.1) && house == 10002 ||!PlayerToPoint(6, i,2644.6,-2044.9,13.3) && house == 10003)
						{
							new oldcash = gSpentCash[i];
							new Total = ScriptMoney[i] - oldcash;
							printf("Total %d = ScriptMoney[playerid] %d - oldcash %d",Total,GetPlayerMoney(i),oldcash);
							new name[MAX_PLAYER_NAME];
							GetPlayerName(i, name, sizeof(name));
							format(string,128,"<< %s has left the homemodshop with $%d >>",name,Total);
							PayLog(string);
							gSpentCash[i] = 0;
							TelePos[i][0] = 0.0;
							TelePos[i][1] = 0.0;
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
							Spectate[i] = 255;
						}
					}
					if(house == 241)//City Hall
					{
					    SetPlayerInterior(i,0);
						SetPlayerPos(i,-2766.2881,375.5615,6.3347);
						PlayerInfo[i][pInt] = 0;
						PlayerInfo[i][pLocal] = 255;
					}
					if(house == 242)
					{
					    SetPlayerInterior(i,0);
						SetPlayerPos(i,1073.0619,-344.5148,73.9922);
						PlayerInfo[i][pInt] = 0;
						PlayerInfo[i][pLocal] = 255;
					}
					if(house >= 99 && house != 10000)
					{
						SetPlayerPos(i, BizzInfo[house-99][bEntranceX], BizzInfo[house-99][bEntranceY],BizzInfo[house-99][bEntranceZ]); // Warp the player
						PlayerInfo[i][pLocal] = 255;
						SetPlayerInterior(i,0);
						PlayerInfo[i][pInt] = 0;
					}
					else if(house < 99 && house != 10000)
					{
						SetPlayerPos(i, HouseInfo[house][hEntrancex], HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]); // Warp the player
						PlayerInfo[i][pLocal] = 255;
						SetPlayerInterior(i,0);
						PlayerInfo[i][pInt] = 0;
					}
				}
			}
		}
	    if(CellTime[i] > 0)
		{
			if (CellTime[i] == cchargetime)
			{
				CellTime[i] = 1;
				if(Mobile[Mobile[i]] == i)
				{
					CallCost[i] = CallCost[i]+callcost;
				}
			}
			CellTime[i] = CellTime[i] +1;
			if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
			{
			    if(IsPlayerConnected(Mobile[i]))
			    {
					new called[MAX_PLAYER_NAME];
					GetPlayerName(Mobile[i], called, sizeof(called));
					RingTone[Mobile[i]] = 10;
					format(string, sizeof(string), "* %sกำลังหาโทรศัพท์.", called);
					ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
		if(CellTime[i] == 0 && CallCost[i] > 0)
		{
			format(string, sizeof(string), "~w~The call cost~n~~r~$%d",CallCost[i]);
			SafeGivePlayerMoney(i, -CallCost[i]);
			SBizzInfo[2][sbTill] += CallCost[i];
			ExtortionSBiz(2, CallCost[i]);
			GameTextForPlayer(i, string, 5000, 1);
			CallCost[i] = 0;
		}
		if(TransportTime[i] > 0)
		{//Taxi driver and passenger only
		    if(TransportTime[i] >= 16)
			{
				TransportTime[i] = 1;
				if(TransportDriver[i] < 999)
				{
					if(IsPlayerConnected(TransportDriver[i]))
					{
      					TransportCost[i] += TransportValue[TransportDriver[i]];
					    TransportCost[TransportDriver[i]] = TransportCost[i];
					}
				}
			}
		    TransportTime[i] += 1;
		    format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
		    GameTextForPlayer(i, string, 15000, 6);
		}
	}
}


public SetPlayerUnjail()
{
	new plname[MAX_PLAYER_NAME];
	new string[256];
	if(PaintballPlayers >= 2 && PaintballRound != 1 && StartingPaintballRound != 1)
	{
		StartingPaintballRound = 1;
	   	SetTimer("PreparePaintball", 15000, 0);
	}
	if(KartingPlayers >= 2 && KartingRound != 1 && StartingKartRound != 1)
	{
	    StartingKartRound = 1;
	    SetTimer("PrepareKarting", 15000, 0);
	}
	if(KartingRound != 0 && KartingPlayers < 2)
	{
	    StartingKartRound = 0;
	    KartingRound = 0;
	    EndingKartRound = 1;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			new newcar = GetPlayerVehicleID(i);
			new level = PlayerInfo[i][pLevel];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pPayCheck] += 1; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pPayCheck] += 2; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pPayCheck] += 3; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pPayCheck] += 4; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pPayCheck] += 5; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pPayCheck] += 6; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pPayCheck] += 7; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pPayCheck] += 8; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pPayCheck] += 9; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pPayCheck] += 10; }
			else if(level >= 21) { PlayerInfo[i][pPayCheck] += 11; }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0 && WantLawyer[i] == 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0 && WantLawyer[i] == 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerInterior(i, 10);
						SetPlayerPos(i,227.4012,113.1810,999.0156);
					}
					else if(PlayerInfo[i][pJailed] == 2)
					{
					    SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
					    SetPlayerInterior(i, 0);
					    SetPlayerPos(i, 90.2101,1920.4854,17.9422);
					}
					SetPlayerSkin(i, PlayerInfo[i][pModel]);
					PlayerInfo[i][pJailed] = 0;
					format(string, sizeof(string), "~g~Freedom~n~~w~Try to be a better citizen");
					GameTextForPlayer(i, string, 5000, 1);
					if(gTeam[i] == 4) { gTeam[i] = 3; }
					ClearCrime(i);
					SetPlayerToTeamColor(i);
				}
			}
			if(ScriptMoney[i] - CurrentMoney[i] >= 50000 && PlayerInfo[i][pAdmin] < 1)
		    {
		        if(ConsumingMoney[i])
		        {
                    CurrentMoney[i] = ScriptMoney[i];
					ConsumingMoney[i] = 0;
		        }
		        else
		        {
			        GetPlayerName(i, plname, sizeof(plname));
			        format(string, 256, "AdmWarning: ต้องสงสัยว่า [%d]%s ได้เงิน 50000 หรือมากกว่า ในเวลา 1 วินาที",i,plname);
					ABroadCast(COLOR_YELLOW,string,1);
					PayLog(string);
			        CurrentMoney[i] = ScriptMoney[i];
		        }
		    }
		    else
		    {
		        CurrentMoney[i] = ScriptMoney[i];
		    }
		    if(IsABoat(newcar))
			{
			    if(PlayerInfo[i][pBoatLic] < 1 && GetPlayerState(i) == 2)
				{
				    RemovePlayerFromVehicle(i);
				}
			}
			else if(IsAPlane(newcar))
			{
			    if(PlayerInfo[i][pFlyLic] < 1 && GetPlayerState(i) == 2)
				{
				    if(TakingLesson[i] == 1) { }
				    else { RemovePlayerFromVehicle(i); }
				}
			}
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] += 1;
				if(UsedFind[i] >= 120)
				{
				    UsedFind[i] = 0;
				}
		    }
			if(MedicTime[i] > 0)
			{
			    if(MedicTime[i] == 3)
			    {
			        SetPlayerInterior(i, 5);
			        new Float:X, Float:Y, Float:Z;
			        GetPlayerPos(i, X,Y,Z);
			        SetPlayerCameraPos(i, X + 3, Y, Z);
			        SetPlayerCameraLookAt(i,X,Y,Z);
			    }
			    MedicTime[i] ++;
			    if(MedicTime[i] >= NeedMedicTime[i])
			    {
					new cut = deathcost; //PlayerInfo[playerid][pLevel]*deathcost;
					SafeGivePlayerMoney(i, -cut);
					format(string, sizeof(string), " แพทย์: คุณเสียค่ารักษาพยาบาล $%d , และขอให้คุณโชคดี", cut);
					SendClientMessage(i, TEAM_CYAN_COLOR, string);
					TogglePlayerControllable(i, 1);
			        MedicBill[i] = 0;
			        MedicTime[i] = 0;
			        NeedMedicTime[i] = 0;
			        PlayerInfo[i][pDeaths] += 1;
			        PlayerFixRadio(i);
			        SpawnPlayer(i);
			    }
			}
			if(WantLawyer[i] >= 1)
			{
			    CallLawyer[i] = 111;
			    if(WantLawyer[i] == 1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "คุณต้องการทนายไหม? (พิมพ์ yes กับ no)");
				}
				WantLawyer[i] ++;
				if(WantLawyer[i] == 8)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "คุณต้องการทนายไหม? (พิมพ์ yes กับ no)");
				}
	            if(WantLawyer[i] == 15)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "คุณต้องการทนายไหม? (พิมพ์ yes กับ no)");
				}
				if(WantLawyer[i] == 20)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Ok คุณไม่ต้องการทนาย");
				    WantLawyer[i] = 0;
				    CallLawyer[i] = 0;
				}
			}
			if(TutTime[i] >= 1)
			{
			    TutTime[i] += 1;
			    if(TutTime[i] == 4)
			    {
			        SendClientMessage(i, 0xABF656AA, "-บทเรียน: อธิบายเบื้องต้น-");
			        SendClientMessage(i, 0xABF6F6AA, "สวัสดีครับ , คุณเพิ่งมาใหม่ใช่ไหม เอาละเราจะสอนบทเรียนเบื้องต้นให้นะ");
			        SendClientMessage(i, 0xABF6F6AA, "การใช้ชีวิตอยู่ที่เซิฟเวอร์นี้คุณจะต้องมีความเคารพคนอื่น");
			        SendClientMessage(i, 0xABF6F6AA, "และที่สำคัญคุณควรเคารพกฏของเซิฟเวอร์");
			    }
			    else if(TutTime[i] == 12)
			    {
			        SendClientMessage(i, 0xABF656AA, "-บทเรียน: ข้อมูลเซิฟเวอร์-");
			    }
			    else if(TutTime[i] == 16)
			    {
			        SendClientMessage(i, 0xABF6F6AA, "เซิฟเวอร์เรานั้นเป็นโหมด Real-Life หรือโหมด ชีวิตจริงนั้นเอง");
			        SendClientMessage(i, 0xABF6F6AA, "คุณต้องปฏิบัติตามกฏอย่างเคร่งครัด เพราะนี้ไม่ใช่ระบบ DeathMatch");
			        SendClientMessage(i, 0xABF6F6AA, "หากคุณยิงคนภายในเมืองคุณอาจจะถูกตำรวจจับได้");
			        SendClientMessage(i, 0xABF6F6AA, "และคุณควรตั้งชื่อแบบ ชื่อ_นามสกุล เช่น: Firstname_Lastname");
			    }
			    else if(TutTime[i] == 24)
			    {
			        SendClientMessage(i, 0xABF656AA, "-บทเรียน: ขอความช่วยเหลือ-");
			    }
			    else if(TutTime[i] == 28)
			    {
			        SendClientMessage(i, 0xABF6F6AA, "หากคุณสงสัยหรือมีคำถามถึงแอดมินโปรดพิม /report เพื่อติดต่อแอดมิน");
			        SendClientMessage(i, 0xABF6F6AA, "ตัวอย่างการ/report สวัสดีครับ, ผมขอถามเกี่ยวกับวิธีขอใบขับขี่หน่อยครับ?");
			        SendClientMessage(i, 0xABF6F6AA, "หากคุณด่าหรือว่าแอดมิน และผู้เล่นคนอื่นๆจะทำให้เขาไม่อยากตอบคำถามคุณ..");
			        SendClientMessage(i, 0xABF6F6AA, "หรือคุณอาจจะโดน banned ได้");
			        SendClientMessage(i, 0xABF6F6AA, "ใช้คำสั่ง /o (OOC) /w (Whisper) /call (ถ้าคุณมีโทรศัพท์) เพื่อพูดกับใครสักคน");
			    }
			    else if(TutTime[i] == 36)
			    {
			        SendClientMessage(i, 0xABF656AA, "-บทเรียน: โปรแกรมโกง & บัคเซิฟ-");
			    }
			    else if(TutTime[i] == 40)
			    {
			        SendClientMessage(i, 0xABF6F6AA, "ทางเซิฟเวอร์เราไม่อนุญาติให้คุณใช้โปรแกรมโกงและบัคเซิฟ");
			        SendClientMessage(i, 0xABF6F6AA, "หากคุณใช้โปรแกรมโกงหรือบัคเซิฟเวอร์, คุณจะโดน banned");
			        SendClientMessage(i, 0xABF6F6AA, "เมื่อคุึณพบผู้เล่นอื่นโปร, กรุณาแจ้ง ด้วยการพิม /report (ข้อความ)");
			        SendClientMessage(i, 0xABF6F6AA, "หากคุณใช้บัค, ในการเล่น โทษของการ ลงโทษจะใกล้เคียงกับการใช้โปร");
			        SendClientMessage(i, 0xABF6F6AA, "หากคุณได้รับเงินจากผู้เล่นที่โปรกรุณาแจ้งแอดมินเพื่อให้ลบเงิน");
			        SendClientMessage(i, 0xABF6F6AA, "หวังว่าคุณจะปฏิบัติตามกฏนะ");
			    }
			    else if(TutTime[i] == 48)
			    {
			        SendClientMessage(i, 0xABF656AA, "-บทเรียน: ความเคารพ-");
			    }
			    else if(TutTime[i] == 52)
			    {
			        SendClientMessage(i, 0xABF6F6AA, "คุณต้องเคารพผู้เล่นอื่นและแอดมิน");
			        SendClientMessage(i, 0xABF6F6AA, "หากคุณด่าหรือพูดหยาบคายในช่อง OOC คุณจะถูกใบ้");
	                SendClientMessage(i, 0xABF6F6AA, "การฟลั๊ดหรือการพิมพ์รัวๆในช่อง OOC จะทำให้คุณถูก kick หรือ banned");
			        SendClientMessage(i, 0xABF6F6AA, "คุณจงจำไว้ว่าการเคารพผู้อื่นสำคัญในเซิฟเรา");
			    }
			    else if(TutTime[i] == 60)
			    {
			        SendClientMessage(i, 0xABF656AA, "-บทเรียน: ข้อห้ามที่ไม่อนุญาติ-");
			    }
			    else if(TutTime[i] == 64)
			    
			    {   SendClientMessage(i, 0xABF6F6AA, "ทางเซิฟเวอร์เราไม่ให้ Drive-By เพราะมันง่ายต่อการฆ่าเกินไป");
			        SendClientMessage(i, 0xABF6F6AA, "และการ DeathMatch ด้วย เราก็ไม่ให้ทำเช่นกัน");
			        SendClientMessage(i, 0xABF6F6AA, "การกระทำ Drive-By , DeathMatch อาจจะทำให้คุณโดน banned ได้");
			    }
			    else if(TutTime[i] == 72)
			    {
			        SendClientMessage(i, 0xABF656AA, "-บทเรียน: การใช้ภาษา & การโฆษณา-");
			    }
			    else if(TutTime[i] == 76)
			    {
			        SendClientMessage(i, 0xABF6F6AA, "ทางเราอนุญาติให้คุณใช้ภาษาไทยเป็นภาษาหลักในการพูด");
			        SendClientMessage(i, 0xABF6F6AA, "และก็ควรพูดเพราะๆ ไม่ใช้คำหยาบคาย ควรใช้ภาษาสุภาพ");
			        SendClientMessage(i, 0xABF6F6AA, "และหากคุณโฆษณา IP เซิฟอื่นบนเซิฟเรา คุณจะโดน banned ทันที");
			    }
			    else if(TutTime[i] == 84)
			    {
			        SendClientMessage(i, 0xABF656AA, "-บทเรียน: สุดท้าย-");
			    }
			    else if(TutTime[i] == 88)
			    {
			        SendClientMessage(i, 0xABF6F6AA, "หวังว่ากฏที่เราอธิบายมาทั้งหมดคุณจะจำและปฏิบัติตามนะ");
			        SendClientMessage(i, 0xABF6F6AA, "เอาละ ^^ ขอให้สนุกกับเซิฟเวอร์เรานะครับ!");
			        SendClientMessage(i, 0xABF6F6AA, "และขอต้อนรับท่านสู่The Samp-ROLEPLAY Serverนะครับ");
			    }
			    else if(TutTime[i] == 90)
			    {
			        TutTime[i] = 0; PlayerInfo[i][pTut] = 1;
					gOoc[i] = 0; gNews[i] = 0; gFam[i] = 0;
					TogglePlayerControllable(i, 1);
					MedicBill[i] = 0;
					SetPlayerSpawn(i);
					SetPlayerCheckpoint(i,-2029.5083,-96.1286,35.1641,8.0);
					CP[i] = 99;
					SendClientMessage(i, 0x00F600AA, "คุณสามารถทำใบขับขี่ได้โดยการ ขี่จักรยานหรือ");
					SendClientMessage(i, 0x00F600AA, "โดยการ เรียกแท็กซี่/service taxi");
					SendClientMessage(i, 0x00F600AA, "ไปยังจุดสีแดงๆในแผนที่นะครับ");
					SendClientMessage(i, 0x00F600AA, "หากคุณต้องการหางานทำ หลังจากที่ทำใบขับขี่เรียบร้อยแล้ว ให้ใช้ /gps หาตำแหน่งสมัครงานต่างๆได้ ");
					SendClientMessage(i, 0x00F600AA, "หากคุณต้องการรู้คำสั่งที่ให้พิมพ์ /help");
			    }
			}
			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(PlayerDrunk[i] >= 5)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] == 10)
			    {
			        PlayerDrunkTime[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
					}
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
		        PlayerStoned[i] += 1;
			    if(PlayerStoned[i] == 10)
			    {
			        PlayerStoned[i] = 2;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    SetPlayerFacingAngle(i, angle + 90);
					}
			    }
			}
			if(PlayerInfo[i][pCarTime] > 0)
			{
			    if(PlayerInfo[i][pCarTime] <= 0)
			    {
			        PlayerInfo[i][pCarTime] = 0;
			    }
			    else
			    {
			        PlayerInfo[i][pCarTime] -= 1;
			    }
			}
			if(BoxWaitTime[i] > 0)
			{
			    if(BoxWaitTime[i] >= BoxDelay)
				{
				    BoxDelay = 0;
					BoxWaitTime[i] = 0;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~g~Match Started", 5000, 1);
					TogglePlayerControllable(i, 1);
					RoundStarted = 1;
				}
			    else
				{
				    format(string, sizeof(string), "%d", BoxDelay - BoxWaitTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					BoxWaitTime[i] += 1;
				}
			}
			if(RoundStarted > 0)
			{
			    if(PlayerBoxing[i] > 0)
			    {
			        new trigger = 0;
			        new Lost = 0;
		        	new Float:angle;
		            new Float:health;
					GetPlayerHealth(i, health);
		            if(health < 12)
					{
					    if(i == Boxer1) { Lost = 1; trigger = 1; }
			            else if(i == Boxer2) { Lost = 2; trigger = 1; }
					}
			        if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
			        if(trigger)
			        {
			            new winner[MAX_PLAYER_NAME];
			            new loser[MAX_PLAYER_NAME];
			            new titel[MAX_PLAYER_NAME];
			            if(Lost == 1)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, loser, sizeof(loser));
			                	GetPlayerName(Boxer2, winner, sizeof(winner));
		                		if(PlayerInfo[Boxer1][pJob] == 12) { PlayerInfo[Boxer1][pLoses] += 1; }
								if(PlayerInfo[Boxer2][pJob] == 12) { PlayerInfo[Boxer2][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer2)
				                	    {
				                	        if(PlayerInfo[Boxer2][pJob] == 10)
				                	        {
				                	            TBoxer = Boxer2;
				                	            GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(string, sizeof(string), "Boxing News: %s has Won the fight against Champion %s and is now the new Boxing Champion.",  titel, loser);
												OOCOff(COLOR_WHITE,string);
				                	        }
				                	        else
				                	        {
				                	            SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* You would have been the Champion if you had the Boxer Job !");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "Boxing News: Boxing Champion %s has Won the fight against %s.",  titel, loser);
											OOCOff(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), "* You have Lost the Fight against %s.", winner);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer1, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "* You have Won the Fight against %s.", loser);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer2, "~r~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* You feel exhausted from the Fight, go eat somewhere.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* You feel perfect, even after the Fight.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* You feel exhausted from the Fight, go eat somewhere.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* You feel perfect, even after the Fight.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
								if(PlayerInfo[Boxer2][pJob] == 10) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            else if(Lost == 2)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, winner, sizeof(winner));
			                	GetPlayerName(Boxer2, loser, sizeof(loser));
		                		if(PlayerInfo[Boxer2][pJob] == 10) { PlayerInfo[Boxer2][pLoses] += 1; }
								if(PlayerInfo[Boxer1][pJob] == 10) { PlayerInfo[Boxer1][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer1)
				                	    {
				                	        if(PlayerInfo[Boxer1][pJob] == 10)
				                	        {
					                	        TBoxer = Boxer1;
					                	        GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(string, sizeof(string), "Boxing News: %s has Won the fight against Champion %s and is now the new Boxing Champion.",  titel, loser);
												OOCOff(COLOR_WHITE,string);
											}
				                	        else
				                	        {
				                	            SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* You would have been the Champion if you had the Boxer Job !");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(string, sizeof(string), "Boxing News: Boxing Champion %s has Won the fight against %s.",  titel, loser);
											OOCOff(COLOR_WHITE,string);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(string, sizeof(string), "* You have Lost the Fight against %s.", winner);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer2, "~r~You lost", 3500, 1);
								format(string, sizeof(string), "* You have Won the Fight against %s.", loser);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer1, "~g~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* You feel exhausted from the Fight, go eat somewhere.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "* You feel perfect, even after the Fight.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* You feel exhausted from the Fight, go eat somewhere.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "* You feel perfect, even after the Fight.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Match Over", 5000, 1); GameTextForPlayer(Boxer2, "~g~Match Over", 5000, 1);
								if(PlayerInfo[Boxer1][pJob] == 10) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            InRing = 0;
			            RoundStarted = 0;
			            Boxer1 = 255;
			            Boxer2 = 255;
			            TBoxer = 255;
			            trigger = 0;
			        }
			    }
			}
			if(StartingPaintballRound == 1 && AnnouncedPaintballRound == 0)
			{
			    AnnouncedPaintballRound = 1;
			    if(PlayerPaintballing[i] != 0)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "Paintball Match will be announced in 15 seconds (For getting more Paintball players).");
			    }
			}
			if(StartingKartRound == 1 && AnnouncedKartRound == 0)
			{
			    AnnouncedKartRound = 1;
			    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "Karting Race will be announced in 15 seconds (For getting more Kart Racers).");
			    }
			}
			if(EndingKartRound == 1)
			{
			    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
			    {
			        DisablePlayerCheckpoint(i);
			        CP[i] = 0;
			    }
			}
			if(FindTime[i] > 0)
			{
			    if(FindTime[i] == FindTimePoints[i]) { FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", FindTimePoints[i] - FindTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					FindTime[i] += 1;
				}
			}
			if(CprTime[i] > 0)
			{
			    if(CprTime[i] == CprTimePoints[i]) { CprTime[i] = 0; CprTimePoints[i] = 0; }
			    else
				{
					CprTime[i] += 1;
				}
			}
			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(TaxiAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(BusCallTime[i] > 0)
			{
			    if(BusAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(BusAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MedicCallTime[i] > 0)
			{
			    if(MedicCallTime[i] == 30) { MedicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", 30 - MedicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MedicCallTime[i] += 1;
				}
			}
			if(MechanicCallTime[i] > 0)
			{
			    if(MechanicCallTime[i] == 30) { MechanicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~RedMarker gone", 2500, 1); }
			    else
				{
				    format(string, sizeof(string), "%d", 30 - MechanicCallTime[i]);
					GameTextForPlayer(i, string, 1500, 6);
					MechanicCallTime[i] += 1;
				}
			}
			if(Robbed[i] == 1)
			{
			    if(RobbedTime[i] <= 0)
			    {
			        RobbedTime[i] = 0;
					Robbed[i] = 0;
			    }
			    else
			    {
			        RobbedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 2)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        GameTextForPlayer(i, "~r~You broke the Cuffs, you are free!", 2500, 3);
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
			if(SpamStrings[i] < 0)
   			{
   				SpamStrings[i] = 0;
   			}
   			else
   			{
   			    SpamStrings[i] -= 1;
		  	}
			if(deathcpr[i] == 1)
			{
				ApplyAnimation(i, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
				SetPlayerHealth(i, 65535);
				RemovePlayerFromVehicle(i);
				SetPlayerColor(i, COLOR_GREY);
				GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~y~Badly ~r~You gonna be die~y~. . .", 35000, 3);
			}
			if(PlayerToPoint(20, i,2015.4500,1017.0900,996.8750))
			{//Four Dragons
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(20, i,2233.9099,1710.7300,1011.2987))
			{//Caligula
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(10, i,2265.7900,1619.5800,1090.4453))
			{//Caligula Roof 1
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(10, i,2265.7800,1675.9301,1090.4453))
			{//Caligula Roof 2
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(20, i,1133.0699,-9.5731,1000.6797))
			{//West Casino place
			    GameTextForPlayer(i, "~r~Closed", 5000, 1);
			    SetPlayerInterior(i, 0);
			    SetPlayerPos(i,1022.599975,-1123.699951,23.799999);
			}
			else if(PlayerToPoint(20, i,292.0274,-36.0291,1001.5156))
			{//Ammunation 1
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,308.2740,-141.2833,999.6016))
			{//Ammunation 2
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,294.3212,-108.7869,1001.5156))
			{//Ammunation 3 (small one's)
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,288.8592,-80.4535,1001.5156))
			{//Ammunation 4 (small one's)
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
			else if(PlayerToPoint(20, i,316.9583,-165.4707,999.6010))
			{//Ammunation 5 (Unprotected)
			    GameTextForPlayer(i, "~r~Jailed for going to ammunation", 5000, 1);
			    SetPlayerInterior(i, 6);
				SetPlayerPos(i,264.6288,77.5742,1001.0391);
				PlayerInfo[i][pJailTime] = 300;
				PlayerInfo[i][pJailed] = 1;
			}
		}
	}
}

public CheckGas()
{
	new string[256];
	for(new i=0;i<MAX_PLAYERS;i++)
	{
    	if(IsPlayerConnected(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
       	    {
	       		new vehicle = GetPlayerVehicleID(i);
	        	if(Gas[vehicle] >= 0)
		   		{
		   		    if(Gas[vehicle] <= 10) { PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0); }
		   		    if(gGas[i] == 0) {
		      		format(string, sizeof(string), "~B~|Fuel|~n~~R~  %d%",Gas[vehicle]);
		      		GameTextForPlayer(i,string,15000,1); }
					if(IsAPlane(vehicle) || IsABoat(vehicle) || IsABike(vehicle)) { Gas[vehicle]++; }
	              	Gas[vehicle]--;
		   		}
	   			else
	           	{
	              	NoFuel[i] = 1;
	              	TogglePlayerControllable(i, 0);
		        	GameTextForPlayer(i,"~R~~n~~n~~n~~n~~n~~n~~n~~n~No fuel in Vehicle~Y~Use /exit to leave the vehicle",1500,3);
				}
			}
    	}
	}
	return 1;
}

public Fillup()
{
	for(new i=0; i<MAX_PLAYERS; i++)
   	{
	   	if(IsPlayerConnected(i))
	   	{
		    new VID;
		    new FillUp;
		    new string[256];
		    VID = GetPlayerVehicleID(i);
		    FillUp = GasMax - Gas[VID];
			if(Refueling[i] == 1)
		    {
				if(ScriptMoney[i] >= FillUp+4)
				{
					Gas[VID] += FillUp;
					FillUp = FillUp * SBizzInfo[3][sbEntranceCost];
				    format(string,sizeof(string),"* คุณเติมน้ำมันเต็มถัง ราคา $%d",FillUp);
				    SendClientMessage(i,COLOR_LIGHTBLUE,string);
					SafeGivePlayerMoney(i, - FillUp);
					SBizzInfo[3][sbTill] += FillUp;
					ExtortionSBiz(3, FillUp);
					Refueling[i] = 0;
					TogglePlayerControllable(i, 1);
				}
			   	else
			   	{
			   	    format(string,sizeof(string),"* Not enough Money to refill, it costs $%d to fill your Vehicle.",FillUp);
				    SendClientMessage(i,COLOR_LIGHTBLUE,string);
			   	}
		 	}
		}
	}
	return 1;
}

public StoppedVehicle()
{
	new Float:x,Float:y,Float:z;
	new Float:distance,value;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInAnyVehicle(i))
			{
				new VID;
				VID = GetPlayerVehicleID(i);
				GetPlayerPos(i, x, y, z);
				distance = floatsqroot(floatpower(floatabs(floatsub(x,SavePlayerPos[i][LastX])),2)+floatpower(floatabs(floatsub(y,SavePlayerPos[i][LastY])),2)+floatpower(floatabs(floatsub(z,SavePlayerPos[i][LastZ])),2));
				value = floatround(distance * 3600);
				if(UpdateSeconds > 1)
				{
					value = floatround(value / UpdateSeconds);
				}
				if(SpeedMode)
				{
	            }
				if(value == 0)
				{
					Gas[VID]++;
				}
				SavePlayerPos[i][LastX] = x;
				SavePlayerPos[i][LastY] = y;
				SavePlayerPos[i][LastZ] = z;
			}
		}
	}
	return 1;
}

public SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerWeapons(playerid);
	    if(PlayerInfo[playerid][pJailed] < 1)
	    {
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				GivePlayerWeapon(playerid, 0, 0); //spray
				if(OnDuty[playerid] == 1 || PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)//Cops & FBI/ATF
				{
				    GivePlayerWeapon(playerid, 0, 0); //spray
					if(PlayerInfo[playerid][pChar] == 285)//SWAT
					{
					    GivePlayerWeapon(playerid, 0, 0);
					}
					else if(PlayerInfo[playerid][pChar] == 287)//Army
					{
					    GivePlayerWeapon(playerid, 0, 0);
					}
				}
				if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)//National Guard
				{
				    GivePlayerWeapon(playerid, 0, 0);
				}
		}
			if(gTeam[playerid] >= 3)
			{
				GivePlayerWeapon(playerid, 0, 0);
			}
			if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			{
			SetPlayerArmour(playerid, 60);
            GivePlayerWeapon(playerid, 24, 100);
			}
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
			SetPlayerArmour(playerid, 50);
			GivePlayerWeapon(playerid, 43, 72);
			GivePlayerWeapon(playerid, 24, 200);
			}
			if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
			{
			GivePlayerWeapon(playerid, 24, 200);
			}
			if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			{
                    GivePlayerWeapon(playerid, 4, 1);
                  	GivePlayerWeapon(playerid, 23, 500);

				}
            if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
			{
			GivePlayerWeapon(playerid, 24, 200);
			SetPlayerArmour(playerid, 60);
			}
			if(gTeam[playerid] >= 3)
			{
				GivePlayerWeapon(playerid, 0, 0);
			}
			if(PlayerInfo[playerid][pDonateRank] > 0)
			{
				if (PlayerInfo[playerid][pGun1] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
					PlayerInfo[playerid][pGun1] = 0; PlayerInfo[playerid][pAmmo1] = 0;
				}
				if (PlayerInfo[playerid][pGun2] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
					PlayerInfo[playerid][pGun2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
				}
				if (PlayerInfo[playerid][pGun3] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
					PlayerInfo[playerid][pGun3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
				}
				if (PlayerInfo[playerid][pGun4] > 0)
				{
					GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
					PlayerInfo[playerid][pGun4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
				}
			}
			if(SpawnChange[playerid] == 1)
			{
				if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
				{
					GivePlayerWeapon(playerid, 24, 147);
					GivePlayerWeapon(playerid, 3, 1);
					SetPlayerArmour(playerid, 100);
					SetTimerEx("healmax100", 500, 0, "d", playerid);
				}
				if(PlayerInfo[playerid][pMember] == 21||PlayerInfo[playerid][pLeader] == 21)
				{
					GivePlayerWeapon(playerid, 24, 147);
					GivePlayerWeapon(playerid, 3, 1);
					SetPlayerArmour(playerid, 100);
					SetTimerEx("healmax100", 500, 0, "d", playerid);
				}
				if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
				{
        			GivePlayerWeapon(playerid, 24, 147);
					GivePlayerWeapon(playerid, 3, 1);
					SetPlayerArmour(playerid, 100);
					SetTimerEx("healmax100", 500, 0, "d", playerid);
        		}
				if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
				{
					GivePlayerWeapon(playerid, 24, 147);
					GivePlayerWeapon(playerid, 3, 1);
					SetPlayerArmour(playerid, 100);
					SetTimerEx("healmax100", 500, 0, "d", playerid);
				}
				if(PlayerInfo[playerid][pMember] == 22||PlayerInfo[playerid][pLeader] == 22)
				{
					GivePlayerWeapon(playerid, 24, 147);
					GivePlayerWeapon(playerid, 4, 1);
					SetPlayerArmour(playerid, 100);
					SetTimerEx("healmax100", 500, 0, "d", playerid);
				}
				if(PlayerInfo[playerid][pMember] == 19||PlayerInfo[playerid][pLeader] == 19)
				{
					GivePlayerWeapon(playerid, 24, 147);
					GivePlayerWeapon(playerid, 4, 1);
					SetPlayerArmour(playerid, 100);
					SetTimerEx("healmax100", 500, 0, "d", playerid);
				}
				if(PlayerInfo[playerid][pMember] == 17||PlayerInfo[playerid][pLeader] == 17)
   				{
                    GivePlayerWeapon(playerid, 4, 1);
                  	GivePlayerWeapon(playerid, 24, 500);

				}
				if(PlayerInfo[playerid][pMember] == 18||PlayerInfo[playerid][pLeader] == 18)
   				{
                    GivePlayerWeapon(playerid, 12, 1);
                  	GivePlayerWeapon(playerid, 24, 500);

				}
				if(PlayerInfo[playerid][pMember] == 7||PlayerInfo[playerid][pLeader] == 7)
				{
					GivePlayerWeapon(playerid, 22, 157);
    				GivePlayerWeapon(playerid, 41, 500);
					GivePlayerWeapon(playerid, 12, 1);
					SetPlayerArmour(playerid, 100);
					SetTimerEx("healmax100", 500, 0, "d", playerid);
				}
				if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pMember] >= 12 && PlayerInfo[playerid][pMember] <= 16 || PlayerInfo[playerid][pLeader] >= 12 && PlayerInfo[playerid][pLeader] <= 16)
				{
					GivePlayerWeapon(playerid, 24, 57);
					SetTimerEx("healmax100", 500, 0, "d", playerid);
				}
				if(PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6)
				{
					GivePlayerWeapon(playerid, 24, 57);
					SetTimerEx("healmax100", 500, 0, "d", playerid);
				}
			}
			else
			{
			    if (PlayerInfo[playerid][pGun1] > 0)
				{
					PlayerInfo[playerid][pGun1] = 0; PlayerInfo[playerid][pAmmo1] = 0;
				}
				if (PlayerInfo[playerid][pGun2] > 0)
				{
					PlayerInfo[playerid][pGun2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
				}
			}
		}
	}
}

public PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",SBizzInfo[targetid][sbMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Locked: %d EntryFee: $%d Till: $%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Products: %d/%d Extortion By: %s", SBizzInfo[targetid][sbProducts],SBizzInfo[targetid][sbMaxProducts],SBizzInfo[targetid][sbExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Locked: %d EntryFee: $%d Till: $%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Products: %d/%d Extortion By: %s", BizzInfo[targetid][bProducts],BizzInfo[targetid][bMaxProducts],BizzInfo[targetid][bExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash =  ScriptMoney[targetid];
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "ชาย"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "หญิง"; }
  		new otext[20];
		if(PlayerInfo[targetid][pOrigin] == 1) { otext = "SF"; }
		new ttext[20];
		if(gTeam[targetid] == 3 || gTeam[targetid] == 4) { ttext = "ประชาชน"; }
		else if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1) { ttext = "เจ้าหน้าที่"; }
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2) { ttext = "เจ้าหน้าที่ FBI"; }
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3) { ttext = "นาวิกโยธิน"; }
		else if(PlayerInfo[targetid][pMember] == 4 || PlayerInfo[targetid][pLeader] == 4) { ttext = "แพทย์"; }
		else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5) { ttext = "มาเฟีย"; }
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6) { ttext = "ยากุซ่า"; }
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8) { ttext = "นักล่าค่าหัว"; }
		else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7) { ttext = "รัฐบาล"; }
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9) { ttext = "นักข่าว"; }
		else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10) { ttext = "แท็กซี่"; }
		else if(PlayerInfo[targetid][pMember] == 11 || PlayerInfo[targetid][pLeader] == 11) { ttext = "กรมการขนส่ง"; }
		else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12) { ttext = "แก๊งค์เขียว"; }
		else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13) { ttext = "แก๊งค์ม่วง"; }
		else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14) { ttext = "แก๊งค์เหลือง"; }
		else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15) { ttext = "แก๊งค์ฟ้า"; }
        else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16) { ttext = "เด๊กแว้น"; }
        else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17) { ttext = "ประตูผี"; }
        else if(PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18) { ttext = "ทีมงานใต็ตึก"; }
        else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19) { ttext = "องกรณ์ลับ"; }
        else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20) { ttext = "Redblood"; }
        else if(PlayerInfo[targetid][pMember] == 21 || PlayerInfo[targetid][pLeader] == 21) { ttext = "ตำรวจ ls"; }
        else if(PlayerInfo[targetid][pMember] == 22 || PlayerInfo[targetid][pLeader] == 22) { ttext = "นาวิกโยธิน"; }
		new dtext[20];
		if(STDPlayer[targetid] == 1) { dtext = "Chlamydia"; }
		else if(STDPlayer[targetid] == 2) { dtext = "Gonorrhea"; }
		else if(STDPlayer[targetid] == 3) { dtext = "Syphilis"; }
		else { dtext = "None"; }
	    new ftext[20];
  		if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5)
		{ ftext = "LCN"; }
		else if(PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)
		{ ftext = "Yakuza"; }
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)
		{ ftext = "Hitman"; }
		else
        { ftext = "None"; }
		new f2text[20];
	    if(PlayerInfo[targetid][pFMember] < 255) { f2text = FamilyInfo[PlayerInfo[targetid][pFMember]][FamilyName]; }
		else { f2text = "None"; }
	    new rtext[64];
		if(PlayerInfo[targetid][pMember] == 1 || PlayerInfo[targetid][pLeader] == 1)//PD Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "นักเรียนนายร้อย"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "นายตำรวจ"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "จ่า"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "ผู้หมวด"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "ผู้กอง"; }
	        else if(PlayerInfo[targetid][pRank] == 6) { rtext = "สารวัตร"; }
			else { rtext = "นักเรียนนายร้อย"; }
		}
		else if(PlayerInfo[targetid][pMember] == 2 || PlayerInfo[targetid][pLeader] == 2)//FBI Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "เจ้าหน้าที่ฝึกงาน FBI"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "เอเย๊น B"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "เอเย๊น A"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "เอเย๊นพิเศษ"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองหัวหน้าเจ้าหน้าที่พิเศษ"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "หัวหน้าเจ้าหน้าที่พิเศษ"; }
			else { rtext = "เจ้าหน้าที่ฝึกงาน FBI"; }
		}
		else if(PlayerInfo[targetid][pMember] == 3 || PlayerInfo[targetid][pLeader] == 3)//NG Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "นายสิบ"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "จ่าสิบเอก"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "ร้อยเอก"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "พันเอก"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "พลเอก"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "จอมพล"; }
		    else if(PlayerInfo[targetid][pRank] == 7) { rtext = "ผู้บังคับบัญชาการสูงสุด"; }
			else { rtext = "นายสิบ"; }
		}
		else if(PlayerInfo[targetid][pMember] == 19 || PlayerInfo[targetid][pLeader] == 19)//องกรณ์ลับ
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "เจ้าหน้าที่ลับ"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "เอเย๊น"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "เอเย๊นพิเศษ"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "หน่วยลับสุดยอด"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองหัวหน้าหน่วยงานลับ"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "หัวหน้าหน่วยงานลับ"; }
			else { rtext = "เจ้าหน้าที่ลับ"; }
		}
        else if(PlayerInfo[targetid][pMember] == 7 || PlayerInfo[targetid][pLeader] == 7)//Hitman Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "บอดี้กาดฝึกหัด"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "บอดี้กาด"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "บอดิ้กาดมือขวา"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "รองหัวหน้าบอดี้กาด"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "หัวหน้าบอดิ้กาด"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "นายกรัฐมนตรี"; }
			else { rtext = "บอดี้กาดฝึกหัด"; }
		}
		else if(PlayerInfo[targetid][pMember] == 8 || PlayerInfo[targetid][pLeader] == 8)//Hitman Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "มือปืนอิสระ"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "นักแม่นปืน"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "เอเย๊น"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "เอเย๊นพิเศษ"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองนักล่าค่าหัว"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "หัวหน้านักล่าค่าหัว"; }
			else { rtext = "มือปืนอิสระ"; }
		}
		else if(PlayerInfo[targetid][pMember] == 9 || PlayerInfo[targetid][pLeader] == 9)//NR Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "ผู้รายงานข่าว"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "นักข่าวท้องถิ่น"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "ผู้ทำข่าวท้องถิ่น"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "นักข่าวระดับภาค"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "ผู้ทำข่าวระดับภาค"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "ผู้ควบคุมสายข่าว"; }
			else { rtext = "ผู้รายงานข่าว"; }
		}
        	else if(PlayerInfo[targetid][pMember] == 12 || PlayerInfo[targetid][pLeader] == 12)//Grove Street Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "เด็กใหม่"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "คนดูแลหัวหน้า"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "นักเลง"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "มือขวา"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองหัวหน้าแก๊งค์"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "หัวหน้าแก๊งค์"; }
			else { rtext = "เด็กใหม่"; }
		}
        	else if(PlayerInfo[targetid][pMember] == 13 || PlayerInfo[targetid][pLeader] == 13)//Ballas Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "เด็กใหม่"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "คนดูแลหัวหน้า"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "นักเลง"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "มือขวา"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองหัวหน้าแก๊งค์"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "หัวหน้าแก๊งค์"; }
			else { rtext = "เด็กใหม่"; }
		}
        	else if(PlayerInfo[targetid][pMember] == 14 || PlayerInfo[targetid][pLeader] == 14)//Vagos Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "เด็กใหม่"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "คนดูแลหัวหน้า"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "นักเลง"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "มือขวา"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองหัวหน้าแก๊งค์"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "หัวหน้าแก๊งค์"; }
			else { rtext = "เด็กใหม่"; }
		}
        	else if(PlayerInfo[targetid][pMember] == 15 || PlayerInfo[targetid][pLeader] == 15)//Aztecas Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "เด็กใหม่"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "คนดูแลหัวหน้า"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "นักเลง"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "มือขวา"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองหัวหน้าแก๊งค์"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "หัวหน้าแก๊งค์"; }
			else { rtext = "เด็กใหม่"; }
		}
        	else if(PlayerInfo[targetid][pMember] == 16 || PlayerInfo[targetid][pLeader] == 16)//Vance Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "สมาชิกแว็น"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "แว็นบอยปี1"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "แว้นบอยปี2"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "แว็นบอยปี3"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองหัวหน้าแว็นบอย"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "หัวหน้าแว็นบอย"; }
			else { rtext = "สมาชิกแว็น"; }
		}
		    else if(PlayerInfo[targetid][pMember] == 17 || PlayerInfo[targetid][pLeader] == 17)//แก๊งประตูผี Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "ผีเฝ้าประตู"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "แก๊งประตูผีขั้น 1"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "แก๊งประตูผีขั้นี2"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "แก๊งประตูผีขั้นี3"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองประทานแก๊งปรตูผี"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "ประทานแก๊งประตูผี"; }
			else { rtext = "ผีเฝ้าประตู"; }
		}
	    	else if(PlayerInfo[targetid][pMember] == 18 || PlayerInfo[targetid][pLeader] == 18)//ทีมงานใต้ตึก Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "ทีมงานใหม่"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "คนเฝ้าตึก"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "นักเลงใต้ตึก"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "นักเลงใต้ตึกขั้นสูง"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองทีมงานใต้ตึก"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "เจ้าของตึก"; }
			else { rtext = "ทีมงานใหม่"; }
		}
        	else if(PlayerInfo[targetid][pMember] == 10 || PlayerInfo[targetid][pLeader] == 10)//Taxi Company Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "มือใหม่หัดขับ"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "มือสมัครเล่น"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "มืออาชีพ"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "มือโปร"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "ผู้ตรวจการบริษัทแท็กซี่"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "เจ้าของบริษัทแท็กซี่"; }
			else { rtext = "มือใหม่หัดขับ"; }
		}
		    else if(PlayerInfo[targetid][pMember] == 20 || PlayerInfo[targetid][pLeader] == 20)//Red blood Company Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "สมาชิกหน้าใหม่"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "สมาชิก Redblood ปี1 "; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "สมาชิก Redblood ปี2"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "สมาชิก Redblood ปี3"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "มือขวา"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "เจ้าพ่อ Red blood"; }
			else { rtext = "สมาชิกหน้าใหม"; }
		}
        	else if(PlayerInfo[targetid][pMember] == 5 || PlayerInfo[targetid][pLeader] == 5 || PlayerInfo[targetid][pMember] == 6 || PlayerInfo[targetid][pLeader] == 6)//Yakuza And LCN Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "คนเฝ้าประตู"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "สมาชิกใหม่"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "นักเลง"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "มือขวา"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองเจ้าพ่อ"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "เจ้าพ่อ"; }
			else { rtext = "คนเฝ้าประตู"; }
		}
        	else if(IsAnInstructor(targetid))//Driving/Flying School Ranks
		{
		    if(PlayerInfo[targetid][pRank] == 1) { rtext = "คนฝึกหัด"; }
			else if(PlayerInfo[targetid][pRank] == 2) { rtext = "ผู้ทำใบขับขี่"; }
			else if(PlayerInfo[targetid][pRank] == 3) { rtext = "ผู้ฝึกสอน"; }
			else if(PlayerInfo[targetid][pRank] == 4) { rtext = "ผู้จัดการ"; }
			else if(PlayerInfo[targetid][pRank] == 5) { rtext = "รองหัวหน้านายทะเบียน"; }
		    else if(PlayerInfo[targetid][pRank] == 6) { rtext = "หัวหน้านายทะเบียน"; }
			else { rtext = "คนฝึกหัด"; }
		}
        	else
		{
		    rtext = "None";
		}
        new jtext[20];
        if(PlayerInfo[targetid][pJob] == 1) { jtext = "นักสืบ"; }
        else if(PlayerInfo[targetid][pJob] == 2) { jtext = "ทนายความ"; }
        else if(PlayerInfo[targetid][pJob] == 3) { jtext = "โสเภณี"; }
        else if(PlayerInfo[targetid][pJob] == 4) { jtext = "คนขายยา"; }
        else if(PlayerInfo[targetid][pJob] == 5) { jtext = "คนขโมยรถ"; }
        else if(PlayerInfo[targetid][pJob] == 6) { jtext = "นักข่าว"; }
        else if(PlayerInfo[targetid][pJob] == 7) { jtext = "ช่างซ่อมรถ"; }
        else if(PlayerInfo[targetid][pJob] == 8) { jtext = "บอดี้กาด"; }
        else if(PlayerInfo[targetid][pJob] == 9) { jtext = "คนขายอาวุธ"; }
        else if(PlayerInfo[targetid][pJob] == 10) { jtext = "พนักงานประกันภัย"; }
		else if(PlayerInfo[targetid][pJob] == 12) { jtext = "นักมวย"; }
        else if(PlayerInfo[targetid][pJob] == 14) { jtext = "คนขับรถบัส"; }
        else if(PlayerInfo[targetid][pJob] == 15) { jtext = "เด็กส่งหนังสือพิมพ์"; }
        else if(PlayerInfo[targetid][pJob] == 16) { jtext = "คนขับรถบรรทุก"; }
        else { jtext = "None"; }
		new drank[20];
		if(PlayerInfo[targetid][pDonateRank] == 1) { drank = "ผู้บริจาค"; }
		else if(PlayerInfo[targetid][pDonateRank] >= 2) { drank = "ผู้มีจิตศรัทธา"; }
		else { drank = "None"; }
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new age = PlayerInfo[targetid][pAge];
		new ptime = PlayerInfo[targetid][pConnectTime];
		new lotto = PlayerInfo[targetid][pLottoNr];
		new deaths = PlayerInfo[targetid][pDeaths];
		new fishes = PlayerInfo[targetid][pFishes];
		new bigfish = PlayerInfo[targetid][pBiggestFish];
		new crimes = PlayerInfo[targetid][pCrimes];
		new arrests = PlayerInfo[targetid][pArrested];
		new warrests = PlayerInfo[targetid][pWantedDeaths];
		new drugs = PlayerInfo[targetid][pDrugs];
		new mats = PlayerInfo[targetid][pMats];
		new wanted = WantedLevel[targetid];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new kills = PlayerInfo[targetid][pKills];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new account = PlayerInfo[targetid][pAccount];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new housekey = PlayerInfo[targetid][pPhousekey];
		new bizkey = PlayerInfo[targetid][pPbiskey];
		new intir = PlayerInfo[targetid][pInt];
		new local = PlayerInfo[targetid][pLocal];
		new Float:shealth = PlayerInfo[targetid][pSHealth];
		new Float:health;
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		new coordsstring[256];
		SendClientMessage(playerid, 0xF60F89AA,"___________________________________________________________________________________________________");
		format(coordsstring, sizeof(coordsstring),"*** %s ***",name);
		SendClientMessage(playerid, 0x79F6D4AA,coordsstring);
		format(coordsstring, sizeof(coordsstring), " เลเวล:[%d] เพศ:[%s] อายุ:[%d] เมืองที่เกิด:[%s] Health:[%.1f] เงิน:[$%d] เงินในบัญชี:[$%d] เบอร์โทรศัพท์:[%d]", level,atext,age,otext,shealth+50, cash, account, pnumber);
		SendClientMessage(playerid, 0xF60F89AA,coordsstring);
		format(coordsstring, sizeof(coordsstring), " ระดับการบริจาค:[%s] แต่งงานกับ:[%s] เวลาที่เล่น:[%d] เบอร์หวย:[%d] อาชีพเสริม:[%s]", drank,married,ptime,lotto,jtext);
		SendClientMessage(playerid, 0x79F6D4AA,coordsstring);
		format(coordsstring, sizeof(coordsstring), " ปลาที่จับได้:[%d] ปลาตัวใหญ่ที่สุด:[%d] จำนวนอาชญากรรม:[%d] โดนจับ:[%d] โดนจับตาย:[%d]", fishes,bigfish,crimes,arrests,warrests );
		SendClientMessage(playerid, 0xF6F6ABAA,coordsstring);
		format(coordsstring, sizeof(coordsstring), " ฆ่า:[%d] ตาย:[%d] EXP[%d/%d] ระดับความต้องการตัว:[%d] ครอบครัว:[%s]",kills,deaths,exp,expamount,wanted,f2text);
		SendClientMessage(playerid, 0x79F6D4AA,coordsstring);
		format(coordsstring, sizeof(coordsstring), " ยา:[%d] ดินปืน:[%d] ทีม:[%s] โรค:[%s] องค์กร:[%s] ระดับ:[%s]",drugs,mats,ttext,dtext,ftext,rtext);
		SendClientMessage(playerid, 0xF6F6ABAA,coordsstring);
		if (PlayerInfo[playerid][pAdmin] >= 1)
		{
			format(coordsstring, sizeof(coordsstring), " กุญแจบ้าน:[%d] กิจการ:[%d] กุญแจรถ:[%d] Interior:[%d] Local:[%d]", housekey,bizkey,HireCar[targetid],intir,local);
			SendClientMessage(playerid, 0x79F6D4AA,coordsstring);
		}
		SendClientMessage(playerid, 0xF60F89AA,"_____________________________________________________________________________________________________");
	}
}
//---------------------------------------------------------

public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    SetPlayerColor(playerid,COLOR_WHITE); // white
	    if(PlayerInfo[playerid][pMember] == 0) { SetPlayerColor(playerid, 0xF6F6ABAA); } //civiland
	    if(PlayerInfo[playerid][pMember] == 1) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Cop
      	if(PlayerInfo[playerid][pMember] == 2) { SetPlayerColor(playerid, 0xF6F6ABAA); } //FBI
      	if(PlayerInfo[playerid][pLeader] == 2) { SetPlayerColor(playerid, 0xF6F6ABAA); } //FBI
      	if(PlayerInfo[playerid][pMember] == 3) { SetPlayerColor(playerid, 0xF6F6ABAA); } //FBI
      	if(PlayerInfo[playerid][pLeader] == 3) { SetPlayerColor(playerid, 0xF6F6ABAA); } //FBI
      	if(PlayerInfo[playerid][pLeader] == 1) { SetPlayerColor(playerid, 0xF6F6ABAA); } //COP
      	if(PlayerInfo[playerid][pMember] == 4) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Medic
      	if(PlayerInfo[playerid][pMember] == 5) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Rifa
      	if(PlayerInfo[playerid][pLeader] == 4) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Medic
      	if(PlayerInfo[playerid][pLeader] == 5) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Rifa
      	if(PlayerInfo[playerid][pMember] == 6) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Yakuza
      	if(PlayerInfo[playerid][pLeader] == 6) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Yakuza
      	if(PlayerInfo[playerid][pLeader] == 7) { SetPlayerColor(playerid, 0xF6F6ABAA); } //president
      	if(PlayerInfo[playerid][pMember] == 8 ) { SetPlayerColor(playerid, 0xF6F6ABAA); } //hitman
      	if(PlayerInfo[playerid][pMember] == 9) { SetPlayerColor(playerid, 0xF6F6ABAA); } //News
      	if(PlayerInfo[playerid][pLeader] == 8 ) { SetPlayerColor(playerid, 0xF6F6ABAA); } //hitman
      	if(PlayerInfo[playerid][pLeader] == 9) { SetPlayerColor(playerid, 0xF6F6ABAA); } //News
      	if(PlayerInfo[playerid][pMember] == 10) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Taxi
      	if(PlayerInfo[playerid][pMember] == 11) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Lic
      	if(PlayerInfo[playerid][pLeader] == 10) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Taxi
      	if(PlayerInfo[playerid][pLeader] == 11) { SetPlayerColor(playerid, 0xF6F6ABAA); } //Lic
      	if(PlayerInfo[playerid][pLeader] == 12) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pMember] == 12) { SetPlayerColor(playerid, 0xF6F6ABAA); }
       	if(PlayerInfo[playerid][pLeader] == 13) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pMember] == 13) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pLeader] == 14) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pMember] == 14) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pLeader] == 15) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pMember] == 15) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pLeader] == 16) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pMember] == 16) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pLeader] == 17) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pMember] == 17) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pLeader] == 18) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pMember] == 18) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pLeader] == 19) { SetPlayerColor(playerid, 0x515251AA); }
        if(PlayerInfo[playerid][pMember] == 19) { SetPlayerColor(playerid, 0x515251AA); }
        if(PlayerInfo[playerid][pLeader] == 20) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pMember] == 20) { SetPlayerColor(playerid, 0xF6F6ABAA); }
        if(PlayerInfo[playerid][pLeader] == 21) { SetPlayerColor(playerid, 0x00F6F6AA); }
        if(PlayerInfo[playerid][pMember] == 21) { SetPlayerColor(playerid, 0x00F6F6AA); }
        if(PlayerInfo[playerid][pLeader] == 22) { SetPlayerColor(playerid, 0x00F6F6AA); }
        if(PlayerInfo[playerid][pMember] == 22) { SetPlayerColor(playerid, 0x00F6F6AA); }
	}
}

//---------------------------------------------------------

public GameModeInitExitFunc()
{
	new string[128];
	format(string, sizeof(string), "Restart Server");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
			GameTextForPlayer(i, string, 4000, 5);
			SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);
			SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
			OnPlayerUpdate(i);
			gPlayerLogged[i] = 0;
		}
	}
	SetTimer("GameModeExitFunc", 4000, 0);
	return 1;
}

public GameModeExitFunc()
{
	//KillTimer(animcprhacktimer);
	KillTimer(weaponhacktimer);
	KillTimer(moneyhacktimer);
	KillTimer(synctimer);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(accountstimer);
	KillTimer(checkgastimer);
	KillTimer(idletimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(turftimer);
	GameModeExit();
}

//------------------------------------------------------------------------------------------------------
public SaveMission(playerid,name[])
{
	if(IsPlayerConnected(playerid))
	{
	    new coordsstring[256];
	    new missionname[64];
		new var[128];
		new makername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, makername, sizeof(makername));
		new rand = random(999);
		if(rand == 0) { rand = 1; }
		new number = rand;
		if(MissionInfo[mToggle] == 0 || MissionInfo[mToggle] == 1) { }
		else { MissionInfo[mToggle] = 1; }
		format(missionname, sizeof(missionname), "%s.mis",name);
		new File: hFile = fopen(missionname, io_write);
		format(var, 128, "Title=%s\n", MissionInfo[mTitle]);fwrite(hFile, var);
		format(var, 128, "Maker=%s\n", makername);fwrite(hFile, var);
		format(var, 128, "Text1=%s\n", MissionInfo[mText1]);fwrite(hFile, var);
		format(var, 128, "Text2=%s\n", MissionInfo[mText2]);fwrite(hFile, var);
		format(var, 128, "Text3=%s\n", MissionInfo[mText3]);fwrite(hFile, var);
		format(var, 128, "Text4=%s\n", MissionInfo[mText4]);fwrite(hFile, var);
		format(var, 128, "Text5=%s\n", MissionInfo[mText5]);fwrite(hFile, var);
		format(var, 128, "Text6=%s\n", MissionInfo[mText6]);fwrite(hFile, var);
		format(var, 128, "Text7=%s\n", MissionInfo[mText7]);fwrite(hFile, var);
		format(var, 128, "Text8=%s\n", MissionInfo[mText8]);fwrite(hFile, var);
		format(var, 128, "Text9=%s\n", MissionInfo[mText9]);fwrite(hFile, var);
		format(var, 128, "Text10=%s\n", MissionInfo[mText10]);fwrite(hFile, var);
		format(var, 128, "Text11=%s\n", MissionInfo[mText11]);fwrite(hFile, var);
		format(var, 128, "Text12=%s\n", MissionInfo[mText12]);fwrite(hFile, var);
		format(var, 128, "Text13=%s\n", MissionInfo[mText13]);fwrite(hFile, var);
		format(var, 128, "Text14=%s\n", MissionInfo[mText14]);fwrite(hFile, var);
		format(var, 128, "Text15=%s\n", MissionInfo[mText15]);fwrite(hFile, var);
		format(var, 128, "Text16=%s\n", MissionInfo[mText16]);fwrite(hFile, var);
		format(var, 128, "Text17=%s\n", MissionInfo[mText17]);fwrite(hFile, var);
		format(var, 128, "Text18=%s\n", MissionInfo[mText18]);fwrite(hFile, var);
		format(var, 128, "GText1=%s\n", MissionInfo[mGText1]);fwrite(hFile, var);
		format(var, 128, "GText2=%s\n", MissionInfo[mGText2]);fwrite(hFile, var);
		format(var, 128, "GText3=%s\n", MissionInfo[mGText3]);fwrite(hFile, var);
		format(var, 128, "GText4=%s\n", MissionInfo[mGText4]);fwrite(hFile, var);
		format(var, 128, "GText5=%s\n", MissionInfo[mGText5]);fwrite(hFile, var);
		format(var, 128, "GText6=%s\n", MissionInfo[mGText6]);fwrite(hFile, var);
		format(var, 128, "CP1X=%f\n", MissionInfo[mCP1][0]);fwrite(hFile, var);
		format(var, 128, "CP1Y=%f\n", MissionInfo[mCP1][1]);fwrite(hFile, var);
		format(var, 128, "CP1Z=%f\n", MissionInfo[mCP1][2]);fwrite(hFile, var);
		format(var, 128, "CP2X=%f\n", MissionInfo[mCP2][0]);fwrite(hFile, var);
		format(var, 128, "CP2Y=%f\n", MissionInfo[mCP2][1]);fwrite(hFile, var);
		format(var, 128, "CP2Z=%f\n", MissionInfo[mCP2][2]);fwrite(hFile, var);
		format(var, 128, "CP3X=%f\n", MissionInfo[mCP3][0]);fwrite(hFile, var);
		format(var, 128, "CP3Y=%f\n", MissionInfo[mCP3][1]);fwrite(hFile, var);
		format(var, 128, "CP3Z=%f\n", MissionInfo[mCP3][2]);fwrite(hFile, var);
		format(var, 128, "CP4X=%f\n", MissionInfo[mCP4][0]);fwrite(hFile, var);
		format(var, 128, "CP4Y=%f\n", MissionInfo[mCP4][1]);fwrite(hFile, var);
		format(var, 128, "CP4Z=%f\n", MissionInfo[mCP4][2]);fwrite(hFile, var);
		format(var, 128, "CP5X=%f\n", MissionInfo[mCP5][0]);fwrite(hFile, var);
		format(var, 128, "CP5Y=%f\n", MissionInfo[mCP5][1]);fwrite(hFile, var);
		format(var, 128, "CP5Z=%f\n", MissionInfo[mCP5][2]);fwrite(hFile, var);
		format(var, 128, "CP6X=%f\n", MissionInfo[mCP6][0]);fwrite(hFile, var);
		format(var, 128, "CP6Y=%f\n", MissionInfo[mCP6][1]);fwrite(hFile, var);
		format(var, 128, "CP6Z=%f\n", MissionInfo[mCP6][2]);fwrite(hFile, var);
		format(var, 128, "Number=%d\n", number);fwrite(hFile, var);
		format(var, 128, "Reward=%d\n", MissionInfo[mReward]);fwrite(hFile, var);
		format(var, 128, "Toggle=%d\n", MissionInfo[mToggle]);fwrite(hFile, var);
		fclose(hFile);
		format(coordsstring, sizeof(coordsstring), "%s Mission Saved.",name);
		SendClientMessage(playerid, COLOR_GREEN,coordsstring);
	}
	return 1;
}

public LoadMission(playerid,name[])
{
	if(IsPlayerConnected(playerid))
	{
		new strFromFile2[128];
		new missionname[64];
		format(missionname, sizeof(missionname), "%s.mis",name);
		new File: file = fopen(missionname, io_read);
		if (file)
		{
		    new key[ 256 ] , val[ 256 ];
		    new Data[ 256 ];
		    while ( fread( file , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Title" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kTitle], val, 0, strlen(val), 255); }
				if( strcmp( key , "Maker" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kMaker], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText1], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText2], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText3], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText4], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text5" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText5], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text6" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText6], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text7" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText7], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text8" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText8], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text9" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText9], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text10" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText10], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text11" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText11], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text12" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText12], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text13" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText13], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text14" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText14], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text15" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText15], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text16" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText16], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text17" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText17], val, 0, strlen(val), 255); }
				if( strcmp( key , "Text18" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kText18], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText1" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText1], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText2" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText2], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText3" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText3], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText4" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText4], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText5" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText5], val, 0, strlen(val), 255); }
				if( strcmp( key , "GText6" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayMission[kGText6], val, 0, strlen(val), 255); }
				if( strcmp( key , "CP1X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP1][0] = floatstr( val ); }
				if( strcmp( key , "CP1Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP1][1] = floatstr( val ); }
				if( strcmp( key , "CP1Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP1][2] = floatstr( val ); }
				if( strcmp( key , "CP2X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP2][0] = floatstr( val ); }
				if( strcmp( key , "CP2Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP2][1] = floatstr( val ); }
				if( strcmp( key , "CP2Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP2][2] = floatstr( val ); }
				if( strcmp( key , "CP3X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP3][0] = floatstr( val ); }
				if( strcmp( key , "CP3Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP3][1] = floatstr( val ); }
				if( strcmp( key , "CP3Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP3][2] = floatstr( val ); }
				if( strcmp( key , "CP4X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP4][0] = floatstr( val ); }
				if( strcmp( key , "CP4Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP4][1] = floatstr( val ); }
				if( strcmp( key , "CP4Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP4][2] = floatstr( val ); }
				if( strcmp( key , "CP5X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP5][0] = floatstr( val ); }
				if( strcmp( key , "CP5Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP5][1] = floatstr( val ); }
				if( strcmp( key , "CP5Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP5][2] = floatstr( val ); }
				if( strcmp( key , "CP6X" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP6][0] = floatstr( val ); }
				if( strcmp( key , "CP6Y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP6][1] = floatstr( val ); }
				if( strcmp( key , "CP6Z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kCP6][2] = floatstr( val ); }
				if( strcmp( key , "Number" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kNumber] = strval( val ); }
				if( strcmp( key , "Reward" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kReward] = strval( val ); }
				if( strcmp( key , "Toggle" , true ) == 0 ) { val = ini_GetValue( Data ); PlayMission[kToggle] = strval( val ); }
			}
			fclose(file);
			format(strFromFile2, sizeof(strFromFile2), "%s Mission Loaded.",name);
			SendClientMessage(playerid, COLOR_GREEN,strFromFile2);
			format(strFromFile2, sizeof(strFromFile2), "Mission Available: %s, By : %s | Reward: $%d",PlayMission[kTitle],PlayMission[kMaker],PlayMission[kReward]);
			SendClientMessageToAll(COLOR_GREEN, strFromFile2);
			MissionPlayable = PlayMission[kNumber];
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREEN,"Mission File not found.");
		}
	}
	return 1;
}

public LoadBoxer()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("boxer.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Titel[TitelWins] = strval(arrCoords[0]);
		strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
		Titel[TitelLoses] = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}

public SaveBoxer()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
	new File: file2 = fopen("boxer.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadStuff()
{
	new arrCoords[4][64];
	new strFromFile2[256];
	new File: file = fopen("stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		Security = strval(arrCoords[3]);
		fclose(file);
		if(Security == 0 || Security == 1)
		{
		}
		else
		{
		    GameModeExit();
		}
	}
	else
	{
	    GameModeExit();
	}
	return 1;
}

public SaveStuff()
{
	new coordsstring[256];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d,%d", Jackpot,Tax,TaxValue,Security);
	new File: file2 = fopen("stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadIRC()
{
	new arrCoords[5][64];
	new strFromFile2[256];
	new File: file = fopen("channels.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(IRCInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(IRCInfo[idx][iAdmin], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(IRCInfo[idx][iMOTD], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(IRCInfo[idx][iPassword], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			IRCInfo[idx][iNeedPass] = strval(arrCoords[3]);
			IRCInfo[idx][iLock] = strval(arrCoords[4]);
			printf("IRC:%d Admin:%s MOTD: %s Password: %s NeedPass: %d Lock: %d",idx,IRCInfo[idx][iAdmin],IRCInfo[idx][iMOTD],IRCInfo[idx][iPassword],IRCInfo[idx][iNeedPass],IRCInfo[idx][iLock]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveIRC()
{
	new idx;
	new File: file2;
	while (idx < sizeof(IRCInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%s|%d|%d\n",
		IRCInfo[idx][iAdmin],
		IRCInfo[idx][iMOTD],
		IRCInfo[idx][iPassword],
		IRCInfo[idx][iNeedPass],
		IRCInfo[idx][iLock]);
		if(idx == 0)
		{
			file2 = fopen("channels.cfg", io_write);
		}
		else
		{
			file2 = fopen("channels.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadTurfs()
{
	new arrCoords[6][64];
	new strFromFile2[256];
	new File: file = fopen("turfs.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(TurfInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(TurfInfo[idx][zOwner], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(TurfInfo[idx][zColor], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			TurfInfo[idx][zMinX] = floatstr(arrCoords[2]);
			TurfInfo[idx][zMinY] = floatstr(arrCoords[3]);
			TurfInfo[idx][zMaxX] = floatstr(arrCoords[4]);
			TurfInfo[idx][zMaxY] = floatstr(arrCoords[5]);
			//printf("Turf:%d Name: %s Owner:%s MinX:%f MinY:%f MinZ:%f MaxX:%f MaxY:%f MaxZ:%f\n",
			//idx,TurfInfo[idx][zName],TurfInfo[idx][zOwner],TurfInfo[idx][zMinX],TurfInfo[idx][zMinY],TurfInfo[idx][zMinZ],TurfInfo[idx][zMaxX],TurfInfo[idx][zMaxY],TurfInfo[idx][zMaxZ]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveTurfs()
{
	new idx;
	new File: file2;
	while (idx < sizeof(TurfInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%f|%f|%f|%f|%f|%f\n",
		TurfInfo[idx][zOwner],
		TurfInfo[idx][zColor],
		TurfInfo[idx][zMinX],
		TurfInfo[idx][zMinY],
		TurfInfo[idx][zMaxX],
		TurfInfo[idx][zMaxY]);
		if(idx == 0)
		{
			file2 = fopen("turfs.cfg", io_write);
		}
		else
		{
			file2 = fopen("turfs.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadCK()
{
	new arrCoords[3][64];
	new strFromFile2[256];
	new File: file = fopen("ck.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(CKInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(CKInfo[idx][cSendername], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(CKInfo[idx][cGiveplayer], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			CKInfo[idx][cUsed] = strval(arrCoords[2]);
			printf("CK:%d Taken: %d Sendername:%s Giveplayer: %s",
			idx,CKInfo[idx][cUsed],CKInfo[idx][cSendername],CKInfo[idx][cGiveplayer]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveCK()
{
	new idx;
	new File: file2;
	while (idx < sizeof(CKInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%d\n",
		CKInfo[idx][cSendername],
		CKInfo[idx][cGiveplayer],
		CKInfo[idx][cUsed]);
		if(idx == 0)
		{
			file2 = fopen("ck.cfg", io_write);
		}
		else
		{
			file2 = fopen("ck.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadFamilies()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("families.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(FamilyInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			FamilyInfo[idx][FamilyTaken] = strval(arrCoords[0]);
			strmid(FamilyInfo[idx][FamilyName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(FamilyInfo[idx][FamilyMOTD], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(FamilyInfo[idx][FamilyColor], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(FamilyInfo[idx][FamilyLeader], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			FamilyInfo[idx][FamilyMembers] = strval(arrCoords[5]);
			FamilyInfo[idx][FamilySpawn][0] = floatstr(arrCoords[6]);
			FamilyInfo[idx][FamilySpawn][1] = floatstr(arrCoords[7]);
			FamilyInfo[idx][FamilySpawn][2] = floatstr(arrCoords[8]);
			FamilyInfo[idx][FamilySpawn][3] = floatstr(arrCoords[9]);
			FamilyInfo[idx][FamilyInterior] = strval(arrCoords[10]);
			printf("Family:%d Taken: %d Name:%s MOTD:%s Leader:%s Members:%d SpawnX:%f SpawnY:%f SpawnZ:%f Int:%d",
			idx,FamilyInfo[idx][FamilyTaken],FamilyInfo[idx][FamilyName],FamilyInfo[idx][FamilyMOTD],FamilyInfo[idx][FamilyLeader],FamilyInfo[idx][FamilyMembers],FamilyInfo[idx][FamilySpawn][0],FamilyInfo[idx][FamilySpawn][1],FamilyInfo[idx][FamilySpawn][2],FamilyInfo[idx][FamilyInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveFamilies()
{
	new idx;
	new File: file2;
	while (idx < sizeof(FamilyInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%s|%d|%f|%f|%f|%f|%d\n",
		FamilyInfo[idx][FamilyTaken],
		FamilyInfo[idx][FamilyName],
		FamilyInfo[idx][FamilyMOTD],
		FamilyInfo[idx][FamilyColor],
		FamilyInfo[idx][FamilyLeader],
		FamilyInfo[idx][FamilyMembers],
		FamilyInfo[idx][FamilySpawn][0],
		FamilyInfo[idx][FamilySpawn][1],
		FamilyInfo[idx][FamilySpawn][2],
		FamilyInfo[idx][FamilySpawn][3],
		FamilyInfo[idx][FamilyInterior]);
		if(idx == 0)
		{
			file2 = fopen("families.cfg", io_write);
		}
		else
		{
			file2 = fopen("families.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadPapers()
{
	new arrCoords[11][64];
	new strFromFile2[256];
	new File: file = fopen("papers.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(PaperInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			PaperInfo[idx][PaperUsed] = strval(arrCoords[0]);
			strmid(PaperInfo[idx][PaperMaker], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(PaperInfo[idx][PaperTitle], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(PaperInfo[idx][PaperText1], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			strmid(PaperInfo[idx][PaperText2], arrCoords[4], 0, strlen(arrCoords[4]), 255);
			strmid(PaperInfo[idx][PaperText3], arrCoords[5], 0, strlen(arrCoords[5]), 255);
			strmid(PaperInfo[idx][PaperText4], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			strmid(PaperInfo[idx][PaperText5], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(PaperInfo[idx][PaperText6], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			strmid(PaperInfo[idx][PaperText7], arrCoords[9], 0, strlen(arrCoords[9]), 255);
			PaperInfo[idx][SafeSaving] = strval(arrCoords[10]);
			printf("Paper:%d Used: %d Maker:%s Title: %s Text1: %s Text2: %s Text3: %s Text4: %s Text5: %s Text6: %s Text7: %s",
			idx,PaperInfo[idx][PaperUsed],PaperInfo[idx][PaperMaker],PaperInfo[idx][PaperTitle],PaperInfo[idx][PaperText1],PaperInfo[idx][PaperText2],PaperInfo[idx][PaperText3],PaperInfo[idx][PaperText4],PaperInfo[idx][PaperText5],PaperInfo[idx][PaperText6],PaperInfo[idx][PaperText7]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SavePapers()
{
	new idx;
	new File: file2;
	while (idx < sizeof(IRCInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%s|%s|%s|%s|%s|%s|%d\n",
		PaperInfo[idx][PaperUsed],
		PaperInfo[idx][PaperMaker],
		PaperInfo[idx][PaperTitle],
		PaperInfo[idx][PaperText1],
		PaperInfo[idx][PaperText2],
		PaperInfo[idx][PaperText3],
		PaperInfo[idx][PaperText4],
		PaperInfo[idx][PaperText5],
		PaperInfo[idx][PaperText6],
		PaperInfo[idx][PaperText7],
		PaperInfo[idx][SafeSaving]);
		if(idx == 0)
		{
			file2 = fopen("papers.cfg", io_write);
		}
		else
		{
			file2 = fopen("papers.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadCar()
{
	new arrCoords[13][64];
	new strFromFile2[256];
	new File: file = fopen("cars.cfg", io_read);
	if (file)
	{
		new idx = 0;
		while (idx < sizeof(CarInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			CarInfo[idx][cModel] = strval(arrCoords[0]);
			CarInfo[idx][cLocationx] = floatstr(arrCoords[1]);
			CarInfo[idx][cLocationy] = floatstr(arrCoords[2]);
			CarInfo[idx][cLocationz] = floatstr(arrCoords[3]);
			CarInfo[idx][cAngle] = floatstr(arrCoords[4]);
			CarInfo[idx][cColorOne] = strval(arrCoords[5]);
			CarInfo[idx][cColorTwo] = strval(arrCoords[6]);
			strmid(CarInfo[idx][cOwner], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(CarInfo[idx][cDescription], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			CarInfo[idx][cValue] = strval(arrCoords[9]);
			CarInfo[idx][cLicense] = strval(arrCoords[10]);
			CarInfo[idx][cOwned] = strval(arrCoords[11]);
			CarInfo[idx][cLock] = strval(arrCoords[12]);
			printf("CarInfo: %d Owner:%s LicensePlate %s",idx,CarInfo[idx][cOwner],CarInfo[idx][cLicense]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveCarCoords()
{
	new idx;
	new File: file2;
	while (idx < sizeof(CarInfo))
	{
	    new coordsstring[256];
	    format(coordsstring, sizeof(coordsstring), "%d|%f|%f|%f|%f|%d|%d\n",
		CarInfo[idx][cModel],
		CarInfo[idx][cLocationx],
		CarInfo[idx][cLocationy],
		CarInfo[idx][cLocationz],
		CarInfo[idx][cAngle],
		CarInfo[idx][cColorOne],
		CarInfo[idx][cColorTwo]);
		if(idx == 0)
		{
			file2 = fopen("cars.cfg", io_write);
		}
		else
		{
			file2 = fopen("cars.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadProperty()
{
	new arrCoords[29][64];
	new strFromFile2[256];
	new File: file = fopen("property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
			HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
			HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
			HouseInfo[idx][hArmourx] = strval(arrCoords[9]);
			HouseInfo[idx][hArmoury] = strval(arrCoords[10]);
			HouseInfo[idx][hArmourz] = strval(arrCoords[11]);
			//printf("HouseInfo hEntrancez %f",HouseInfo[idx][hEntrancez]);
			strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
			strmid(HouseInfo[idx][hDiscription], arrCoords[13], 0, strlen(arrCoords[13]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[14]);
			HouseInfo[idx][hHel] = strval(arrCoords[15]);
			HouseInfo[idx][hArm] = strval(arrCoords[16]);
			HouseInfo[idx][hInt] = strval(arrCoords[17]);
			HouseInfo[idx][hLock] = strval(arrCoords[18]);
			HouseInfo[idx][hOwned] = strval(arrCoords[19]);
			HouseInfo[idx][hRooms] = strval(arrCoords[20]);
			HouseInfo[idx][hRent] = strval(arrCoords[21]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[22]);
			HouseInfo[idx][hTakings] = strval(arrCoords[23]);
			HouseInfo[idx][hVec] = strval(arrCoords[24]);
  	        if(HouseInfo[idx][hVec] == 457)
			{
				HouseInfo[idx][hVec] = 411;
			}
			HouseInfo[idx][hVcol1] = strval(arrCoords[25]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[26]);
			HouseInfo[idx][hDate] = strval(arrCoords[27]);
			HouseInfo[idx][hLevel] = strval(arrCoords[28]);
			printf("HouseInfo:%d Owner:%s hTakings %d hVec %d",idx,HouseInfo[idx][hOwner],HouseInfo[idx][hTakings],HouseInfo[idx][hVec]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public LoadBizz()
{
	new arrCoords[19][64];
	new strFromFile2[256];
	new File: file = fopen("bizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[7]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[8]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[10]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[11]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[12]);
			BizzInfo[idx][bTill] = strval(arrCoords[13]);
			BizzInfo[idx][bLocked] = strval(arrCoords[14]);
			BizzInfo[idx][bInterior] = strval(arrCoords[15]);
			BizzInfo[idx][bProducts] = strval(arrCoords[16]);
			BizzInfo[idx][bMaxProducts] = strval(arrCoords[17]);
			BizzInfo[idx][bPriceProd] = strval(arrCoords[18]);
			printf("BizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
			idx,
			BizzInfo[idx][bOwner],
			BizzInfo[idx][bMessage],
			BizzInfo[idx][bEntranceCost],
			BizzInfo[idx][bTill],
			BizzInfo[idx][bProducts],
			BizzInfo[idx][bMaxProducts],
			BizzInfo[idx][bInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}


public LoadSBizz()
{
	new arrCoords[16][64];
	new strFromFile2[256];
	new File: file = fopen("sbizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[7]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
			SBizzInfo[idx][sbInterior] = strval(arrCoords[12]);
			SBizzInfo[idx][sbProducts] = strval(arrCoords[13]);
			SBizzInfo[idx][sbMaxProducts] = strval(arrCoords[14]);
			SBizzInfo[idx][sbPriceProd] = strval(arrCoords[15]);
			printf("SBizzInfo:%d Owner:%s Message:%s Entfee:%d Till:%d Products:%d/%d Interior:%d.\n",
			idx,
			SBizzInfo[idx][sbOwner],
			SBizzInfo[idx][sbMessage],
			SBizzInfo[idx][sbEntranceCost],
			SBizzInfo[idx][sbTill],
			SBizzInfo[idx][sbProducts],
			SBizzInfo[idx][sbMaxProducts],
			SBizzInfo[idx][sbInterior]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{
    new string[MAX_PLAYER_NAME];
    new string1[MAX_PLAYER_NAME];
	for(new c=0;c<CAR_AMOUNT;c++)
	{
		Gas[c] = GasMax;
	}
	LoadCar();
	LoadProperty();
	LoadBizz();
	LoadSBizz();
	LoadBoxer();
	LoadStuff();
	LoadIRC();
	LoadFamilies();
	LoadCK();
	LoadTurfs();
	LoadPapers();
	IRCInfo[0][iPlayers] = 0; IRCInfo[1][iPlayers] = 0; IRCInfo[2][iPlayers] = 0;
	IRCInfo[3][iPlayers] = 0; IRCInfo[4][iPlayers] = 0; IRCInfo[5][iPlayers] = 0;
	IRCInfo[6][iPlayers] = 0; IRCInfo[7][iPlayers] = 0; IRCInfo[8][iPlayers] = 0;
	IRCInfo[9][iPlayers] = 0;
	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nothing");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "No-one");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	PlayerHaul[124][pCapasity] = 100;
	PlayerHaul[125][pCapasity] = 100;
	PlayerHaul[126][pCapasity] = 50;
	PlayerHaul[127][pCapasity] = 50;
	ShowNameTags(1);
	ShowPlayerMarkers(1);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	
	CreateDynamicObject(5130 ,-1334.64,478.712,8.27159,180,180,45);//3ทิด
	CreateDynamicObject(969,-1534.51,481.789,9.6041,0.00,0.0,0);//ประตู
	CreateDynamicObject(1686,-2026.6,155.7,28,180,180,358.8);//ปั้ม
	CreateDynamicObject(1686,-2026.6,157.4,28,180,180,358.8);//ปั้ม
	agate = CreateDynamicObject(969,-1534.51,481.789,6.26789,0,0,0);
	pdngate = CreateDynamicObject(969, -1571.713013, 665.608154, 6.336499, 0.0000, 0.0000, 270.0000);
	pdgate =  CreateDynamicObject(969, -1701.770020, 679.915344, 24.057503, 0.0000, 0.0000, 90.0000);
	fgate = CreateDynamicObject( 969 , -2427.838378 , 499.158966 , 29.106018 , 0.000000 , 0.000000 , 1282.000000 );
	//=========ATMร.ร.============
    CreateDynamicObject(2942, -2034.83, -102.027, 34.7875, 180, 180, 358.2);
    CreateDynamicObject(2773, -2033.94, -100.919, 34.6797, 0, 0, 1.311);
    CreateDynamicObject(2773, -2035.84, -100.919, 34.6797, 0, 0, 1.311);
    //========ATMชานเมือง=========
    CreateDynamicObject(2942, -2658.67, 1341.84, 6.59375, 0, 0, 90);
    CreateDynamicObject(2773, -2657.55, 1341.02, 6.69375, 0, 0, 90);
    CreateDynamicObject(2773, -2657.55, 1342.62, 6.69375, 0, 0, 90);
    //==========================แต่งหน้าอู่=========================
    CreateDynamicObject(14781, -2030.29, 155.947, 33.8141, 0, 0, 0);//สนามมวย
    CreateDynamicObject(1215, -1998.4, 177.9, 27.2, 0, 0, 0);
    CreateDynamicObject(1215, -1998, 118.6, 27.2, 0, 0, 0);//เทียน
    CreateDynamicObject(3578, -2041.6, 135.4, 28.7, 0, 0, 90);
    CreateDynamicObject(3578, -2021, 156.6, 28.4, 0, 0, 90);//ที่กันเหลือง
    CreateDynamicObject(1223, -1987.87, 198.482, 25.9609, 180, 180, 82.6002);
    CreateDynamicObject(1223, -1986.57, 184.659, 25.9609, 180, 180, 0.00015204);
    CreateDynamicObject(1223, -1986.58, 167.248, 25.9609, 180, 180, 0.00015204);
    CreateDynamicObject(1223, -1986.43, 148.808, 25.9609, 180, 180, 0.00015204);
    CreateDynamicObject(1223, -1986.44, 126.26, 25.9609, 180, 180, 0.00015204);
    CreateDynamicObject(1223, -1986.76, 98.447, 25.9609, 180, 180, 300);
    CreateDynamicObject(1215, -1960.62, 106.815, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1960.62, 98.7278, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1960.62, 91.4598, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1960.62, 84.868, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1960.62, 78.6818, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1995.75, 160.671, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1995.75, 153.316, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1995.75, 145.543, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1995.75, 137.105, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1998.23, 166.755, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -1998.23, 130.101, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -2000.59, 137.103, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -2000.59, 145.751, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -2000.59, 153.223, 27.2672, 0, 0, 0);
    CreateDynamicObject(1215, -2000.59, 160.134, 27.2672, 0, 0, 0);
    CreateDynamicObject(8991, -1998.68, 158.749, 27.2812, 0, 0, 90);
    CreateDynamicObject(8991, -1998.68, 146.775, 27.2812, 0, 0, 90);
    CreateDynamicObject(8991, -1998.68, 138.083, 27.2812, 0, 0, 90);
    //========================แต่งหน้าค่ายทหาร===============================
    CreateDynamicObject(1215, -1519.5, 550.007, 6.72344, 0, 0, 0);
    CreateDynamicObject(1215, -1519.32, 538.344, 6.72344, 0, 0, 0);
    CreateDynamicObject(1215, -1519.68, 523.144, 6.72344, 0, 0, 0);
    CreateDynamicObject(1215, -1519.6, 508.644, 6.72344, 0, 0, 0);
    CreateDynamicObject(1215, -1519.47, 496.181, 6.42344, 0, 0, 0);
    CreateDynamicObject(3279, -1529.95, 540.587, 6.12344, 0, 0, 0);
    CreateDynamicObject(3268, -1239, 457.7, 6.1328, 180, 180, 180);
    CreateDynamicObject(16093, -1543.9, 474.1, 10.2344, 180, 180, 0.00015204);
    CreateDynamicObject(3279, -1543, 487.8, 6.2203, 0, 0, 0);
    CreateDynamicObject(16638, -1543.9, 475.1, 8.4844, 0, 0, 180);
    CreateDynamicObject(987, -1517.96, 552.707, 6.12344, 180, 180 , 0.00015204);
    CreateDynamicObject(987, -1529.93, 552.76, 6.12344, 180, 180, 0.00015204);
    CreateDynamicObject(987, -1541.75, 552.838, 6.12344, 0, 0, -90);
    CreateDynamicObject(987, -1541.75, 543.653, 6.12344, 0, 0, -90);
    CreateDynamicObject(987, -1541.93, 531.609, 6.12344, 180, 180, 58.0002);
    CreateDynamicObject(987, -1550.39, 508.393, 6.12344, 0, 0, -90);
    CreateDynamicObject(987, -1550.39, 499.414, 6.12344, 0, 0, -90);
    CreateDynamicObject(987, -1550.39, 487.365, 6.12344, 0, 0, -90);
    CreateDynamicObject(638, -1523.86, 530.592, 6.52344, 0, 0, 90);
    CreateDynamicObject(638, -1523.86, 522.144, 6.52344, 0, 0, 90);
    CreateDynamicObject(638, -1523.86, 514.335, 6.52344, 0, 0, 90);
    CreateDynamicObject(638, -1523.86, 508.188, 6.52344, 0, 0, 90);
    CreateDynamicObject(638, -1523.86, 501.968, 6.52344, 0, 0, 90);
    CreateDynamicObject(1237, -1547.41, 521.434, 6.12344, 0, 0, 0);
    CreateDynamicObject(1237, -1547.41, 515.995, 6.12344, 0, 0, 0);
    CreateDynamicObject(1237, -1547.62, 513.599, 6.12344, 0, 0, 0);
    CreateDynamicObject(1237, -1544.81, 514.453, 6.12344, 0, 0, 0);
    CreateDynamicObject(1237, -1548.81, 508.477, 6.12344, 0, 0, 0);
    CreateDynamicObject(1215, -1549.08, 515.375, 6.72344, 0, 0, 0);
    CreateDynamicObject(1215, -1549.08, 514.881, 6.72344, 0, 0, 0);
    CreateDynamicObject(1215, -1549.08, 514.323, 6.72344, 0, 0, 0);
    CreateDynamicObject(967, -1547.73, 514.772, 6.22344, 0, 0, 5.6);
    //==========================bar หน้าอู่============================
    CreateDynamicObject(3558, -1991.03, 212.407, 29.4609, 180, 180, 0.00015204);
    CreateDynamicObject(3462, -1992.52, 202.988, 29.8922, 0, -360, 90);
    CreateDynamicObject(3515, -1992.52, 202.988, 27.4672, 0, 0, 0);
    CreateDynamicObject(983, -1999.04, 203.01, 27.3609, 180, 180, 0.2);
    CreateDynamicObject(983, -1995.83, 206.203, 27.3609, 0, 0, 90);
    CreateDynamicObject(983, -1989.39, 206.224, 27.3609, 0, 0, 90);
    CreateDynamicObject(983, -1986.24, 203.11, 27.3609, 0, 0, 0);
    CreateDynamicObject(983, -1989.39, 199.89, 27.3609, 0, 0, 90);
    CreateDynamicObject(983, -1995.83, 199.89, 27.3609, 0, 0, 90);
    CreateDynamicObject(869, -1996.98, 203.953, 27.1922, 0, 0, 90);
    CreateDynamicObject(869, -1996.88, 202.071, 27.1922, 0, 0, 90);
    CreateDynamicObject(869, -1993.74, 204.113, 27.1922, 0, 0, 90);
    CreateDynamicObject(869, -1994.04, 202.07, 27.1922, 0, 0, 90);
    CreateDynamicObject(869, -1991.52, 202.285, 27.1922, 0, 0, 90);
    CreateDynamicObject(869, -1990.16, 204.18, 27.1922, 0, 0, 90);
    CreateDynamicObject(869, -1988.61, 202.011, 27.1922, 0, 0, 90);
    CreateDynamicObject(869, -1987.88, 203.536, 27.1922, 0, 0, 90);
    //======================แต่งจุดเกิดเด็กใหม่=========================
	CreateDynamicObject(3578, -2648.94, 1352.82, 6.61719, 0, 0, 90);
    CreateDynamicObject(3578, -2648.94, 1342.6, 6.61719, 0, 0, 90);
    CreateDynamicObject(3578, -2648.94, 1335.82, 6.61719, 0, 0, 90);
    CreateDynamicObject(3578, -2644.1, 1330.34, 6.61719, 0, 0, 0.00015204);
    CreateDynamicObject(3578, -2642.78, 1330.34, 6.61719, 0, 0, 0.00015204);
    CreateDynamicObject(3578, -2632.6, 1330.34, 6.61719, 0, 0, 0.00015204);
    CreateDynamicObject(3578, -2623.66, 1333.99, 6.61719, 0, 0, 45.0002);
    CreateDynamicObject(3578, -2619.16, 1338.49, 6.61719, 0, 0, 45.0002);
    CreateDynamicObject(3578, -2615.56, 1347.05, 6.61719, 0, 0, 90);
    CreateDynamicObject(3578, -2615.56, 1350.94, 6.61719, 0, 0, 90);
    CreateDynamicObject(3578, -2615.56, 1371.41, 6.61719, 0, 0, 90);
    CreateDynamicObject(3578, -2615.56, 1375.63, 6.61719, 0, 0, 90);
    CreateDynamicObject(3578, -2620.5, 1380.91, 6.61719, 0, 0, 0.00015204);
    CreateDynamicObject(3578, -2643.13, 1380.91, 6.61719, 0, 0, 0.00015204);//ที่กันเหลือง
    CreateDynamicObject(11292, -2656.58, 1356.07, 7.49375, 0, 0, 90);
    CreateDynamicObject(9482, -2613.56, 1361.41, 12.4172, 0, 0, 0);
    CreateDynamicObject(3627, -2638.25, 1350.73, 9.91719, 0, 0, 0);
    /*//======================ปิดตู้น้ำหน้าอู่=============================
	CreateDynamicObject(1237, -1981.73, 142.18, 26.54, 0.00, 0.00, 0.00);
	CreateDynamicObject(1237, -1981.73, 143.09, 26.54, 0.00, 0.00, 0.00);
	CreateDynamicObject(1237, -1981.02, 141.72, 26.54, 0.00, 0.00, 0.00);
	CreateDynamicObject(1237, -1981.02, 143.62, 26.54, 0.00, 0.00, 0.00);
	CreateDynamicObject(1237, -1981.73, 142.67, 26.54, 0.00, 0.00, 0.00);*/
	//==========================gatedonate==============================
	sagate = CreateDynamicObject(989, -1971.28, 99.2108, 28.5672, 180, 180, 106);//gate 1
    sbgate = CreateDynamicObject(989, -1964.38, 99.2108, 28.5672, 180, 180, 106);//gate 2
    scgate = CreateDynamicObject(989, -1971.41, 86.9734, 28.5672, 180, 180, 286.8);//gate 3
    sdgate = CreateDynamicObject(989, -1964.42, 86.9734, 28.5672, 180, 180, 286.8);//gate 4
	CreateDynamicObject(17950, -1971.51, 103.51, 28.9672, 180, 180, 0.00015204);//กรง 1
    CreateDynamicObject(17950, -1964.39, 103.51, 28.9672, 180, 180, 0.00015204);//กรง 2
    CreateDynamicObject(17950, -1971.51, 82.705, 28.9672, 0, 0, 0.00015204);//กรง 3
    CreateDynamicObject(17950, -1964.39, 82.705, 28.9672, 0, 0, 0.00015204);//กรง 4
    CreateDynamicObject(1215, -1961.23, 107.696, 31.6672, 0, 0, 0);
    CreateDynamicObject(1215, -1974.28, 107.696, 31.6672, 0, 0, 0);
    CreateDynamicObject(1215, -1961.12, 99.4722, 31.6672, 0, 0, 0);
    CreateDynamicObject(1215, -1974.39, 99.4722, 31.6672, 0, 0, 0);
    CreateDynamicObject(1215, -1961.31, 86.6201, 31.6672, 0, 0, 0);
    CreateDynamicObject(1215, -1961.27, 78.7476, 31.6672, 0, 0, 0);
    CreateDynamicObject(1215, -1974.58, 86.6893, 31.6672, 0, 0, 0);
    CreateDynamicObject(1215, -1974.58, 78.4574, 31.6672, 0, 0, 0);//เทียน
    CreateDynamicObject(673, -1959.2, 74.745, 25.4047, 0, 0, 333);
    CreateDynamicObject(673, -1959.2, 83.6219, 25.4047, 0, 0, 333);
    CreateDynamicObject(673, -1959.2, 92.5716, 25.4047, 0, 0, 333);
    CreateDynamicObject(673, -1959.2, 103.824, 25.4047, 0, 0, 333);
    CreateDynamicObject(11247, -1959.13, 100.353, 25.8813, 0, 0, 0);
    CreateDynamicObject(11246, -1959.16, 100.206, 25.9812, 0, 0, 0);
    CreateDynamicObject(8991, -1959.42, 80.4449, 26.1812, 0, 0, 90);
    CreateDynamicObject(8991, -1959.42, 84.6675, 26.1812, 0, 0, 90);
    CreateDynamicObject(8991, -1959.42, 98.4232, 26.1812, 0, 0, 90);//ชุดต้นไม
    //===================แต่งหน้าร.ร.======================================
    CreateDynamicObject(3578, -2018.03, -98.0834, 34.4922, 0, 0, 90);
    CreateDynamicObject(3578, -2023.09, -93.2154, 34.4922, 180, 180, 0.00015204);
    CreateDynamicObject(3578, -2036.97, -98.3081, 34.4922, 0, 0, 90);
    CreateDynamicObject(3578, -2057.8, -85.8511, 34.4922, 0, 360, 90);
    CreateDynamicObject(3578, -2062.56, -80.7717, 34.4922, 180, 180, 0.00015204);
    CreateDynamicObject(3578, -2070.49, -80.7717, 34.4922, 180, 180, 0.00015204);
    CreateDynamicObject(3578, -2080.48, -80.7717, 34.4922, 180, 180, 0.00015204);
    CreateDynamicObject(3578, -2090.78, -80.7717, 34.4922, 180, 180, 0.00015204);//ที่กั้นสีเหลือง
    CreateDynamicObject(1237, -2036.74, -92.4658, 34.2922, 0, 0, 0);
    CreateDynamicObject(1237, -2036.77, -88.4036, 34.2922, 0, 0, 0);
    CreateDynamicObject(1237, -2017.72, -92.4122, 34.2922, 0, 0, 0);
    CreateDynamicObject(1237, -2017.85, -88.523, 34.2922, 0, 0, 0);//ที่กั้นกลมๆ
    CreateDynamicObject(979, -2047.08, -96.994, 34.4922, 0, 0, 90);
    CreateDynamicObject(979, -2047.08, -87.0535, 34.4922, 0, 0, 90);//ที่กันสีขาวส้ม
    CreateDynamicObject(3627, -2075.88, -89.8133, 37.9922, 0, 0, 90);
    CreateDynamicObject(3515, -2027, -84.1536, 35.1672, 0, 0, 0);
    CreateDynamicObject(3462, -2027.02, -84.2473, 37.5922, 0, 0, 90);
    CreateDynamicObject(3437, -2021.69, -84.192, 35.5922, 0, 0, 90);
    CreateDynamicObject(3437, -2032.96, -84.192, 35.5922, 0, 0, 90);
    CreateDynamicObject(869, -2019.53, -82.936, 34.9922, 180, 180, 80.0002);
    CreateDynamicObject(869, -2022.89, -84.5805, 34.9922, 0, 0, 90);
    CreateDynamicObject(871, -2024.66, -83.1029, 34.7922, 0, 0, 0);
    CreateDynamicObject(871, -2029.49, -83.1986, 34.7922, 0, 0, 0);
    CreateDynamicObject(869, -2031.2, -84.6151, 34.9922, 0, 0, 90);
    CreateDynamicObject(869, -2034.3, -82.9199, 34.9922, 0, 0, 90);//ชุดน้ำพุหน้าร.ร.
    CreateDynamicObject(1232, -2018.09, -102.069, 36.5922, 0, 0, 0);
    CreateDynamicObject(1232, -2018.05, -93.2654, 36.5922, 0, 0, 0);
    CreateDynamicObject(1232, -2027.77, -93.1763, 36.5922, 0, 0, 0);
    CreateDynamicObject(1232, -2036.87, -101.767, 36.5922, 0, 0, 0);
    CreateDynamicObject(1232, -2036.85, -93.5857, 36.5922, 0, 0, 0);
    CreateDynamicObject(1232, -2057.86, -90.3843, 36.5922, 0, 0, 0);
    CreateDynamicObject(1232, -2057.61, -80.8022, 36.5922, 0, 0, 0);
    CreateDynamicObject(1232, -2070.69, -80.7548, 36.5922, 0, 0, 0);
    CreateDynamicObject(1232, -2081, -80.7849, 36.5922, 0, 0, 0);
    CreateDynamicObject(1232, -2091.38, -80.8624, 36.5922, 0, 0, 0);//ไฟ
    CreateDynamicObject(11247, -2068.74, -70.3865, 34.7813, 0, 0, -90);
    CreateDynamicObject(11246, -2068.74, -70.3865, 34.8813, 0, 0, -90);
    CreateDynamicObject(11247, -2025.12, -70.3865, 34.7813, 0, 0, -90);
    CreateDynamicObject(11246, -2025.12, -70.3352, 34.8813, 0, 0, -90);
    CreateDynamicObject(8991, -2081.32, -70.602, 35.1812, 180, 180, 0);
    CreateDynamicObject(8991, -2089.3, -70.234, 35.1812, 180, 180, 0);
    CreateDynamicObject(8991, -2068.93, -70.2259, 35.1812, 180, 180, 0);
    CreateDynamicObject(8991, -2044.03, -70.0461, 35.1812, 180, 180, 0);
    CreateDynamicObject(8991, -2030.19, -70.1826, 35.1812, 180, 180, 0);
    CreateDynamicObject(8991, -2024.99, -70.3885, 35.1812, 180, 180, 0);//ชุดต้นไม้ขนาดย่อม
    //===================เซ่เว่นหน้าอู่=====================================
    CreateDynamicObject(3515, -1968.7, 93.0177, 25.8672, 0, 0, 0);
    CreateDynamicObject(12845, -1982, 82.7, 28.7609, 180, 180, 0.00015204);
    CreateDynamicObject(12843, -1985.06, 83.4428, 26.6672, 180, 180, 0.000200272);
    CreateDynamicObject(3578, -1979.93, 107.472, 26.8672, 0, 0, 0);
    CreateDynamicObject(3578, -1984.87, 102.55, 26.8672, 0, 0, 90);
    CreateDynamicObject(3578, -1994.78, 95.5592, 26.8672, 0, 0, 0);
    CreateDynamicObject(3578, -2000.16, 90.6943, 26.8672, 0, 0, 90);
    CreateDynamicObject(3578, -2000.16, 83.5519, 26.8672, 0, 0, 90);
    CreateDynamicObject(3578, -1994.78, 78.79, 26.8672, 0, 0, 0);
    CreateDynamicObject(1256, -1986.09, 102.656, 27.3438, 0, 0, 0);
    CreateDynamicObject(1256, -1994.2, 96.6299, 27.3438, 0, 0, -90);
    //======================Agency gate=================================
    agencygate = CreateDynamicObject(969, -2202.26, 309.89, 34.2953, 0, 0, 0);
    CreateDynamicObject(986, -2241.54, 289.719, 35.3953, 0, -360, -90);
    CreateDynamicObject(986, -2241.54, 297.712, 35.3953, 0, -360, -90);
    CreateDynamicObject(986, -2241.54, 305.748, 35.3953, 0, -360, -90);
    CreateDynamicObject(986, -2237.58, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2229.63, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2221.64, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2213.85, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2206.4, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2189.51, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2184.76, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2177.15, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2169.08, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2161.06, 309.857, 35.9353, 0, 0, 0);
    CreateDynamicObject(986, -2157.08, 289.734, 35.3953, 0, 0, 90);
    CreateDynamicObject(986, -2157.08, 297.753, 35.3953, 0, 0, 90);
    CreateDynamicObject(986, -2157.08, 305.778, 35.3953, 0, 0, 90);
    CreateDynamicObject(3169, -2239.34, 291.715, 34.1953, 0, 0, 0);
    CreateDynamicObject(1231, -2236.2, 287.105, 36.8953, 0, 0, 90);
    CreateDynamicObject(1231, -2236.2, 298.064, 36.8953, 0, 0, 90);
    CreateDynamicObject(969, -2202.26, 309.89, 37.6953, 0, 0, 0);
    CreateDynamicObject(967, -2203.74, 308.659, 34.0953, 0, -360, -90);
    CreateDynamicObject(967, -2190.32, 311.876, 34.2953, 0, -360, 90);
	SetGameModeText("Return Mode");
	format(objstore, sizeof(objstore), "MOLE: I got nothing, check back with me later.");
	format(cbjstore, sizeof(cbjstore), "HQ: There is nothing in your Vicinity, Out.");
	format(motd, sizeof(motd), "เว็บไซด์ของเราได้เปิดให้บริการแล้วครับ");
	gettime(ghour, gminute, gsecond);
	FixHour(ghour);
	ghour = shifthour;
	if(!realtime)
	{
		SetWorldTime(wtime);
	}
	SetPDistance(20);
	EnableTirePopping(1);
	EnableZoneNames(1);
	AllowInteriorWeapons(1);
	AllowAdminTeleport(1);
	UsePlayerPedAnims();
	// CreatedCars check
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
	    CreatedCars[i] = 0;
	}
	// Zones
	for(new i = 0; i < sizeof(TurfInfo); i++)
	{
	    Turfs[i] = GangZoneCreate(TurfInfo[i][zMinX],TurfInfo[i][zMinY],TurfInfo[i][zMaxX],TurfInfo[i][zMaxY]);
	}
	// Player Class's
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
 	AddStaticVehicle(523,-1574.0712,683.2171,6.7508,177.8997,1,7); // มอไซ ต.ร. 1
    AddStaticVehicle(523,-1576.6561,683.3769,6.7526,178.4910,1,7); // มอไซ ต.ร. 2
    AddStaticVehicle(523,-1578.5458,683.5773,6.7470,182.3905,1,7); // มอไซ ต.ร. 3
    AddStaticVehicle(523,-1580.4188,683.5099,6.7527,179.8660,1,7); // มอไซ ต.ร. 4
    AddStaticVehicle(597,-1576.0814,674.2583,6.9281,178.8094,1,7); // รถต.ร. 5
    AddStaticVehicle(597,-1582.1144,674.4299,6.9644,179.7014,1,7); // รถต.ร. 6
    AddStaticVehicle(597,-1587.9497,674.3199,6.9420,178.2246,1,7); // รถต.ร. 7
    AddStaticVehicle(597,-1594.1963,674.3428,6.9569,181.7228,1,7); // รถต.ร. 8
    AddStaticVehicle(597,-1600.0062,674.2910,6.9547,180.1060,1,7); // รถต.ร. 9
    AddStaticVehicle(597,-1606.3597,674.2595,6.9504,180.5453,1,7); // รถต.ร. 10
    AddStaticVehicle(597,-1611.5957,674.4136,6.9931,179.9707,1,7); // รถต.ร. 11
    AddStaticVehicle(427,-1611.3105,652.3359,7.3187,359.6637,1,7); // swat 12
    AddStaticVehicle(427,-1616.9967,652.3906,7.3249,4.0917,1,7); // swat 13
    AddStaticVehicle(601,-1622.8756,651.1815,6.9378,2.6987,1,7); // ฉีดน้ำ 14
    AddStaticVehicle(601,-1628.6221,651.2109,6.9271,358.7873,1,7); // ฉีดน้ำ 15
    AddStaticVehicle(528,-1634.1545,650.6143,7.2340,359.8810,1,7); //หุ้มเกราะต.ร. 16
    AddStaticVehicle(528,-1639.0717,650.4802,7.2300,1.7508,1,7); // หุ้มเกราะต.ร. 17
    AddStaticVehicle(597,-1582.0271,651.3053,6.9637,0.7147,1,7); // รถต.ร. 18
    AddStaticVehicle(597,-1593.4276,651.0974,6.9589,357.2874,1,7); // รถต.ร. 19
    AddStaticVehicle(597,-1587.4615,650.9449,6.9554,1.1827,1,7); // รถต.ร. 20
    AddStaticVehicle(597,-1605.7925,651.3286,6.9541,0.7552,1,7); // รถต.ร. 21
    AddStaticVehicle(597,-1600.4392,748.9415,-5.4796,178.8413,1,7); // รถต.ร.22
    AddStaticVehicle(597,-1604.4641,748.9031,-5.4770,178.4797,1,7); // รถต.ร. 23
    AddStaticVehicle(597,-1612.2847,732.8842,-5.4797,178.4508,1,7); // รถต.ร. 24
    AddStaticVehicle(597,-1598.8699,677.1315,-5.4329,329.5622,1,7); // รถต.ร. 25
    AddStaticVehicle(597,-1619.0841,682.6004,-5.4788,272.4727,1,7); // รถต.ร. 26
    AddStaticVehicle(597,-1648.4507,685.8616,8.8156,95.6588,1,7); // รถต.ร. 27
    AddStaticVehicle(497,-1680.0278,706.0568,30.8063,91.3020,1,7); // ฮ.ต.ร. 28
	AddStaticVehicleEx(470,-1355.6016,456.7284,7.1422,0.0137,102,102,60000); // รถนาวิกโยธิน CARID 29
	AddStaticVehicleEx(470,-1363.1577,457.1030,7.1422,359.6590,102,102,60000); // รถนาวิกโยธิน CARID 30
	AddStaticVehicleEx(500,-1375.1639,457.5521,7.1423,359.8182,102,102,60000); // รถนาวิกโยธิน CARID 31
	AddStaticVehicleEx(500,-1381.4019,457.8351,7.1790,0.3435,102,102,60000); // รถนาวิกโยธิน CARID 32
	AddStaticVehicleEx(430,-1443.4342,427.0862,-0.6994,268.8489,-1, -1, 60000); // เรือตำรวจ/FBI/นาวิกโยธิน CARID 33
	AddStaticVehicleEx(430,-1442.0721,390.6206,-0.4339,270.1023,-1, -1, 60000); // เรือตำรวจ/FBI/นาวิกโยธิน CARID 34
	AddStaticVehicleEx(425,-1279.8262,493.3734,18.0309,219.1345,-1,-1,60000); // ฮันเตอร์นาวิกโยธิน CARID 35
	AddStaticVehicleEx(425,-1291.0063,492.3819,18.0305,223.8306,-1,-1,60000); // ฮันเตอร์นาวิกโยธิน CARID 36
	AddStaticVehicleEx(520,-1430.4078,508.1596,18.9400,269.6329,44,86,60000);// ฮายดร้านาวิกโยธิน CARID 37
	AddStaticVehicleEx(520,-1419.9038,493.5340,18.9350,269.6848,44,86,60000);// ฮายดร้านาวิกโยธิน CARID 38
	AddStaticVehicleEx(520,-1398.6207,507.7513,18.9328,269.8143,44,86,60000); // ฮายดร้านาวิกโยธิน CARID 39
	AddStaticVehicleEx(490,-702.5325,927.9128,12.5036,359.2570,0,0,60000); //FBI 40
    AddStaticVehicleEx(560,-697.0287,928.1631,12.4184,1.8350,0,0,60000); //FBI 41
    AddStaticVehicleEx(560,-679.5029,928.0730,12.2739,357.0053,0,0,60000); //FBI 42
    AddStaticVehicleEx(490,-673.4913,927.8470,12.2748,356.3762,0,0,60000); //FBI 43
    AddStaticVehicleEx(427,-681.2742,965.6860,12.2672,89.2689,0,0,60000); //FBI 44
	AddStaticVehicleEx(416,-2637.0630,617.3499,14.3281,90.1464,-1,-1,60000); // รถหมอ CARID 45
	AddStaticVehicleEx(416,-2661.4282,617.3460,14.3288,89.2072,-1,-1,60000); // รถหมอ CARID 46
	AddStaticVehicleEx(416,-2662.4568,595.3354,14.3281,273.2716,-1,-1,60000); // รถหมอ CARID 47
	AddStaticVehicleEx(407,-2018.8097,80.6303,28.0685,178.5577,3,1,60000); // รถดับเพลิงหมอ CARID 48
	AddStaticVehicleEx(407,-2018.6000,92.4016,28.0544,181.8407,3,1,60000); // รถดับเพลิงหมอ CARID 49
	AddStaticVehicleEx(487,-2703.3201,624.0250,14.1766,180.2649,1,3,60000); // ฮอหมอ CARID 50
	AddStaticVehicleEx(442,-2700.4087,-295.7965,7.0030,134.3761,0,0,60000); // รถมาเฟีย CARID 51
	AddStaticVehicleEx(442,-2706.9963,-302.5834,7.0023,135.4471,0,0,60000); // รถมาเฟีย CARID 52
	AddStaticVehicleEx(442,-2714.0437,-309.9514,7.0077,136.0030,0,0,60000); // รถมาเฟีย CARID 53
	AddStaticVehicleEx(534,-2728.3074,-324.8214,7.0047,315.2812,0,0,60000); // รถมาเฟีย CARID 54
	AddStaticVehicleEx(534,-2734.7136,-331.4358,6.9990,315.0925,0,0,60000); // รถมาเฟีย CARID 55
	AddStaticVehicleEx(534,-2741.6204,-338.0894,6.9996,314.9025,0,0,60000); // รถมาเฟีย CARID 56
	AddStaticVehicleEx(421,-2246.4949,650.9373,49.3054,359.9083,21,21,60000); // รถยากูซ่า CARID 57
	AddStaticVehicleEx(421,-2275.9553,651.1351,49.3042,359.9850,21,21,60000); // รถยากูซ่า CARID 58
	AddStaticVehicleEx(421,-2275.9622,658.7488,49.3252,359.2451,21,21,60000); // รถยากูซ่า CARID 59
	AddStaticVehicleEx(551,-2246.4614,659.4827,49.3057,359.4455,21,1,60000); // รถยากูซ่า CARID 60
	AddStaticVehicleEx(551,-2276.3381,686.5544,49.3034,359.5034,21,21,60000); // รถยากูซ่า CARID 61
	AddStaticVehicleEx(551,-2245.2485,687.0718,49.3045,359.1799,21,21,60000); // รถยากูซ่า CARID 62
	AddStaticVehicleEx(409,-2756.6443,375.4441,4.1396,0.0031,1,1,60000); // ลีมูนายก CARID 63
	AddStaticVehicleEx(560,-2764.6550,393.0551,4.1058,270.5359,1,1,60000); // รถนายก CARID 64
	AddStaticVehicleEx(560,-2764.6309,357.8539,4.1417,269.1952,1,1,60000); // รถนายก CARID 65
	AddStaticVehicle(468,-2430.8501,514.9339,29.5985,213.2844,1,1); // motercos hit 66
    AddStaticVehicle(468,-2429.1968,516.0195,29.5983,213.2843,1,1); // motercos hit67
    AddStaticVehicle(468,-2427.1140,518.3657,29.5987,222.5932,1,1); // motercos hit68
    AddStaticVehicle(468,-2425.7483,519.6212,29.5986,222.5931,1,1); // motercos hit69
    AddStaticVehicle(468,-2423.3013,521.5259,29.5988,226.3829,1,1); // motercos hit70
    AddStaticVehicle(468,-2421.7861,523.1158,29.5986,226.3829,1,1); // motercos hit71
	AddStaticVehicle(487,-2440.5022,523.1905,34.3518,1.0788,0,1); // hit hall 72
	AddStaticVehicleEx(582,-2022.6146,458.6767,35.1414,0.7133,1,93,60000); // รถนักข่าว CARID 73
	AddStaticVehicleEx(582,-2031.3779,459.0133,35.1362,359.7429,1,93,60000); // รถนักข่าว CARID 74
	AddStaticVehicleEx(488,-2030.0052,475.3516,36.0068,271.1344,93,1,60000); // ฮอนักข่าว CARID 75
	AddStaticVehicle(420,-2045.2947,16.1512,35.1070,358.6610,6,6); // TAXI 76
    AddStaticVehicle(420,-2048.7209,16.1850,35.1073,358.5083,6,6); // TAXI 77
    AddStaticVehicle(420,-2051.9121,16.3922,35.1077,0.8386,6,6); // TAXI 78
    AddStaticVehicle(420,-2070.8572,10.5274,35.0991,93.6224,6,6); // TAXI 79
    AddStaticVehicle(420,-2070.7551,14.7780,35.1003,91.5101,6,6); // TAXI 80
    AddStaticVehicle(420,-2059.7517,14.1125,35.1028,358.7521,6,6); // TAXI 81
    AddStaticVehicleEx(587,-2093.7900,-85.0327,34.8898,0.9434,3,3,60000); //รถนทบ 82
    AddStaticVehicleEx(587,-2088.8677,-84.6670,34.8897,1.1983,3,3,60000); //รถนทบ 83
    AddStaticVehicleEx(587,-2081.8188,-85.3549,34.7027,0.0653,3,3,60000); //รถนทบ 84
	AddStaticVehicleEx(487,-2029.4583,-108.5188,39.0985,274.7883,17,1,60000); // รถนทบ CARID 85
	LinkVehicleToInterior(116, 7);
	LinkVehicleToInterior(117, 7);
	LinkVehicleToInterior(118, 7);
	LinkVehicleToInterior(119, 7);
	LinkVehicleToInterior(120, 4);
	LinkVehicleToInterior(121, 4);
	LinkVehicleToInterior(122, 4);
	LinkVehicleToInterior(123, 4);
	LinkVehicleToInterior(124, 14);
	LinkVehicleToInterior(125, 14);
	LinkVehicleToInterior(126, 14);
	LinkVehicleToInterior(127, 14);
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 0)
		{
			AddStaticPickup(1273, 2, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			pickups++;
		}
		if(HouseInfo[h][hOwned] == 1)
		{
			AddStaticPickup(1239, 2, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			pickups++;
		}
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		if(BizzInfo[h][bOwned] == 0)
		{
			AddStaticPickup(1272, 2, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			pickups++;
		}
		if(BizzInfo[h][bOwned] == 1)
		{
			AddStaticPickup(1239, 2, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			pickups++;
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		if(SBizzInfo[h][sbOwned] == 0)
		{
			AddStaticPickup(1272, 2, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			pickups++;
		}
		if(SBizzInfo[h][sbOwned] == 1)
		{
			AddStaticPickup(1239, 2, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			pickups++;
		}
	}
	AddStaticPickup(1239, 2, -2766.2881,375.5615,6.3347); //City Hall
	AddStaticPickup(1239, 2, -1709.3248,404.6136,7.4190); //Getting Drugs for DrugDealers
	AddStaticPickup(1239, 2, 1381.0413,-1088.8511,27.3906); //Bill Board (old Job Department)
	AddStaticPickup(1239, 2, 597.1277,-1248.6479,18.2734); //Materials Package building
	AddStaticPickup(1239, 2, -2119.5469,-178.5679,35.3203); //Factory
	AddStaticPickup(1210, 2, -2446.9963,516.8070,30.3026); //Hitman Agency entrance
	AddStaticPickup(1242, 2, 1527.5,-12.1,1002.0); //binco armor
	AddStaticPickup(371, 2, 1544.2,-1353.4,329.4); //LS towertop
	AddStaticPickup(371, 2, 1536.0, -1360.0, 1150.0); //LS towertop
	AddStaticPickup(1559, 23,318.6615,1114.9644,1083.8828); //Ballas Exit
	AddStaticPickup(1559, 23,-2579.4365,310.0659,5.1797); //Ballas Enter
	AddStaticPickup(1559, 23,-2158.6687,642.9635,1052.3750); //Yakuza Exit
	AddStaticPickup(1559, 23,-2192.6519,647.4236,49.4375); //Yakuza Enter
	AddStaticPickup(1559, 23,1261.0292,-785.2979,1091.9063); //lcn Exit
	AddStaticPickup(1559, 23,-2719.4019,-319.1833,7.8438); //lcn Enter
	AddStaticPickup(1559, 23,2270.2590,-1210.4333,1047.5625); //aztec Exit
	AddStaticPickup(1559, 23,-1939.6660,1227.4609,31.6424); //aztec Enter
	AddStaticPickup(1559, 23,2214.6604,-1150.5028,1025.7969); //Vagos Exit
	AddStaticPickup(1559, 23,-1862.1824,-145.7641,11.8984); //Vagos Enter
	AddStaticPickup(1559, 23,2496.0171,-1692.4968,1014.7422); //grove Exit
	AddStaticPickup(1559, 23,-2454.8596,-135.8240,26.1772); //grove Enter
	AddStaticPickup(1559, 23,2352.9360,-1180.8899,1027.9766); //vence Exit
	AddStaticPickup(1559, 23,-2730.2241,72.9380,4.3359); //vence Enter
	AddStaticPickup(1247, 23,246.3121,108.2537,1003.2257); //sfpd Exit
	AddStaticPickup(1247, 23,-1605.5879,711.5010,13.8714); //sfpd Enter
	AddStaticPickup(1275, 23,227.0114,-8.2541,1002.2109); //cloth Exit
	AddStaticPickup(1275, 23,-1694.8345,951.5516,24.8906); //cloth Enter
	/*AddStaticPickup(1559, 23,-26.6577,-57.7970,1003.5469); //24/7 Exit
	AddStaticPickup(1559, 23,-1982.5063,190.6806,27.8969); //24/7 Enter*/
	AddStaticPickup(1559, 23,-2026.8861,-103.6032,1035.1829); //driving school Exit
	AddStaticPickup(1559, 23,-2026.5779,-102.0588,35.1641); //driving school Enter
	AddStaticPickup(1559, 23,-2029.7220,-119.6173,1035.1719); //driving school2 Exit
	AddStaticPickup(1559, 23,-2029.7667,-120.5223,35.1692); //driving school2 Enter
	AddStaticPickup(1239, 2, -2032.7687,-117.4139,1035.1719); //buylicense
	AddStaticPickup(1559, 23, 1204.8767,-13.5875,1000.9219); //school Bar Exit
	AddStaticPickup(1559, 2, -1984.8771,4.5660,34.5249);//school Bar enter
	AddStaticPickup(1279, 23, -1709.3248,404.6136,7.4190); //ยาเสพติด
	AddStaticPickup(1314, 2, -1606.3864,674.6657,-5.2422); //arrestsf
	AddStaticPickup(1274, 2, -2034.7958,-100.9361,35.1641);//atm
	AddStaticPickup(1274, 2, -2657.3792,1341.9497,7.0430);//atm
	AddStaticPickup(1239, 2, -1983.4200,83.1155,27.6875); //buy เซ่เว่น
	AddStaticPickup(1239, 2, -2236.3728,292.0458,35.6449); //buycar
	AddStaticPickup(1239, 2, -2203.7515,308.7350,35.1230); //agencygateop1
	AddStaticPickup(1239, 2, -2190.1536,311.8273,35.3203); //agencygateop2
	AddStaticPickup(1239, 2, 2315.9285,-12.6594,26.7422); //robbank
	AddStaticPickup(1239, 2, -77.7288, -1136.3897, 1.078);
	AddStaticPickup(1239, 2, -2040.9437, 456.2395, 35.1719);
	AddStaticPickup(1239, 2, -1921.3431,437.5137,35.1719);
	AddStaticPickup(1239, 2, 771.2932, -47.4572, 1000.5859);
	AddStaticPickup(1239, 2, -1952.164, 277.2182, 35.4687);
	AddStaticPickup(1239, 2, -2620.2071, 209.5256, 4.7696);
	AddStaticPickup(1239, 2, -2649.605, 376.0661, 6.1562);
	AddStaticPickup(1239, 2, -1932.3859, 276.2117, 41.0391);
	AddStaticPickup(1239, 2, -1538.8371, 114.8688, 17.3225);
	AddStaticPickup(1239, 2, -2664.1751, 239.2328, 4.3359);
	AddStaticPickup(1239, 2, -1733.365, 1014.3129, 45.2147);
	AddStaticPickup(1239, 2, -1704.573, 785.6325, 25.2808);
	AddStaticPickup(1239, 2, -2243.3049,-88.1410,35.3203);
	AddStaticPickup(1239, 2, -2050.8962,460.0262,35.1719); //NewsReporter Registration & /paper
	AddStaticPickup(1239, 2, -1616.2903,683.4705,7.1875); //duty PDSF
	AddStaticPickup(1239, 2, -690.1140,941.3155,13.6328); //duty FBI
	AddStaticPickup(1239, 2, 2744.9077,-2453.8093,13.8623); //duty นาวิก ls
	AddStaticPickup(1239, 2, -2237.2070,2354.2764,4.9798); //duty องกรณ์ลับ
	AddStaticPickup(1239, 2, -2542.5137,1216.1669,37.5286); //materials get
	AddStaticPickup(1239, 2, -2656.0393,635.0596,14.4531); //healme
	AddStaticPickup(1559, 2, -2027.7329,-41.4331,38.8047);//ร้านยา
	AddStaticPickup(1559, 2, -2551.1990,193.6636,6.2210);//ผับในเมืองเข้า
	AddStaticPickup(1559, 2, -2624.4995,1412.2290,7.0938);//ผับใหญ่นอกเมืองเข้า
	AddStaticPickup(1559, 2, -2336.8652,-166.6978,35.5547);//เบอเกอร์ shotมาเฟียเก่าเข้า
	AddStaticPickup(1559, 2, -1816.5369,617.5595,35.1719);//ขายไกเก่าเข้า
	AddStaticPickup(1559, 2, -1808.4099,945.6252,24.8906);//ร้านพิซซ่าเข้า
	AddStaticPickup(1559, 2, -2269.6436,-155.9507,35.3203);//สนามชกมวย
	AddStaticPickup(1559, 2, -1912.0575,828.3444,35.2052);//แฮม2
	AddStaticPickup(1559, 2, -2356.3438,1008.1089,50.8984);//แฮม3
	AddStaticPickup(1559, 2, -2671.5425,258.3681,4.6328);//kfc2
	AddStaticPickup(1559, 2, -1721.6519,1359.6932,7.1853);//พิซซ่า2
	AddStaticPickup(1559, 2, 774.0729,-50.1115,1000.5859);//ออก1
	AddStaticPickup(1559, 2, 493.4740,-24.9566,1000.6719);//ออก2
	AddStaticPickup(1559, 2, -2636.7498,1402.7544,906.4609);//ออก3
	AddStaticPickup(1559, 2, 362.8098,-75.1023,1001.5078);//ออก4
	AddStaticPickup(1559, 2, 365.6296,-11.8426,1001.8516);//ออก5
	AddStaticPickup(1559, 2, 372.2748,-133.2052,1001.4922);//ออก6
	AddStaticPickup(1559, 2, 774.0729,-50.1115,1000.5859);//ออก7
	AddStaticPickup(1559, 2, 2196.8452,-1204.4122,1049.023);//ร้านยาออก
	AddStaticPickup(1239, 2, -1522.0416,480.9301,7.1875); //เปิดประตูนาวิกโยธินใน
    AddStaticPickup(1239, 2, -1526.1824,485.4718,7.1797); //เปิดประตูนาวิกโยธินนอก
	AddStaticPickup(1239, 2, -1968.3264,308.4835,35.1719); //ที่เช่ารถ
	pickups=pickups+29;
	printf("Pickups Max = 100, Current Pickups = %d",pickups);
	new randa = random(sizeof(RandCars));
	randa = random(sizeof(RandCars));carselect[0] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[1] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[2] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[3] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[4] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[5] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[6] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[7] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[8] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[9] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[10] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[11] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[12] = RandCars[randa][0];
	randa = random(sizeof(RandCars));carselect[13] = RandCars[randa][0];
	randa = random(sizeof(RandLCars));carselect[14] = RandLCars[randa][0];
	AddStaticVehicleEx(567,-1936.8409,1169.9153,45.1673,269.6448,100,100,60000); //รถแก๊งฟ้า 86
	AddStaticVehicleEx(567,-1959.0679,1184.0908,45.1654,90.0844,100,100,60000); //รถแก๊งฟ้า 87
    AddStaticVehicleEx(567,-1914.9562,1184.5165,45.1662,89.6261,100,100,60000); //รถแก๊งฟ้า 88
    AddStaticVehicleEx(567,-1937.1819,1184.0406,45.1640,89.5933,100,100,60000); //รถแก๊งฟ้า 89
    AddStaticVehicleEx(567,-1961.5830,1223.8678,31.5769,269.4496,100,100,60000); //รถแก๊งฟ้า 90
    AddStaticVehicleEx(567,-1979.7347,1231.0400,31.5572,89.9542,100,100,60000); //รถแก๊งฟ้า  91
	AddStaticVehicleEx(492,-2467.0779,-118.8392,25.4426,359.4420,86,86,60000); //รถแก๊งเขียว 92
    AddStaticVehicleEx(492,-2456.3992,-112.1284,25.8099,178.5742,86,86,60000); //รถแก๊งเขียว 93
    AddStaticVehicleEx(492,-2462.3860,-144.2728,25.5100,359.8568,86,86,60000); //รถแก๊งเขียว 94
    AddStaticVehicleEx(492,-2468.5068,-134.2558,25.3989,89.4817,86,86,60000); //รถแก๊งเขียว 95
    AddStaticVehicleEx(535,-2450.1377,-125.7749,25.9151,91.6648,86,86,60000); //รถแก๊งเขียว 96
    AddStaticVehicleEx(535,-2450.3420,-120.6978,25.8963,91.4529,86,86,60000); //รถแก๊งเขียว 97
	AddStaticVehicleEx(400,-1851.7051,-143.7446,11.6946,90.6671,6,6,60000); // แก๊งเหลือง CARID 98
	AddStaticVehicleEx(400,-1850.6835,-130.4742,11.6979,177.4391,6,6,60000); // แก๊งเหลือง CARID 99
	AddStaticVehicleEx(535,-1866.4227,-132.0665,12.5201,177.9590,6,6,60000); // แก๊งเหลือง CARID 100
	AddStaticVehicleEx(535,-1878.2419,-147.9135,11.6946,91.1963,6,6,60000); // แก๊งเหลือง CARID 101
	AddStaticVehicleEx(535,-1878.0712,-154.6544,11.6982,92.6689,6,6,60000); // แก๊งเหลือง CARID 102
	AddStaticVehicleEx(400,-1886.2295,-163.5449,11.7396,334.8389,6,6,60000); // แก๊งเหลือง CARID 103
	AddStaticVehicleEx(536,-2585.7981,304.1248,4.6003,90.2563,85,85,60000); // แก๊งค์ม่วง CARID 104
	AddStaticVehicleEx(536,-2585.6958,307.5081,4.5975,89.7008,85,85,60000); // แก๊งค์ม่วง CARID 105
	AddStaticVehicleEx(536,-2585.7026,314.5329,4.5955,89.2169,85,85,60000); // แก๊งค์ม่วง CARID 106
	AddStaticVehicleEx(492,-2585.7122,318.2715,4.5967,91.2506,85,85,60000); // แก๊งค์ม่วง CARID 107
	AddStaticVehicleEx(492,-2585.9707,325.3379,4.5951,89.5561,85,85,60000); // แก๊งค์ม่วง CARID 108
	AddStaticVehicleEx(492,-2588.6316,328.8494,5.3757,90.3194,85,85,60000); // แก๊งค์ม่วง CARID 109
	AddStaticVehicleEx(463,-2725.5581,74.3425,3.8768,179.6217,50,50,60000); // แว็นบอย CARID 110
	AddStaticVehicleEx(463,-2724.3425,74.4075,3.8761,183.9255,50,50,60000); // แว็นบอย CARID 111
	AddStaticVehicleEx(468,-2735.8713,74.4671,4.0515,178.9763,50,50,60000); // แว็นบอย CARID 112
	AddStaticVehicleEx(468,-2737.1147,74.1351,4.1090,184.4393,50,50,60000); // แว็นบอย CARID 113
	AddStaticVehicleEx(461,-2756.6685,77.6919,6.7718,268.8628,50,50,60000); // แว็นบอย CARID 114
	AddStaticVehicleEx(461,-2756.5564,75.7720,6.7616,271.7118,50,50,60000); // แว็นบอย CARID 115
	AddStaticVehicleEx(571,-2166.9177,247.2436,34.6041,269.2400,1,1,60000); // รถแข่ง CARID 116
	AddStaticVehicleEx(571,-2166.9546,251.5462,34.6074,269.4969,1,1,60000); // รถแข่ง CARID 117
	AddStaticVehicleEx(571,-2166.9265,255.7412,34.6142,270.2071,1,1,60000); // รถแข่ง CARID 118
	AddStaticVehicleEx(571,-2162.3796,255.7774,34.6043,268.6885,1,1,60000); // รถแข่ง CARID 119
	AddStaticVehicleEx(571,-2162.4036,251.6615,34.6040,269.1577,1,1,60000); // รถแข่ง CARID 120
	AddStaticVehicleEx(571,-2162.2231,247.4204,34.6040,268.5561,1,1,60000); // รถแข่ง CARID 121
	AddStaticVehicleEx(431,-1900.0072,427.2390,35.2723,88.9880,1,7,60000); // รถบัส CARID 122
	AddStaticVehicleEx(431,-1899.7834,436.0087,35.2710,88.7491,1,126,60000); // รถบัส CARID 123
	AddStaticVehicleEx(456,-2149.7722,-144.3597,36.6493,179.9918,-1,-1,60000); // รถส่งของ CARID 124
	AddStaticVehicleEx(456,-2141.1616,-143.8869,36.6894,179.7167,-1,-1,60000); // รถส่งของ CARID 125
	AddStaticVehicleEx(440,-2149.5439,-134.7280,36.6411,179.0982,-1,-1,60000); // รถส่งของ CARID 126
	AddStaticVehicleEx(440,-2141.3262,-134.6497,36.6231,178.4224,-1,-1,60000); // รถส่งของ CARID 127
	AddStaticVehicleEx(514,-77.5039,-1108.1729,1.6683,161.8915,-1,-1,60000); // รถคนขับรถบรรทุก CARID 128
	AddStaticVehicleEx(514,-72.3507,-1109.7822,1.6670,161.7769,-1,-1,60000); // รถคนขับรถบรรทุก CARID 129
	AddStaticVehicleEx(514,-67.0126,-1111.7156,1.6688,160.4800,-1,-1,60000); // รถคนขับรถบรรทุก CARID 130
	AddStaticVehicleEx(435,-51.0638,-1135.2831,1.0781,68.3320,-1,-1,60000); // รถคนขับรถบรรทุก CARID 131
	AddStaticVehicleEx(435,-53.6230,-1139.7546,1.0781,67.5604,-1,-1,60000); // รถคนขับรถบรรทุก CARID 132
	AddStaticVehicleEx(435,-55.0517,-1144.3676,0.8018,68.1347,-1,-1,60000); // รถคนขับรถบรรทุก CARID 133
	AddStaticVehicleEx(593,-1429.2843,-505.8203,13.7824,205.7709,-1,-1,60000);// เครื่องบินในสนามบินSF CARID 134
	AddStaticVehicleEx(593,-1462.4779,-524.2803,13.7832,204.8137,-1,-1,60000);// เครื่องบินในสนามบินSF CARID 135
	AddStaticVehicleEx(513,-1354.3270,-466.5467,13.7827,162.0134,-1,-1,60000);// เครื่องบินในสนามบินSF CARID 136
	AddStaticVehicleEx(513,-1390.3510,-482.7985,13.7883,250.3124,-1,-1,60000);// เครื่องบินในสนามบินSF CARID 137
	AddStaticVehicleEx(481,-2646.6091,1333.2548,6.7807,88.4457,-1,-1,60000); // จักรยานเด็กใหม่ CARID 138
	AddStaticVehicleEx(481,-2646.4285,1334.7048,6.7785,92.4590,-1,-1,60000); // จักรยานเด็กใหม่ CARID 139
	AddStaticVehicleEx(481,-2646.3784,1336.2413,6.7783,94.1287,-1,-1,60000); // จักรยานเด็กใหม่ CARID 140
	AddStaticVehicleEx(481,-2646.2463,1337.8129,6.7769,94.4555,-1,-1,60000); // จักรยานเด็กใหม่ CARID 141
	AddStaticVehicleEx(481,-2646.2034,1339.6116,6.7769,95.6027,-1,-1,60000); // จักรยานเด็กใหม่ CARID 142
	AddStaticVehicleEx(481,-2646.1675,1345.1046,6.6798,90.5720,-1,-1,60000); // จักรยานเด็กใหม่ CARID 143
	AddStaticVehicleEx(481,-2646.0730,1346.5322,6.6833,89.4716,-1,-1,60000); // จักรยานเด็กใหม่ CARID 144
	AddStaticVehicleEx(481,-2646.0984,1347.8564,6.6858,96.8815,-1,-1,60000); // จักรยานเด็กใหม่ CARID 145
	AddStaticVehicleEx(481,-2645.9109,1349.1563,6.6846,93.9568,-1,-1,60000); // จักรยานเด็กใหม่ CARID 146
	AddStaticVehicleEx(481,-2645.9219,1350.6372,6.6817,95.1806,-1,-1,60000); // จักรยานเด็กใหม่ CARID 147
	AddStaticVehicleEx(432,-1241.3392,463.5078,7.2003,92.5233,0,0,60000); // รถถังนาวิกโยธิน CARID 148
	AddStaticVehicleEx(432,-1240.8944,453.4094,7.2003,92.5233,0,0,60000); // รถถังนาวิกโยธิน CARID 149
	AddStaticVehicleEx(470,-1332.7529,442.2302,7.1791,270.0175,102,102,60000); // รถนาวิกโยธิน CARID 150
	AddStaticVehicleEx(470,-1332.8032,448.9958,7.1817,271.1644,102,102,60000); // รถนาวิกโยธิน CARID 151
	AddStaticVehicleEx(525,-1920.4657,303.2223,40.9278,180.4265,1,1,60000); // รถช่างซ่อมรถ CARID 152
	AddStaticVehicleEx(525,-1913.3898,303.6003,40.9217,180.7543,1,1,60000); // รถช่างซ่อมรถ CARID 153
	AddStaticVehicleEx(560,-1950.9736,258.3437,35.1797,92.4689,9,39,60000); //โชวรูม154
    AddStaticVehicleEx(567,-1951.2064,264.0283,35.3377,89.0141,114,1,60000); //โชวรูม155
    AddStaticVehicleEx(559,-1950.8136,268.5327,35.1224,88.0703,58,8,60000); //โชวรูม156
    //องกรณ์ลับ//
	AddStaticVehicleEx(411,-2251.9080,2336.1907,4.5396,90.8593,0,0,60000); //157
    AddStaticVehicleEx(411,-2251.6765,2332.8333,4.5396,90.8512,0,0,60000); //158
    AddStaticVehicleEx(451,-2251.4470,2330.0261,4.4375,90.7810,6,6,60000); //159
    AddStaticVehicleEx(451,-2251.4070,2326.9150,4.4376,88.4110,6,6,60000); //160
    AddStaticVehicleEx(490,-2271.7959,2336.2810,4.9411,269.2862,6,7,60000); //161
    AddStaticVehicleEx(490,-2271.8987,2333.3450,4.9431,269.4907,6,7,60000); //162
    AddStaticVehicleEx(427,-2271.4758,2327.2371,4.9482,270.6880,6,7,60000); //163
	//ทหาร//
	AddStaticVehicleEx(548,-1265.9447,495.8048,18.3116,222.5179,1,1,60000); // ฮอนาวิกโยธิน CARID 164
	AddStaticVehicleEx(519,-1526.6294,323.5086,54.3817,268.5189,-1,-1,60000); // เครื่องบินADMIN CARID 165
    AddStaticVehicle(599,-700.6741,948.1066,12.5356,180.0805,0,0); //FBI 166
    AddStaticVehicle(599,-704.5684,948.2009,12.5978,179.4211,0,0); //FBI 167
    AddStaticVehicle(473,-660.5010,875.0033,-0.3148,226.1785,0,0); //FBI 168
	AddStaticVehicleEx(582,-2052.2134,479.1331,35.2264,269.0424,1,93,60000); // รถนักข่าว CARID 169
	AddStaticVehicleEx(582,-2052.3079,487.8282,35.2315,270.2740,1,93,60000); // รถนักข่าว CARID 170
	AddStaticVehicleEx(488,-2030.1572,487.8879,36.0140,270.1383,93,1,60000); // ฮอนักข่าว CARID 171
	AddStaticVehicleEx(539,-1411.6044,492.5559,10.5556,358.4691,102,102,60000); // vortex นาวิกโยธิน CARID 172
	AddStaticVehicleEx(539,-1414.5328,492.6342,10.5556,358.4691,102,102,60000); // vortex นาวิกโยธิน CARID 173
	AddStaticVehicleEx(539,-1417.6559,492.7177,10.5556,358.4691,102,102,60000); // vortex นาวิกโยธิน CARID 174
	AddStaticVehicleEx(471,-1417.8983,517.5533,17.7232,179.7056,102,102,60000); // quad นาวิกโยธิน CARID 175
	AddStaticVehicleEx(471,-1411.1093,517.5186,17.7231,179.7056,102,102,60000); // quad นาวิกโยธิน CARID 176
	//องกรณ์ลับ//
    AddStaticVehicle(427,-2271.3513,2324.2742,4.9500,268.9250,6,7); //177
    AddStaticVehicle(432,-2258.4878,2288.3406,4.8439,359.3545,6,7); //178
    AddStaticVehicle(432,-2265.3997,2288.3743,4.8308,358.3875,6,7); //179
    AddStaticVehicle(497,-2227.9539,2324.5452,7.7017,0.8225,6,7); //180
    AddStaticVehicle(447,-2220.5085,2407.8962,0.7360,46.9058,6,7); //181
    AddStaticVehicle(493,-2232.5618,2386.7761,-0.1430,42.1649,6,7); //182
    AddStaticVehicle(425,-2229.8650,2290.3691,7.1912,359.4980,6,7); //183
    AddStaticVehicle(520,-2289.9534,2278.8093,5.9165,269.5286,6,7); //184
	//แก๊งประตูผี//
	AddStaticVehicle(480,-2517.1042,1229.1011,37.2038,208.6682,7,1); //185
    AddStaticVehicle(480,-2521.0920,1228.6111,37.2048,208.0027,7,1); //186
    AddStaticVehicle(480,-2525.2605,1228.5176,37.2011,210.6949,7,1); //187
    AddStaticVehicle(480,-2529.7368,1228.8369,37.2011,209.9821,7,1); //188
    AddStaticVehicle(468,-2522.1145,1214.2173,37.0958,273.0856,7,1); //189
    AddStaticVehicle(468,-2521.9067,1216.3320,37.0966,268.4395,7,1); //190
    AddStaticVehicle(468,-2522.0776,1215.1200,37.0912,264.8046,7,1); //191
    AddStaticVehicle(468,-2521.9626,1217.4482,37.0968,271.1584,7,1); //192
    AddStaticVehicle(468,-2522.1272,1218.5635,37.0970,272.8943,7,1); //193
    AddStaticVehicle(483,-2512.3459,1207.6445,37.4143,357.1980,7,1); //194
    AddStaticVehicle(483,-2507.5640,1207.4204,37.4229,357.2932,7,1); //195
	//-------------[รถตรเพิ่มเริ่ม]-------------------------
	AddStaticVehicle(432,-1573.1458,742.6913,-5.2381,90.5094,0,0); //รถถังต.ร.196
    AddStaticVehicle(432,-1573.0657,734.8320,-5.2380,90.5639,0,0); //รถถังต.ร 197
    AddStaticVehicle(430,-1474.3815,705.9692,-0.4053,302.7513,1,0); //198
    AddStaticVehicle(430,-1473.9171,696.7374,-0.1867,302.3359,1,0); //199
    AddStaticVehicle(430,-1474.3535,686.4534,-0.2796,304.2683,0,0); //200
    AddStaticVehicle(430,-1474.5636,714.8092,-0.2484,313.9881,0,0); //201
	//-------------[รถตรเพิ่มจบ]-------------------------
	//-------------[นายกเพิ่มเริ่ม]------------------------
    AddStaticVehicle(487,-2763.1855,347.5622,4.5977,183.3270,1,1); // นายก  202
    AddStaticVehicle(461,-2764.8601,396.0569,3.9675,269.9663,1,1); //มอไซนายก 203
    AddStaticVehicle(461,-2765.5515,355.2713,4.0080,269.3994,1,1); //มอไซนายก 204
    AddStaticVehicle(487,-2764.0630,406.7509,4.5684,357.0441,1,1); // นายก 205
    //-------------[นายกเพิ่มจบ]------------------------
    //-------------[FBIทหารเพิ่มเริ่ม]-------------------------
    AddStaticVehicle(473,-651.1897,870.6845,-0.2403,226.1511,0,0); //FBI 206
    AddStaticVehicle(497,-675.0406,951.4315,12.3095,87.6228,0,0); //FBI 207
    AddStaticVehicle(468,-1519.9063,492.7186,6.8414,88.7993,102,102); // 208
    AddStaticVehicle(468,-1519.8171,495.0156,6.8490,89.2851,102,102); //  209
    //-------------[FBIทหารเพิ่มจบ]-------------------------
    //--------------[hitmanเริ่ม]--------------------
    AddStaticVehicle(560,-2417.0144,528.6513,29.6352,238.4695,1,1); // sultan hit210
    AddStaticVehicle(560,-2415.6323,532.0893,29.6352,245.6675,1,1); // sultan hit211
    AddStaticVehicle(560,-2414.4072,535.9510,29.6336,258.7316,1,1); // sultan hit212
    AddStaticVehicle(560,-2413.8311,539.9047,29.6353,268.0098,1,1); // sultan hit213
    //--------------[hitmanจบ]--------------------
    //-------------มาเฟียเพิ่ม--------------------------
    AddStaticVehicle(521,-2736.4607,-294.7725,6.5790,224.7908,0,0); //214
    AddStaticVehicle(521,-2737.8469,-296.1486,6.5782,224.7908,0,0); //215
    AddStaticVehicle(521,-2739.4924,-297.7820,6.5773,224.7908,0,0); //216
    AddStaticVehicle(521,-2741.4167,-299.6919,6.5763,224.7908,0,0); //217
    AddStaticVehicle(483,-2761.9197,-296.5063,7.2105,298.8904,0,1); //218
	//-------------ยากูเพิ่ม----------------------------
    AddStaticVehicle(581,-2215.4878,637.5926,49.0469,180.9644,21,21); //219
    AddStaticVehicle(581,-2214.4382,637.6103,49.0452,180.9645,21,21); //220
    AddStaticVehicle(581,-2212.8997,637.6362,49.0427,180.9645,21,21); //221
    AddStaticVehicle(581,-2211.9719,637.6498,49.2612,180.9645,21,21); //222
    AddStaticVehicle(483,-2256.6089,668.7896,49.4760,355.2129,21,1); //223
    //---------------------เขียวเพิ่ม----------------------
    AddStaticVehicle(461,-2459.9778,-105.5796,25.5526,178.2931,86,86); //224
    AddStaticVehicle(461,-2466.9761,-93.4350,25.3062,270.2367,86,86); //225
    AddStaticVehicle(461,-2466.9568,-94.8024,25.3041,264.9913,86,86); //226
    AddStaticVehicle(461,-2457.4614,-96.2207,25.5758,88.1228,86,86); //227
    AddStaticVehicle(461,-2457.4731,-94.3088,25.5749,92.2543,86,86); //228
    //---------------------ม่วงเพิ่ม----------------------
    AddStaticVehicle(461,-2596.8083,304.9884,4.0193,352.3227,85,85); //229
    AddStaticVehicle(461,-2595.7446,304.8464,4.0721,352.3264,85,85); //230
    AddStaticVehicle(461,-2595.0679,304.7561,4.1057,352.3264,85,85); //231
    AddStaticVehicle(461,-2594.5125,304.6819,4.1332,352.3264,85,85); //232
    AddStaticVehicle(461,-2593.8357,304.5916,4.1668,352.3264,85,85); //233
    //---------------------ฟ้าเพิ่ม----------------------
    AddStaticVehicle(461,-1971.3324,1232.2782,31.3086,267.3849,100,100); //234
    AddStaticVehicle(461,-1967.0114,1232.4254,31.3165,269.7132,100,100); //235
    AddStaticVehicle(461,-1975.9047,1222.9871,31.3470,91.7306,100,100); //236
    AddStaticVehicle(461,-1939.7620,1192.9052,45.0229,177.8485,100,100); //237
    AddStaticVehicle(461,-1946.4224,1192.9066,45.0185,182.3949,100,100); //238
    //-------------------เหลืองเพิ่ม--------------------------
    AddStaticVehicle(461,-1884.6014,-138.3112,11.4832,262.2755,6,6); //239
    AddStaticVehicle(461,-1884.6932,-138.9885,11.4832,262.2755,6,6); //240
    AddStaticVehicle(461,-1884.7523,-139.4244,11.4832,262.2755,6,6); //241
    AddStaticVehicle(461,-1884.8280,-139.9820,11.4832,262.2755,6,6); //242
    AddStaticVehicle(461,-1884.9789,-141.0953,11.4832,262.2755,6,6); //243
    //-------------------showdonate-----------------------------
    AddStaticVehicle(541,-2031.4921,-54.8993,34.9757,179.9615,106,18); // 244
    AddStaticVehicle(522,-2029.0823,-56.7982,34.9028,180.7292,18,86); // 245
    AddStaticVehicle(502,-2026.8506,-56.4050,35.2350,176.3596,6,79); //  246
    //รถFinoจุดเกิด//
    AddStaticVehicle(462,-2640.3062,1332.7297,6.7961,182.3037,8,1); //247
    AddStaticVehicle(462,-2638.7703,1332.6686,6.7916,181.1083,7,1); //248
    AddStaticVehicle(462,-2637.0378,1332.6754,6.7945,182.3768,0,1); //249
    AddStaticVehicle(462,-2635.2703,1332.8510,6.7941,185.2977,6,1); //250
    AddStaticVehicle(462,-2633.8479,1333.0006,6.7947,185.1068,5,1); //251
    AddStaticVehicle(462,-2632.3391,1333.0017,6.7944,186.6232,3,1); //252
    //มอไซรับจ้างลีด 10 taxi //
    AddStaticVehicle(586,-2044.1881,8.1868,34.8482,90.7574,6,0); //253
    AddStaticVehicle(586,-2044.4006,9.6003,34.8481,91.7916,6,6); //254
    AddStaticVehicle(586,-2044.3127,11.5260,34.8481,88.6591,6,6); //255
    //เรือเช่า//
    AddStaticVehicle(484,-1632.4257,160.2621,0.4348,314.1775,0,0); //256
    AddStaticVehicle(484,-1721.9355,230.8135,0.1824,90.7744,0,0); //257
    AddStaticVehicle(484,-1656.3730,131.8384,0.0515,131.1835,0,0); //258
    AddStaticVehicle(484,-1710.1567,144.1711,0.2391,354.4370,0,0); //259
    AddStaticVehicle(484,-1710.8737,197.4584,0.2382,2.2258,0,0); //260
    //ทีมงานใต้ตึก//
    AddStaticVehicle(504,-1719.9490,1024.1451,17.3780,89.8261,79,79); //261
    AddStaticVehicle(504,-1719.8628,1028.5559,17.3784,89.6161,79,79); //262
    AddStaticVehicle(504,-1720.1475,1012.1198,17.3784,90.8193,79,79); //263
    AddStaticVehicle(504,-1720.0815,1007.2473,17.3784,91.6144,79,79); //234
    AddStaticVehicle(549,-1720.1833,1003.8201,17.2833,90.9517,79,1); //265
    AddStaticVehicle(549,-1719.7870,1032.4827,17.2831,89.8765,79,1); //266
    //Redblood
    AddStaticVehicle(491,-2155.2231,-195.0927,35.0766,179.0975,3,3); //267
    AddStaticVehicle(491,-2158.4246,-195.0440,35.0765,180.7553,3,3); //268
    AddStaticVehicle(483,-2174.2876,-219.4509,35.3127,357.5644,3,3); //269
    AddStaticVehicle(483,-2169.9749,-219.5281,35.3156,358.1667,3,3); //270
    AddStaticVehicle(463,-2185.8406,-206.6185,36.0560,262.8531,3,3); //271
    AddStaticVehicle(463,-2185.7104,-208.6685,36.0469,263.5408,3,3); //272
    AddStaticVehicle(463,-2186.1208,-210.5661,36.0561,256.9312,3,3); //273
    AddStaticVehicle(463,-2186.3071,-212.3208,36.0512,258.4220,3,3); //274
    AddStaticVehicle(567,-2166.5142,-219.4594,35.1913,357.5117,3,3); //275
    AddStaticVehicle(567,-2162.7488,-219.4862,35.1900,358.7448,3,3); //276
    //-----------------------+car in gate+---------------------------------
    AddStaticVehicle(522,-1973.9766,102.1279,27.2804,180.0886,1,3); //pDonate = 1 id  277
    AddStaticVehicle(522,-1972.0537,102.2625,27.2447,180.8385,1,3); //pDonate = 1 id  278
    AddStaticVehicle(522,-1970.5908,102.1323,27.2386,176.9932,1,3); //pDonate = 1 id  279
    AddStaticVehicle(522,-1969.1113,102.3651,27.2318,180.2842,1,3); //pDonate = 1 id  280
    AddStaticVehicle(506,-1965.6168,104.2090,27.3919,180.2502,1,1); //pDonate = 2 id 281
    AddStaticVehicle(506,-1963.1776,103.8827,27.3919,180.7883,1,1); //pDonate = 2 id 282
    AddStaticVehicle(411,-1972.7844,82.6720,27.4146,0.8183,0,0); //pDonate = 3 id 283
    AddStaticVehicle(411,-1970.0846,82.7454,27.4146,0.3628,0,0); //pDonate = 3 id 284
    AddStaticVehicle(451,-1962.8221,82.6578,27.3941,2.1858,6,6); //pDonate = 4 id 285
    AddStaticVehicle(451,-1965.4351,82.4858,27.3697,1.6319,6,6); //pDonate = 4 id 286
    AddStaticVehicle(560,-1978.8361,103.6683,27.3928,178.7323,0,0); //pDonate = 4 id 287
    
	if (realtime)
	{
		new tmphour;
		new tmpminute;
		new tmpsecond;
		gettime(tmphour, tmpminute, tmpsecond);
		FixHour(tmphour);
		tmphour = shifthour;
		SetWorldTime(tmphour);
	}
	//animcprhacktimer = SetTimer("cpranim", 500, 1);
	weaponhacktimer = SetTimer("CheckWeaponHack", 3000, 1);
	moneyhacktimer = SetTimer("CheckMoneyHack", 5000, 1);
	synctimer = SetTimer("SyncUp", 60000, 1);
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 30000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	spectatetimer = SetTimer("Spectator", 2000, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	accountstimer = SetTimer("SaveAccounts", 1800000, 1); //30 mins every account saved
	checkgastimer = SetTimer("CheckGas", RunOutTime, 1);
    stoppedvehtimer = SetTimer("StoppedVehicle", RunOutTime, 1);
	//for(new i = 0; i < sizeof(CarSpawns); i++)
	for(new i = 0; i < 165; i++)
	{
	}
	CarInit();
	return 1;
}

public SyncUp()
{
	SyncTime();
	DollahScoreUpdate();
}

public SyncTime()
{
	new string[64];
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		format(string, sizeof(string), "SERVER: ขณะนี้เวลา %d.00 น.",tmphour);
		BroadCast(COLOR_WHITE,string);
		ghour = tmphour;
		PayDay();
		if (realtime)
		{
			SetWorldTime(tmphour);
		}
	}
}

public SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			OnPlayerUpdate(i);
			if(PlayerInfo[i][pJob] > 0)
	    	{
	    	    if(PlayerInfo[i][pContractTime] < 25)
	    	    {
					PlayerInfo[i][pContractTime] ++;
				}
	    	}
		}
	}
}

public IsPlayerInTurf(playerid, turfid)
{
	if(IsPlayerConnected(playerid))
	{
		if(turfid == -1)
		{
			return 0;
		}
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid,x,y,z);
		if(x >= TurfInfo[turfid][zMinX] && x < TurfInfo[turfid][zMaxX] && y >= TurfInfo[turfid][zMinY] && y < TurfInfo[turfid][zMaxY])
		{
	 		return 1;
		}
	}
	return 0;
}

public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}

public Production()
{
	new string[256];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pFishes] >= 5) { if(FishCount[i] >= 3) { PlayerInfo[i][pFishes] = 0; } else { FishCount[i] += 1; } }
		    if(PlayerDrunk[i] > 0) { PlayerDrunk[i] = 0; PlayerDrunkTime[i] = 0; GameTextForPlayer(i, "~p~Drunk effect~n~~w~Gone", 3500, 1); }
		    if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; } //+ 5 min to PayDay anti-abuse
		    for(new k = 0; k < MAX_PLAYERS; k++)
			{
				if(IsPlayerConnected(k))
				{
				    if(gTeam[k] == 2 && CrimInRange(80.0, i,k))
				    {
					}
					else
					{
					    WantedPoints[i] -= 3;
					    if(WantedPoints[i] < 0) { WantedPoints[i] = 0; }
					    new points = WantedPoints[i];
					    new wlevel;
					    if(points > 0)
						{
						    new yesno;
							if(points == 999) { if(WantedLevel[i] != 1) { WantedLevel[i] = 1; wlevel = 1; yesno = 1; } }
							else if(points >= 999 && points <= 999) { if(WantedLevel[i] != 2) { WantedLevel[i] = 2; wlevel = 2; yesno = 1; } }
							else if(points >= 999 && points <= 999) { if(WantedLevel[i] != 3) { WantedLevel[i] = 3; wlevel = 3; yesno = 1; } }
							else if(points >= 999 && points <= 999) { if(WantedLevel[i] != 4) { WantedLevel[i] = 4; wlevel = 4; yesno = 1; } }
							else if(points >= 999 && points <= 999) { if(WantedLevel[i] != 5) { WantedLevel[i] = 5; wlevel = 5; yesno = 1; } }
							else if(points >= 999 && points <= 999) { if(WantedLevel[i] != 6) { WantedLevel[i] = 6; wlevel = 6; yesno = 1; } }
							else if(points >= 999) { if(WantedLevel[i] != 10) { WantedLevel[i] = 10; wlevel = 10; yesno = 1; } }
							else if(points <= 0) { if(WantedLevel[i] != 0) { ClearCrime(i); WantedLevel[i] = 0; wlevel = 0; yesno = 1;} }
							if(yesno)
							{
								format(string, sizeof(string), " ความต้องการตัวในปัจจุบัน: %d", wlevel);
								SendClientMessage(i, COLOR_YELLOW, string);
								SetPlayerStar(i);
							}
						}
					}
				}
			}
		}
	}
}

public DateProp(playerid)
{
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if (strcmp(playername, HouseInfo[h][hOwner], true) == 0)
		{
			HouseInfo[h][hDate] = curdate;
			OnPropUpdate();
		}
	}
	return 1;
}

public Checkprop()
{
	new olddate;
	new string[256];
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] > 9)
		{
			olddate = HouseInfo[h][hDate];
			if(curdate-olddate >= 5)
			{
				HouseInfo[h][hHel] = 0;
				HouseInfo[h][hArm] = 0;
				HouseInfo[h][hHealthx] = 0;
				HouseInfo[h][hHealthy] = 0;
				HouseInfo[h][hHealthz] = 0;
				HouseInfo[h][hArmourx] = 0;
				HouseInfo[h][hArmoury] = 0;
				HouseInfo[h][hArmourz] = 0;
				HouseInfo[h][hLock] = 1;
				HouseInfo[h][hOwned] = 0;
				HouseInfo[h][hVec] = 418;
				HouseInfo[h][hVcol1] = -1;
				HouseInfo[h][hVcol2] = -1;
				strmid(HouseInfo[h][hOwner], "The State", 0, strlen("The State"), 255);
				format(string, sizeof(string), "REAL ESTATE: A House is available at a value of $%d",HouseInfo[h][hValue]);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				OnPropUpdate();
			}
		}
	}
	return 1;
}

public PayDay()
{
	new string[128];
	new account,interest;
	new rent = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
				new playername2[MAX_PLAYER_NAME];
				new nxtlevel = PlayerInfo[i][pLevel]+1;
				new expamount = nxtlevel*levelexp;
				new infostring[256];
				GetPlayerName(i, playername2, sizeof(playername2));
				account = PlayerInfo[i][pAccount];
				new key = PlayerInfo[i][pPhousekey];
				if(key != 255)
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > ScriptMoney[i])
					{
						PlayerInfo[i][pPhousekey] = 255;
						SendClientMessage(i, COLOR_WHITE, " คุณไม่มีเงินค่าเช่าบ้านดังนั้นคุณต้องออกจากบ้านเช่า");
						rent = 0;
					}
					HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
				}
				new tmpintrate;
				if (key != 255 && strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
				{
				    if(PlayerInfo[i][pDonateRank] > 0) { tmpintrate = intrate+4; }
					else { tmpintrate = intrate+2; }//HouseInfo[key][hLevel]
				}
				else
				{
				    if(PlayerInfo[i][pDonateRank] > 0) { tmpintrate = 3; }
					else { tmpintrate = 1; }
				}
				if(PlayerInfo[i][pPayDay] >= 5)
				{
				    Tax += TaxValue;//Should work for every player online
				    PlayerInfo[i][pAccount] -= TaxValue;
				    if(PlayerInfo[i][pDonateRank] > 0)
					{
					    new bonus = PlayerInfo[i][pPayCheck] / 2;
					    PlayerInfo[i][pPayCheck] += bonus;
					}
					new checks = PlayerInfo[i][pPayCheck];
				    new ebill = (PlayerInfo[i][pAccount]/10000)*(PlayerInfo[i][pLevel]);
				    ConsumingMoney[i] = 1;
				    SafeGivePlayerMoney(i, checks);
				    if(PlayerInfo[i][pAccount] > 0)
				    {
				    	PlayerInfo[i][pAccount] -= ebill;
				    	SBizzInfo[4][sbTill] += ebill;
					}
					else
					{
					    ebill = 0;
					}
					interest = (PlayerInfo[i][pAccount]/1000)*(tmpintrate);
					PlayerInfo[i][pExp] += expx;
					PlayerPlayMusic(i);
					PlayerInfo[i][pAccount] = account+interest;
					SendClientMessage(i, COLOR_WHITE, "|___ ธนาคาร ___|");
					format(string, sizeof(string), "  เงิน Payday: $%d   ภาษี: -$%d", checks, TaxValue);
					SendClientMessage(i, COLOR_GRAD1, string);
					if(PlayerInfo[i][pPhousekey] != 255 || PlayerInfo[i][pPbiskey] != 255)
					{
					    format(string, sizeof(string), "  ค่าไฟฟ้า: -$%d", ebill);
						SendClientMessage(i, COLOR_GRAD1, string);
					}
					format(string, sizeof(string), "  ยอดเงินในบัญชี: $%d", account);
					SendClientMessage(i, COLOR_GRAD1, string);
					format(string, sizeof(string), "  อัตราดอกเบี้ย: 0.%d percent",tmpintrate);
					SendClientMessage(i, COLOR_GRAD2, string);
					format(string, sizeof(string), "  ดอกเบี้ยทีได้รับ $%d", interest);
					SendClientMessage(i, COLOR_GRAD3, string);
					SendClientMessage(i, COLOR_GRAD4, "|--------------------------------------|");
					format(string, sizeof(string), "  ยอดเงินในบัญชีใหม่: $%d", PlayerInfo[i][pAccount]);
					SendClientMessage(i, COLOR_GRAD5, string);
					format(string, sizeof(string), "  ค่าเช่า: -$%d", rent);
					SendClientMessage(i, COLOR_GRAD5, string);
					format(string, sizeof(string), "~y~PayDay~n~~w~Paycheck");
					GameTextForPlayer(i, string, 5000, 1);
					rent = 0;
					PlayerInfo[i][pPayDay] = 0;
					PlayerInfo[i][pPayCheck] = 0;
					PlayerInfo[i][pConnectTime] += 1;
					if(PlayerInfo[i][pExp] >= expamount)
					{
						format(string, sizeof(string), "~g~LEVEL UP~n~~w~You Are Now Level %d", nxtlevel);
						GameTextForPlayer(i, string, 5000, 1);
						PlayerPlaySound(i, 1052, 0.0, 0.0, 0.0);
						PlayerPlayMusic(i);
						PlayerInfo[i][pLevel]++;
						PlayerInfo[i][gPupgrade] = PlayerInfo[i][gPupgrade]+2;
						format(infostring, 256, "* ดีใจด้วย! คุณเลเวล %d แล้ว",PlayerInfo[i][pLevel]);
						SendClientMessage(i, COLOR_GRAD2, infostring);
						format(infostring, 256, "* คุณมีค่าอัพเกรดอยู่ %d พอยด์ (พิมพ์ /upgrade เพื่ออัพเกรด)",PlayerInfo[i][gPupgrade]);
						SendClientMessage(i, COLOR_GRAD2, infostring);
						if(PlayerInfo[i][pDonateRank] > 0)
						{
						    PlayerInfo[i][pExp] -= expamount;
						    new total = PlayerInfo[i][pExp];
						    if(total > 0)
						    {
						        PlayerInfo[i][pExp] = total;
						    }
						    else
						    {
						        PlayerInfo[i][pExp] = 0;
						    }
						}
						else
						{
							PlayerInfo[i][pExp] = 0;
						}
					}
					if(PlayerInfo[i][pDonateRank] > 0)
					{
					    PlayerInfo[i][pPayDayHad] += 1;
					    if(PlayerInfo[i][pPayDayHad] >= 5)
					    {
					        PlayerInfo[i][pExp] += expx;
					        PlayerInfo[i][pPayDayHad] = 0;
					    }
					}
				}
				else
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "* คุณเล่นไม่นานพอที่จะได้ Payday");
				}
			}
		}
	}
	Checkprop();
	return 1;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}

public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}

public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
			new string3[32];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
			    strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
			    new var[32];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = ScriptMoney[playerid];
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pDonateRank]);fwrite(hFile, var);
				format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Carkey=%d\n",PlayerInfo[playerid][pPcarkey]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Age=%d\n",PlayerInfo[playerid][pAge]);fwrite(hFile, var);
				format(var, 32, "Origin=%d\n",PlayerInfo[playerid][pOrigin]);fwrite(hFile, var);
				format(var, 32, "CK=%d\n",PlayerInfo[playerid][pCK]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pAccount]);fwrite(hFile, var);
				format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "Arrested=%d\n",PlayerInfo[playerid][pArrested]);fwrite(hFile, var);
				format(var, 32, "WantedDeaths=%d\n",PlayerInfo[playerid][pWantedDeaths]);fwrite(hFile, var);
				format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Fishes=%d\n",PlayerInfo[playerid][pFishes]);fwrite(hFile, var);
				format(var, 32, "BiggestFish=%d\n",PlayerInfo[playerid][pBiggestFish]);fwrite(hFile, var);
				format(var, 32, "Job=%d\n",PlayerInfo[playerid][pJob]);fwrite(hFile, var);
				format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pPayCheck]);fwrite(hFile, var);
				format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Materials=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Drugs=%d\n",PlayerInfo[playerid][pDrugs]);fwrite(hFile, var);
				format(var, 32, "Leader=%d\n",PlayerInfo[playerid][pLeader]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMember]);fwrite(hFile, var);
				format(var, 32, "FMember=%d\n",PlayerInfo[playerid][pFMember]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pRank]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pChar]);fwrite(hFile, var);
				format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
				format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
				format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
				format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
				format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
				format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
				format(var, 32, "JackSkill=%d\n",PlayerInfo[playerid][pJackSkill]);fwrite(hFile, var);
				format(var, 32, "CarSkill=%d\n",PlayerInfo[playerid][pCarSkill]);fwrite(hFile, var);
				format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
				format(var, 32, "DrugsSkill=%d\n",PlayerInfo[playerid][pDrugsSkill]);fwrite(hFile, var);
				format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
				format(var, 32, "FishSkill=%d\n",PlayerInfo[playerid][pFishSkill]);fwrite(hFile, var);
				format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
	            GetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);
				format(var, 32, "pHealth=%.1f\n",PlayerInfo[playerid][pHealth]);fwrite(hFile, var);
				format(var, 32, "Int=%d\n",PlayerInfo[playerid][pInt]);fwrite(hFile, var);
				format(var, 32, "Local=%d\n",PlayerInfo[playerid][pLocal]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "Model=%d\n",PlayerInfo[playerid][pModel]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPhousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
				{
					PlayerInfo[playerid][pPos_x] = 1.7308;
					PlayerInfo[playerid][pPos_y] = 31.5672;
					PlayerInfo[playerid][pPos_z] = 1199.6012;
				}
				if(Spectate[playerid] != 255)
				{
					PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
					PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
					PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
					PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
					PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				}
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "FishLic=%d\n",PlayerInfo[playerid][pFishLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "Gun1=%d\n",PlayerInfo[playerid][pGun1]);fwrite(hFile, var);
				format(var, 32, "Gun2=%d\n",PlayerInfo[playerid][pGun2]);fwrite(hFile, var);
				format(var, 32, "Gun3=%d\n",PlayerInfo[playerid][pGun3]);fwrite(hFile, var);
				format(var, 32, "Gun4=%d\n",PlayerInfo[playerid][pGun4]);fwrite(hFile, var);
				format(var, 32, "Ammo1=%d\n",PlayerInfo[playerid][pAmmo1]);fwrite(hFile, var);
				format(var, 32, "Ammo2=%d\n",PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 32, "Ammo3=%d\n",PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 32, "Ammo4=%d\n",PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 32, "CarTime=%d\n",PlayerInfo[playerid][pCarTime]);fwrite(hFile, var);
				format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 32, "PayDayHad=%d\n",PlayerInfo[playerid][pPayDayHad]);fwrite(hFile, var);
				format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
				format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
				format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
				format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
				format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
				format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
				format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
				format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "Mission=%d\n",PlayerInfo[playerid][pMissionNr]);fwrite(hFile, var);
				format(var, 32, "Warnings=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
				format(var, 32, "Adjustable=%d\n",PlayerInfo[playerid][pAdjustable]);fwrite(hFile, var);
				format(var, 32, "Fuel=%d\n",PlayerInfo[playerid][pFuel]);fwrite(hFile, var);
				format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
				format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
				fclose(hFile);
				SendClientMessage(playerid, COLOR_YELLOW, "SERVER: โปรดอ่าน");
				SendClientMessage(playerid, 0xFF0000FF, "SERVER: เกมส์นี้เหมาะสำหรับผู้เล่นที่มีอายุ 17 ปีขึ้นไป");
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: ตัวละครในเกมส์ถูกควบคุมด้วยมนุษย์ด้วยกัน ดังนั้นนี้คือสังคมจำลอง โปรดใช้สติในการเล่นเกมส์");
				SendClientMessage(playerid, COLOR_YELLOW, "SERVER: กรุณารอสักครู่.....");
                new loginstring[128];
                new loginname[64];
                GetPlayerName(playerid,loginname,sizeof(loginname));
                format(loginstring,sizeof(loginstring),"Welcome, %s\nYou can now login:",loginname);
                ShowPlayerDialog(playerid,12346,DIALOG_STYLE_INPUT,"Login",loginstring,"Login","Exit");
			}
	}
	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid])
		{
			new string3[32];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = ScriptMoney[playerid];
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pDonateRank]);fwrite(hFile, var);
				format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Carkey=%d\n",PlayerInfo[playerid][pPcarkey]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Age=%d\n",PlayerInfo[playerid][pAge]);fwrite(hFile, var);
				format(var, 32, "Origin=%d\n",PlayerInfo[playerid][pOrigin]);fwrite(hFile, var);
				format(var, 32, "CK=%d\n",PlayerInfo[playerid][pCK]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pAccount]);fwrite(hFile, var);
				format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "Arrested=%d\n",PlayerInfo[playerid][pArrested]);fwrite(hFile, var);
				format(var, 32, "WantedDeaths=%d\n",PlayerInfo[playerid][pWantedDeaths]);fwrite(hFile, var);
				format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Fishes=%d\n",PlayerInfo[playerid][pFishes]);fwrite(hFile, var);
				format(var, 32, "BiggestFish=%d\n",PlayerInfo[playerid][pBiggestFish]);fwrite(hFile, var);
				format(var, 32, "Job=%d\n",PlayerInfo[playerid][pJob]);fwrite(hFile, var);
				format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pPayCheck]);fwrite(hFile, var);
				format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Materials=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Drugs=%d\n",PlayerInfo[playerid][pDrugs]);fwrite(hFile, var);
				format(var, 32, "Leader=%d\n",PlayerInfo[playerid][pLeader]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMember]);fwrite(hFile, var);
				format(var, 32, "FMember=%d\n",PlayerInfo[playerid][pFMember]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pRank]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pChar]);fwrite(hFile, var);
				format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
				format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
				format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
				format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
				format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
				format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
				format(var, 32, "JackSkill=%d\n",PlayerInfo[playerid][pJackSkill]);fwrite(hFile, var);
				format(var, 32, "CarSkill=%d\n",PlayerInfo[playerid][pCarSkill]);fwrite(hFile, var);
				format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
				format(var, 32, "DrugsSkill=%d\n",PlayerInfo[playerid][pDrugsSkill]);fwrite(hFile, var);
				format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
				format(var, 32, "FishSkill=%d\n",PlayerInfo[playerid][pFishSkill]);fwrite(hFile, var);
				format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
	            GetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]);
				format(var, 32, "pHealth=%.1f\n",PlayerInfo[playerid][pHealth]);fwrite(hFile, var);
				format(var, 32, "Int=%d\n",PlayerInfo[playerid][pInt]);fwrite(hFile, var);
				format(var, 32, "Local=%d\n",PlayerInfo[playerid][pLocal]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "Model=%d\n",PlayerInfo[playerid][pModel]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPhousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
				{
					PlayerInfo[playerid][pPos_x] = 1.7308;
					PlayerInfo[playerid][pPos_y] = 31.5672;
					PlayerInfo[playerid][pPos_z] = 1199.6012;
				}
				if(Spectate[playerid] != 255)
				{
					PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
					PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
					PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
					PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
					PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				}
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "FishLic=%d\n",PlayerInfo[playerid][pFishLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "Gun1=%d\n",PlayerInfo[playerid][pGun1]);fwrite(hFile, var);
				format(var, 32, "Gun2=%d\n",PlayerInfo[playerid][pGun2]);fwrite(hFile, var);
				format(var, 32, "Gun3=%d\n",PlayerInfo[playerid][pGun3]);fwrite(hFile, var);
				format(var, 32, "Gun4=%d\n",PlayerInfo[playerid][pGun4]);fwrite(hFile, var);
				format(var, 32, "Ammo1=%d\n",PlayerInfo[playerid][pAmmo1]);fwrite(hFile, var);
				format(var, 32, "Ammo2=%d\n",PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 32, "Ammo3=%d\n",PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 32, "Ammo4=%d\n",PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 32, "CarTime=%d\n",PlayerInfo[playerid][pCarTime]);fwrite(hFile, var);
				format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 32, "PayDayHad=%d\n",PlayerInfo[playerid][pPayDayHad]);fwrite(hFile, var);
				format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
				format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
				format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
				format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
				format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
				format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
				format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
				format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "Mission=%d\n",PlayerInfo[playerid][pMissionNr]);fwrite(hFile, var);
				format(var, 32, "Warnings=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
				format(var, 32, "Adjustable=%d\n",PlayerInfo[playerid][pAdjustable]);fwrite(hFile, var);
				if(PlayerInfo[playerid][pDonateRank] < 1) { PlayerInfo[playerid][pFuel] = 0; }
				format(var, 32, "Fuel=%d\n",PlayerInfo[playerid][pFuel]);fwrite(hFile, var);
				format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
				format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
				fclose(hFile);
			}
		}
	}
	return 1;
}

public OnPlayerLogin(playerid,password[])
{
	new tmp2[256];
    new string2[64];
	new playername2[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername2, sizeof(playername2));
	format(string2, sizeof(string2), "%s.ini", playername2);
	new File: UserFile = fopen(string2, io_read);
	if ( UserFile )
	{
	    new PassData[256];
	    new keytmp[256], valtmp[256];
	    fread( UserFile , PassData , sizeof( PassData ) );
	    keytmp = ini_GetKey( PassData );
	    if( strcmp( keytmp , "Key" , true ) == 0 )
		{
			valtmp = ini_GetValue( PassData );
			strmid(PlayerInfo[playerid][pKey], valtmp, 0, strlen(valtmp)-1, 255);
		}
		if(strcmp(PlayerInfo[playerid][pKey],password, true ) == 0 )
		{
			new key[ 256 ] , val[ 256 ];
			new Data[ 256 ];
			while ( fread( UserFile , Data , sizeof( Data ) ) )
			{
				key = ini_GetKey( Data );
				if( strcmp( key , "Level" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLevel] = strval( val ); }
				if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
			    if( strcmp( key , "DonateRank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDonateRank] = strval( val ); }
			    if( strcmp( key , "UpgradePoints" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][gPupgrade] = strval( val ); }
			    if( strcmp( key , "ConnectedTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConnectTime] = strval( val ); }
			    if( strcmp( key , "Carkey" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPcarkey] = strval( val ); }
			    if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
			    if( strcmp( key , "Sex" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSex] = strval( val ); }
			    if( strcmp( key , "Age" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAge] = strval( val ); }
			    if( strcmp( key , "Origin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pOrigin] = strval( val ); }
			    if( strcmp( key , "CK" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCK] = strval( val ); }
			    if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
			    if( strcmp( key , "Respect" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pExp] = strval( val ); }
			    if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCash] = strval( val ); }
			    if( strcmp( key , "Bank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAccount] = strval( val ); }
			    if( strcmp( key , "Crimes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCrimes] = strval( val ); }
			    if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
			    if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
			    if( strcmp( key , "Arrested" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pArrested] = strval( val ); }
			    if( strcmp( key , "WantedDeaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWantedDeaths] = strval( val ); }
			    if( strcmp( key , "Phonebook" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneBook] = strval( val ); }
			    if( strcmp( key , "LottoNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLottoNr] = strval( val ); }
			    if( strcmp( key , "Fishes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishes] = strval( val ); }
			    if( strcmp( key , "BiggestFish" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBiggestFish] = strval( val ); }
			    if( strcmp( key , "Job" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJob] = strval( val ); }
			    if( strcmp( key , "Paycheck" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayCheck] = strval( val ); }
			    if( strcmp( key , "HeadValue" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHeadValue] = strval( val ); }
			    if( strcmp( key , "Jailed" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailed] = strval( val ); }
			    if( strcmp( key , "JailTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailTime] = strval( val ); }
			    if( strcmp( key , "Materials" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMats] = strval( val ); }
			    if( strcmp( key , "Drugs" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugs] = strval( val ); }
			    if( strcmp( key , "Leader" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLeader] = strval( val ); }
			    if( strcmp( key , "Member" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMember] = strval( val ); }
			    if( strcmp( key , "FMember" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFMember] = strval( val ); }
			    if( strcmp( key , "Rank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRank] = strval( val ); }
			    if( strcmp( key , "Char" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pChar] = strval( val ); }
			    if( strcmp( key , "ContractTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pContractTime] = strval( val ); }
			    if( strcmp( key , "DetSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDetSkill] = strval( val ); }
			    if( strcmp( key , "SexSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSexSkill] = strval( val ); }
			    if( strcmp( key , "BoxSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoxSkill] = strval( val ); }
			    if( strcmp( key , "LawSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLawSkill] = strval( val ); }
			    if( strcmp( key , "MechSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMechSkill] = strval( val ); }
			    if( strcmp( key , "JackSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJackSkill] = strval( val ); }
			    if( strcmp( key , "CarSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarSkill] = strval( val ); }
			    if( strcmp( key , "NewsSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNewsSkill] = strval( val ); }
			    if( strcmp( key , "DrugsSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugsSkill] = strval( val ); }
			    if( strcmp( key , "CookSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCookSkill] = strval( val ); }
			    if( strcmp( key , "FishSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishSkill] = strval( val ); }
			    if( strcmp( key , "pSHealth" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSHealth] = floatstr( val ); }
			    if( strcmp( key , "pHealth" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHealth] = floatstr( val ); }
			    if( strcmp( key , "Int" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pInt] = strval( val ); }
			    if( strcmp( key , "Local" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLocal] = strval( val ); }
			    if( strcmp( key , "Team" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTeam] = strval( val ); }
			    if( strcmp( key , "Model" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pModel] = strval( val ); }
			    if( strcmp( key , "PhoneNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPnumber] = strval( val ); }
			    if( strcmp( key , "House" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhousekey] = strval( val ); }
			    if( strcmp( key , "Bizz" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPbiskey] = strval( val ); }
			    if( strcmp( key , "Pos_x" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_x] = floatstr( val ); }
			    if( strcmp( key , "Pos_y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_y] = floatstr( val ); }
			    if( strcmp( key , "Pos_z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_z] = floatstr( val ); }
			    if( strcmp( key , "CarLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarLic] = strval( val ); }
        	    if( strcmp( key , "FlyLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFlyLic] = strval( val ); }
				if( strcmp( key , "BoatLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoatLic] = strval( val ); }
			    if( strcmp( key , "FishLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishLic] = strval( val ); }
			    if( strcmp( key , "GunLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGunLic] = strval( val ); }
			    if( strcmp( key , "Gun1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun1] = strval( val ); }
			    if( strcmp( key , "Gun2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun2] = strval( val ); }
			    if( strcmp( key , "Gun3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun3] = strval( val ); }
			    if( strcmp( key , "Gun4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun4] = strval( val ); }
			    if( strcmp( key , "Ammo1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo1] = strval( val ); }
			    if( strcmp( key , "Ammo2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo2] = strval( val ); }
			    if( strcmp( key , "Ammo3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo3] = strval( val ); }
			    if( strcmp( key , "Ammo4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo4] = strval( val ); }
			    if( strcmp( key , "CarTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarTime] = strval( val ); }
			    if( strcmp( key , "PayDay" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayDay] = strval( val ); }
			    if( strcmp( key , "PayDayHad" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayDayHad] = strval( val ); }
			    if( strcmp( key , "CDPlayer" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCDPlayer] = strval( val ); }
			    if( strcmp( key , "Wins" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWins] = strval( val ); }
			    if( strcmp( key , "Loses" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLoses] = strval( val ); }
			    if( strcmp( key , "AlcoholPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAlcoholPerk] = strval( val ); }
			    if( strcmp( key , "DrugPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugPerk] = strval( val ); }
			    if( strcmp( key , "MiserPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMiserPerk] = strval( val ); }
			    if( strcmp( key , "PainPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPainPerk] = strval( val ); }
			    if( strcmp( key , "TraderPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTraderPerk] = strval( val ); }
			    if( strcmp( key , "Tutorial" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTut] = strval( val ); }
			    if( strcmp( key , "Mission" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMissionNr] = strval( val ); }
			    if( strcmp( key , "Warnings" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWarns] = strval( val ); }
			    if( strcmp( key , "Adjustable" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdjustable] = strval( val ); }
			    if( strcmp( key , "Fuel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFuel] = strval( val ); }
			    if( strcmp( key , "Married" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMarried] = strval( val ); }
			    if( strcmp( key , "MarriedTo" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pMarriedTo], val, 0, strlen(val)-1, 255); }
			    if( strcmp( key , "Robber" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pRobber] = strval( val ); }
        	}//end while
        	fclose(UserFile);//close the file after everything has been read in the while
		}
		else
		{
			new loginstring[128];
			new loginname[64];
			GetPlayerName(playerid,loginname,sizeof(loginname));
			format(loginstring,sizeof(loginstring),"WRONG PASSWORD\nPlease enter the correct password:",loginname);
			ShowPlayerDialog(playerid,12347,DIALOG_STYLE_INPUT,"Login",loginstring,"Login","Exit");
			fclose(UserFile);
			gPlayerLogTries[playerid] += 1;
			if(gPlayerLogTries[playerid] == 4) { Ban(playerid); }
			return 1;
		}
      	fclose(UserFile);//close the file after everything has been read in the while
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "SERVER: พาสเวิร์ดของคุณไม่ถูกต้อง");
	    fclose(UserFile);
	    gPlayerLogTries[playerid] += 1;
	    if(gPlayerLogTries[playerid] == 4) { Ban(playerid); }
	    return 1;
	}
	PlayerInfo[playerid][pAdjustable] = 0;
	SafeResetPlayerMoney(playerid);
	ConsumingMoney[playerid] = 1;
	SafeGivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
	if(PlayerInfo[playerid][pReg] == 0)
	{
		PlayerInfo[playerid][pLevel] = 1;
		PlayerInfo[playerid][pSHealth] = 0.0;
		PlayerInfo[playerid][pHealth] = 50.0;
		PlayerInfo[playerid][pPos_x] = -1422.4041;
		PlayerInfo[playerid][pPos_y] = -288.3340;
		PlayerInfo[playerid][pPos_z] = 14.1484;
		PlayerInfo[playerid][pInt] = 15;
		PlayerInfo[playerid][pPcarkey] = 999;
		PlayerInfo[playerid][pLocal] = 255;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pModel] = 250;
		PlayerInfo[playerid][pPhousekey] = 255;
		PlayerInfo[playerid][pPbiskey] = 255;
		PlayerInfo[playerid][pAccount] = 50000;
		PlayerInfo[playerid][pReg] = 1;
		SafeGivePlayerMoney(playerid, 5000);
	}
	if(PlayerInfo[playerid][pLevel] == -999) //autoban
	{
		Ban(playerid);
	}
	else if(PlayerInfo[playerid][pCK] > 0)
	{
	    Kick(playerid);
	}
	format(string2, sizeof(string2), "SERVER: ยินดีต้อนรับคุณ %s",playername2);
	SendClientMessage(playerid, 0x1AA8F6AA,string2);
	printf("%s has logged in.",playername2);
	if (PlayerInfo[playerid][pDonateRank] == 1)
	{
		SendClientMessage(playerid, 0xFF6347AA,"SERVER: คุณเป็น KNOWLEDGE แอคเค้าท์เพราะคุณได้บริจากให้กับเซิบเวอร์");
	}
	if (PlayerInfo[playerid][pDonateRank] == 2)
	{
		SendClientMessage(playerid, 0x516E6DAA,"SERVER: คุณเป็น SILVER แอคเค้าท์เพราะคุณได้บริจากให้กับเซิบเวอร์");
	}
	if (PlayerInfo[playerid][pDonateRank] == 3)
	{
		SendClientMessage(playerid, 0xF6C000AA,"SERVER: คุณเป็น GOLD แอคเค้าท์เพราะคุณได้บริจากให้กับเซิบเวอร์");
	}
	if (PlayerInfo[playerid][pDonateRank] == 4)
	{
		SendClientMessage(playerid, 0xF60054AA,"SERVER: คุณเป็น PLATINUM แอคเค้าท์เพราะคุณได้บริจากให้กับเซิบเวอร์");
	}
	if (PlayerInfo[playerid][pAdmin] > 1)
	{
		format(string2, sizeof(string2), "SERVER: คุณล็อกอินโดยเป็น Admin เลเวล %d",PlayerInfo[playerid][pAdmin]);
		SendClientMessage(playerid, 0x1AA8F6AA,string2);
	}
	SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
	if(gTeam[playerid] == 0)
	{
		gTeam[playerid] = 3;
	}
	else
	{
		gTeam[playerid] = PlayerInfo[playerid][pTeam];
	}
	gPlayerLogged[playerid] = 1;
	SpawnPlayer(playerid);
	format(tmp2, sizeof(tmp2), "~w~Welcome ~n~~y~   %s", playername2);
	DateProp(playerid);
	GameTextForPlayer(playerid, tmp2, 5000, 1);
	SendClientMessage(playerid, COLOR_YELLOW, motd);
	if(PlayerInfo[playerid][pPcarkey] != 999)
	{
		GetCar(playerid);
	}
	if(PlayerInfo[playerid][pFMember] < 255)
	{
	    format(tmp2, sizeof(tmp2), "Family MOTD: %s.", FamilyInfo[PlayerInfo[playerid][pFMember]][FamilyMOTD]);
	    SendClientMessage(playerid, COLOR_YELLOW, tmp2);
	}
	return 1;
}
stock ini_GetKey( line[] )
{
	new keyRes[256];
	keyRes[0] = 0;
    if ( strfind( line , "=" , true ) == -1 ) return keyRes;
    strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
    return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[256];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}

public OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hHealthx],
		HouseInfo[idx][hHealthy],
		HouseInfo[idx][hHealthz],
		HouseInfo[idx][hArmourx],
		HouseInfo[idx][hArmoury],
		HouseInfo[idx][hArmourz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hDiscription],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hArm],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hDate],
		HouseInfo[idx][hLevel]);
		if(idx == 0)
		{
			file2 = fopen("property.cfg", io_write);
		}
		else
		{
			file2 = fopen("property.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior],
		BizzInfo[idx][bProducts],
		BizzInfo[idx][bMaxProducts],
		BizzInfo[idx][bPriceProd]);
		if(idx == 0)
		{
			file2 = fopen("bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
 	while (idx < sizeof(CarInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d,%f,%f,%f,%f,%d,%d,%s,%s,%d,%s,%d,%d\n",
		CarInfo[idx][cModel],//
		CarInfo[idx][cLocationx],//
		CarInfo[idx][cLocationy],//
		CarInfo[idx][cLocationz],//
		CarInfo[idx][cAngle],//
		CarInfo[idx][cColorOne],//
		CarInfo[idx][cColorTwo],//
		CarInfo[idx][cOwner],//
		CarInfo[idx][cDescription],//
		CarInfo[idx][cValue],//
		CarInfo[idx][cLicense],//
		CarInfo[idx][cOwned],//
		CarInfo[idx][cLock]);
		if(idx == 0)
		{
			file2 = fopen("cars.cfg", io_write);
		}
		else
		{
			file2 = fopen("cars.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbExtortion],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked],
		SBizzInfo[idx][sbInterior],
		SBizzInfo[idx][sbProducts],
		SBizzInfo[idx][sbMaxProducts],
		SBizzInfo[idx][sbPriceProd]);
		if(idx == 0)
		{
			file2 = fopen("sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public BroadCast(color,const string[])
{
	SendClientMessageToAll(color, string);
	return 1;
}

public ABroadCast(color,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level)
			{
				SendClientMessage(i, color, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}

public OOCOff(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gOoc[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public OOCNews(color,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendTeamMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] == team)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendRadioMessage(member, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == member || PlayerInfo[i][pLeader] == member)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendJobMessage(job, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pJob] == job)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendNewFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pFMember] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

public SendFamilyMessage(family, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] == family || PlayerInfo[i][pLeader] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, color, string);
				}
			}
		}
	}
}

public SendIRCMessage(channel, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayersChannel[i] == channel)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendTeamBeepMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] == team)
		    {
				SendClientMessage(i, color, string);
				RingTone[i] = 20;
			}
		}
	}
}

public SendEnemyMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] >= 3)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}


public SendAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pAdmin] >= 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}



public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}

public PlayerFixRadio(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

public PlayerFixRadio2()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}
//---------------------------<[ OnDialogResponse ]>--------------------------------------------------------

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    new sendername[MAX_PLAYER_NAME];
    new string[128];
    if(response)
    {
        if(dialogid == 12346 || dialogid == 12347)
        {
            if(strlen(inputtext))
            {
                new tmppass[64];
                strmid(tmppass, inputtext, 0, strlen(inputtext), 255);
                //Encrypt(tmppass);
                OnPlayerLogin(playerid,tmppass);
            }
            else
            {
                new loginstring[128];
                new loginname[64];
                GetPlayerName(playerid,loginname,sizeof(loginname));
                format(loginstring,sizeof(loginstring),"WRONG PASSWORD\nPlease enter the correct password:",loginname);
                ShowPlayerDialog(playerid,12347,DIALOG_STYLE_INPUT,"Login",loginstring,"Login","Exit");
                gPlayerLogTries[playerid] += 1;
                if(gPlayerLogTries[playerid] == 5) { Ban(playerid); }
            }
        }
        if(dialogid == 12345)
        {
            if(strlen(inputtext))
            {
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "%s.ini", sendername);
                new File: hFile = fopen(string, io_read);
                if (hFile)
                {
                    SendClientMessage(playerid, COLOR_YELLOW, "That Username is already taken, please choose a different one.");
                    fclose(hFile);
                    return 1;
                }
                new tmppass[64];
                strmid(tmppass, inputtext, 0, strlen(inputtext), 255);
                //Encrypt(tmppass);
                OnPlayerRegister(playerid,tmppass);
            }
            else
            {
             	new regstring[128];
                new regname[64];
                GetPlayerName(playerid,regname,sizeof(regname));
                format(regstring,sizeof(regstring),"Welcome, %s\nYou dont have an account.\nPlease register:",regname);
                ShowPlayerDialog(playerid,12345,DIALOG_STYLE_INPUT,"Register",regstring,"Register","Exit");
            }
        }
    }
    else
    {
        Kick(playerid);
    }
    return 1;
}
//---------------------------<[ OnPlayerCommandText ]>--------------------------------------------------------

public OnPlayerCommandText(playerid, cmdtext[])
{
	new string[256];
	new playermoney;
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new cmd[256];
	new tmp[256];
	new giveplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);
//-------------------------------[Pay]--------------------------------------------------------------------------
	if(strcmp(cmd, "/pay", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /pay [playerid/PartOfName] [amount]");
				return 1;
			}
			//giveplayerid = strval(tmp);
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /pay [playerid/PartOfName] [amount]");
				return 1;
			}
			moneys = strval(tmp);
			if(PlayerInfo[playerid][pLevel] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "คุณต้องมีเลเวล 1 ถึงจะจ่ายเงินให้ผู้อื่นได้");
				return 1;
			}
			if(moneys < 1 || moneys > 49999)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "ห้ามต่ำกว่า 1 และห้ามเกิน 49999");
			    return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pLocal] == 106)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "คำสั่งนี้ไม่สามารถใช้ในสถานที่นี้ได้");
						return 1;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playermoney = ScriptMoney[playerid];
						if (moneys > 0 && playermoney >= moneys)
						{
						    ConsumingMoney[giveplayerid] = 1;
							SafeGivePlayerMoney(playerid, (0 - moneys));
							SafeGivePlayerMoney(giveplayerid, moneys);
							format(string, sizeof(string), "   คุณได้ให้เงินกับ %s(player: %d),เป็นเงิน $%d.", giveplayer,giveplayerid, moneys);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "   คุณได้รับเงิน $%d จาก %s(player: %d).", moneys, sendername, playerid);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "%s ได้จ่ายเงิน $%d ให้กับ %s", sendername, moneys, giveplayer);
							PayLog(string);
							if(moneys >= 19999)
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid,sendername, sizeof(sendername));
								format(string, 256, "AdmWarning: %s ได้ให้เงิน %s จำนวน $%d", sendername, giveplayer, moneys);
								SendAdminMessage(COLOR_YELLOW, string);
							}
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* %s ได้หยิบเงินจากกระเป๋า, และให้กับ %s.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							ApplyAnimation(playerid, "DEALER", "shop_pay", 4.0, 0, 0, 0, 0, 0);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   ใส่จำนวนเงินผิดพลาด");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ได้อยู่ใกล้กับเขา");
					}
				}//invalid id
			}
			else
			{
				format(string, sizeof(string), "   %d ไม่ได้อยู่ในเกม", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/charity", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /charity [amount]");
				return 1;
			}
			if(PlayerInfo[playerid][pLocal] == 106)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Command not allowed in this location");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "That is not enough.");
				return 1;
			}
			if(ScriptMoney[playerid] < moneys)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "You don't have that much money.");
				return 1;
			}
			SafeGivePlayerMoney(playerid, -moneys);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s Thank you for you donation of, $%d.",sendername, moneys);
			printf("%s", string);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			PayLog(string);
		}
		return 1;
	}
//-------------------------------[Stats]--------------------------------------------------------------------------
	if (strcmp(cmd, "/stats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not Logged in !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/dn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not an Admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/up", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not an Admin !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/fly", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py+15, pz+5);
				}
				if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-30, py, pz+5);
				}
				if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py-15, pz+5);
				}
				if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py-30, pz+5);
				}
				if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py-15, pz+5);
				}
				if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+30, py, pz+5);
				}
				if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not an Admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/lt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly+2, slz);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not an Admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly-2, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not an Admin !");
			}
		}
		return 1;
	}
//-------------------------------/crash----------------------------------------------
    if(strcmp(cmd, "/crash", true) == 0)
	{
	if(IsPlayerConnected(playerid))
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
    SendClientMessage(playerid, COLOR_GRAD2, "SYNTAX: /crash [playerid/PartOfName]");
    return 1;
	}
	giveplayerid = ReturnUser(tmp);
	if (PlayerInfo[playerid][pAdmin] >= 1339)
	{
    if(IsPlayerConnected(giveplayerid))
    {
        if(giveplayerid != INVALID_PLAYER_ID)
        {
        new Float:X, Float:Y, Float:Z;
        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
        GetPlayerPos(giveplayerid,X,Y,Z);
        new objectcrash = CreatePlayerObject(giveplayerid,11111111,X,Y,Z,0,0,0);
        DestroyDynamicObject(objectcrash);

		format(string, sizeof(string), "You have crashed \"%s's\" game", giveplayer);
  		SendClientMessage(playerid,COLOR_DBLUE, string);
		return 1;
	}
	}
	}
	else
	{
    format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
    SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	}
	return 1;
	}
//-------------------------------[Check]--------------------------------------------------------------------------
	if (strcmp(cmd, "/check", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /check [playerid/PartOfName]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(playerid,giveplayerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   No Such Player");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not an admin");
			}
		}
		return 1;
	}
    if (strcmp(cmd, "/checkhp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /checkhp [playerid/PartOfName]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
			            new Float:health;
			            new Float:armour;
			            GetPlayerHealth(giveplayerid, health);
			            GetPlayerArmour(giveplayerid, armour);
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                        format(string,255,"* %s เลือด: %.2f เกราะ: %.2f",giveplayer,health,armour);
		                SendClientMessage(playerid,0xFFFFFFAA,string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   No Such Player");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่แอดมิน");
			}
		}
		return 1;
	}
    if (strcmp(cmd, "/checkammo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /checkammo [จำนวนกระสุนขั้นต่ำ]");
					return 1;
				}
	            moneys = strval(tmp);
	            new Player_Weapons[13];
                new Player_Ammos[13];
                new g;
			    for(new i = 0; i < MAX_PLAYERS; i++)
			    {
				    if(IsPlayerConnected(i))
				    {
                           for(g = 1;g <= 12;g++)
                           {
                              GetPlayerWeaponData(i,g,Player_Weapons[g],Player_Ammos[g]);
                              if(Player_Weapons[g] != 0 && Player_Ammos[g] >= moneys && Player_Ammos[g] != 65535)
	                          {
		                          new weaponName[256];
		                          GetPlayerName(i, sendername, sizeof(sendername));
		                          GetWeaponName(Player_Weapons[g],weaponName,255);
		                          format(string,255,"* [%d]%s  ปืน: %s กระสุน : %d",i,sendername,weaponName,Player_Ammos[g]);
		                          SendClientMessage(playerid,0xFFFFFFAA,string);
	                          }
	                       }
				    }
			    }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่แอดมิน");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/number", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pPhoneBook] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /number [playerid/PartOfName]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						format(string, 256, "Name: %s, Ph: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   No Such Player !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You do not have a PhoneBook !");
			}
		}
		return 1;
	}
//-------------------------------[BuyLevel]--------------------------------------------------------------------------
	if (strcmp(cmd, "/uplevel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				PlayerInfo[playerid][pCash] = ScriptMoney[playerid];
				if(PlayerInfo[playerid][pLevel] >= 0)
				{
					new nxtlevel = PlayerInfo[playerid][pLevel]+1;
					new costlevel = nxtlevel*levelcost;//10k for testing purposes
					new expamount = nxtlevel*levelexp;
					new infostring[256];
					if(ScriptMoney[playerid] < costlevel)
					{
						format(infostring, 256, "   You do not have enough Cash ($%d) !",costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, infostring);
						return 1;
					}
					else if (PlayerInfo[playerid][pExp] < expamount)
					{
						format(infostring, 256, "   You need %d Respect Points, you curently have [%d] !",expamount,PlayerInfo[playerid][pExp]);
						SendClientMessage(playerid, COLOR_GRAD1, infostring);
						return 1;
					}
					else
					{
						format(string, sizeof(string), "~g~LEVEL UP~n~~w~You Are Now Level %d", nxtlevel);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerPlayMusic(playerid);
						SafeGivePlayerMoney(playerid, (-costlevel));
						PlayerInfo[playerid][pLevel]++;
						if(PlayerInfo[playerid][pDonateRank] > 0)
						{
						    PlayerInfo[playerid][pExp] -= expamount;
						    new total = PlayerInfo[playerid][pExp];
						    if(total > 0)
						    {
						        PlayerInfo[playerid][pExp] = total;
						    }
						    else
						    {
						        PlayerInfo[playerid][pExp] = 0;
						    }
						}
						else
						{
							PlayerInfo[playerid][pExp] = 0;
						}
						PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
						GameTextForPlayer(playerid, string, 5000, 1);
						format(infostring, 256, "   You bought Level %d for ($%d) Type /upgrade", nxtlevel, costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, infostring);
						format(infostring, 256, "   You gave %d unspent Upgrade Points",PlayerInfo[playerid][gPupgrade]);
						SendClientMessage(playerid, COLOR_GRAD2, infostring);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not Logged in !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/resetupgrades", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณยังไม่ได้ล๊อกอิน !");
				return 1;
			}
			if (ScriptMoney[playerid] < 25000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณมีเงินไม่พอที่จะรีเซ๊ทค่าอัพเกรด !");
				return 1;
			}
			if (PlayerInfo[playerid][pLevel] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณต้องมีเลเวล 1 หรือมากกว่า !");
				return 1;
			}
			PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-1)*2;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pAlcoholPerk] = 0;
			PlayerInfo[playerid][pDrugPerk] = 0;
			PlayerInfo[playerid][pMiserPerk] = 0;
			PlayerInfo[playerid][pPainPerk] = 0;
			PlayerInfo[playerid][pTraderPerk] = 0;
			SafeGivePlayerMoney(playerid,-25000);
			PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			format(string, 256, "** คุณได้รีเซ๊ทค่าอัพเกรดทั้งหมดแล้ว และคุณได้ค่าอัพเกรดคืนมา %d",PlayerInfo[playerid][gPupgrade]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
		return 1;
	}
	if (strcmp(cmd, "/resetjob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณยังไม่ได้ล๊อกอิน !");
				return 1;
			}
			if (ScriptMoney[playerid] < 10000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณมีเงินไม่พอที่จะรีเซ๊ทงาน!");
				return 1;
			}
			if (PlayerInfo[playerid][pLevel] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณต้องมีเลเวล 1 หรือมากกว่า !");
				return 1;
			}
			PlayerInfo[playerid][pJob] = 0;
			PlayerInfo[playerid][pContractTime] = 0;
			SafeGivePlayerMoney(playerid,-10000);
			PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			format(string, 256, "** คุณได้รีเซ๊ทงานของคุณเรียบร้อยแล้ว");
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
		return 1;
	}
	if (strcmp(cmd, "/buygun", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(ScriptMoney[playerid] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You dont have enough money with you !");
			    return 1;
			}
			new gun;
			new gunid[16];
			new gunstring1[256];
			new gunstring2[256];
			new gunstring3[256];
			new gunstring4[256];
			new gunstring5[256];
			new infostring[256];
			new guncharge;
			new ammocharge;
			new location = PlayerInfo[playerid][pLocal];
			if(location == 99 || location == 100)
			{
			    if(BizzInfo[location-99][bProducts] <= 0)
			    {
			        GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
					return 1;
			    }
				new mod = 100;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					format(string, sizeof(string), "USAGE: /buygun [gunname] [ammoamount]");
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					SendClientMessage(playerid, COLOR_WHITE,"*** Guns & Ammo ***");
					SendClientMessage(playerid, COLOR_GRAD2,string);
					format(gunstring1, 256, "Weapons: parachute ($%d) golfclub ($%d) nightstick ($%d) baseballbat ($%d) shovel ($%d) poolcue ($%d)",
					GunPrice[0][0]/100*mod,GunPrice[1][0]/100*mod,GunPrice[2][0]/100*mod,GunPrice[3][0]/100*mod,GunPrice[4][0]/100*mod,GunPrice[5][0]/100*mod,GunPrice[6][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring1);
					format(gunstring2, 256, "Weapons: purpledildo ($%d) whitedildo ($%d) longwhitedildo ($%d) whitedildo2 ($%d) flowers ($%d) cane",
					GunPrice[7][0]/100*mod,GunPrice[8][0]/100*mod,GunPrice[9][0]/100*mod,GunPrice[10][0]/100*mod,GunPrice[11][0]/100*mod,GunPrice[12][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring2);
					format(gunstring3, 256, "Weapons: sdpistol ($%d) deagle ($%d) mp5 ($%d)",
					GunPrice[13][0]/100*mod,GunPrice[14][0]/100*mod,GunPrice[15][0]/100*mod,GunPrice[16][0]/100*mod,GunPrice[17][0]/100*mod,GunPrice[18][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring3);
					format(gunstring4, 256, "Weapons: shotgun ($%d) ak47 ($%d) m4 ($%d) rifle ($%d)",
					GunPrice[19][0]/100*mod,GunPrice[20][0]/100*mod,GunPrice[21][0]/100*mod,GunPrice[22][0]/100*mod,GunPrice[23][0]/100*mod,GunPrice[24][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring4);
					format(gunstring5, 256, "Weapons: pistolammo ($%d) shotgunammo ($%d) smgammo ($%d) assaultammo ($%d) rifleammo ($%d)",
					GunPrice[25][0],GunPrice[26][0],GunPrice[27][0],GunPrice[28][0],GunPrice[29][0]);
					SendClientMessage(playerid, COLOR_GRAD3, gunstring5);
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					format(string, sizeof(string), "USAGE: /buygun [gunname] [ammoamount]");
					return 1;
				}
				new ammo = strval(tmp);
				if(ammo < 1 || ammo > 999) { SendClientMessage(playerid, COLOR_GREY, "   Ammo ammount not lower then 1 or higher then 999 !"); return 1; }
				if (strcmp(gunid, "parachute", true, strlen(gunid)) == 0)
				{
					gun = 46;
					guncharge = GunPrice[0][0]/100*mod;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "golfclub", true, strlen(gunid)) == 0)
				{
					gun = 2; guncharge = GunPrice[1][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 2; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "nightstick", true, strlen(gunid)) == 0)
				{
					gun = 3; guncharge = GunPrice[2][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 3; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "baseballbat", true, strlen(gunid)) == 0)
				{
					gun = 5; guncharge = GunPrice[4][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 5; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "shovel", true, strlen(gunid)) == 0)
				{
					gun = 6; guncharge = GunPrice[5][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 6; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "poolcue", true, strlen(gunid)) == 0)
				{
					gun = 7; guncharge = GunPrice[6][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 7; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "purpledildo", true, strlen(gunid)) == 0)
				{
					gun = 10; guncharge = GunPrice[7][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 10; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "whitedildo", true, strlen(gunid)) == 0)
				{
					gun = 11; guncharge = GunPrice[8][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 11; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "longwhitedildo", true, strlen(gunid)) == 0)
				{
					gun = 12; guncharge = GunPrice[9][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 12; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "whitedildo2", true, strlen(gunid)) == 0)
				{
					gun = 13; guncharge = GunPrice[10][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 13; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "flowers", true, strlen(gunid)) == 0)
				{
					gun = 14; guncharge = GunPrice[11][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 14; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "cane", true, strlen(gunid)) == 0)
				{
					gun = 15; guncharge = GunPrice[12][0]/100*mod; ammocharge = 0;
					PlayerInfo[playerid][pGun1] = 15; PlayerInfo[playerid][pAmmo1] = 1;
				}
				else if (strcmp(gunid, "sdpistol", true, strlen(gunid)) == 0)
				{
					gun = 23; guncharge = GunPrice[13][0]/100*mod; ammocharge = GunPrice[25][0]*ammo;
					PlayerInfo[playerid][pGun2] = 23; PlayerInfo[playerid][pAmmo2] = ammo;
				}
				else if (strcmp(gunid, "deagle", true, strlen(gunid)) == 0)
				{
					gun = 24; guncharge = GunPrice[15][0]/100*mod; ammocharge = GunPrice[25][0]*ammo;
					PlayerInfo[playerid][pGun2] = 24; PlayerInfo[playerid][pAmmo2] = ammo;
				}
				else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0)
				{
					gun = 29; guncharge = GunPrice[18][0]/100*mod; ammocharge = GunPrice[27][0]*ammo;
					PlayerInfo[playerid][pGun3] = 29; PlayerInfo[playerid][pAmmo3] = ammo;
				}
				else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0)
				{
					gun = 25; guncharge = GunPrice[19][0]/100*mod; ammocharge = GunPrice[26][0]*ammo;
					PlayerInfo[playerid][pGun3] = 25; PlayerInfo[playerid][pAmmo3] = ammo;
				}
				else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0)
				{
					gun = 30; guncharge = GunPrice[22][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
					PlayerInfo[playerid][pGun4] = 30; PlayerInfo[playerid][pAmmo4] = ammo;
				}
				else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0)
				{
					gun = 31; guncharge = GunPrice[23][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
					PlayerInfo[playerid][pGun4] = 31; PlayerInfo[playerid][pAmmo4] = ammo;
				}
				else if (strcmp(gunid, "rifle", true, strlen(gunid)) == 0)
				{
					gun = 33; guncharge = GunPrice[24][0]/100*mod; ammocharge = GunPrice[29][0]*ammo;
					PlayerInfo[playerid][pGun4] = 33; PlayerInfo[playerid][pAmmo4] = ammo;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "ShopKeeper says: I have never heard of that weapon.");
					return 1;
				}
				if((guncharge+ammocharge) > ScriptMoney[playerid])
				{
					format(infostring, 256, "   You don't have $%d !",guncharge+ammocharge);
					SendClientMessage(playerid, COLOR_GRAD3, infostring);
					return 1;
				}
				if(ScriptMoney[playerid] < (guncharge+ammocharge))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Can't afford that !");
				    return 1;
				}
				new payout = guncharge + ammocharge;
				format(infostring, 256, "You have purchased %s with %d ammo for $%d",gunid,ammo,payout);
				SendClientMessage(playerid, COLOR_GRAD3, infostring);
				if(location == 102 && IsACop(playerid)) { }
				else { SafeGivePlayerMoney(playerid, - payout); }
				BizzInfo[location-99][bTill] += payout;
				ExtortionBiz(location-99, payout);
				BizzInfo[location-99][bProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeapon(playerid, gun, ammo);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s bought weapons for $%d at biz %d", sendername, payout, location-99);
				printf("%s", string);
				PayLog(string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE,"You are not in a store.");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/upgrade", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new gunid[16];
			new infostring[256];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				format(string, sizeof(string), "USAGE: /upgrade [upgradename] (คุณมีค่าอัพเกรดอยู่ %d)",PlayerInfo[playerid][gPupgrade]);
				SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				SendClientMessage(playerid, COLOR_WHITE,"*** UPGRADES ***");
				SendClientMessage(playerid, COLOR_GRAD2,string);
				if(PlayerInfo[playerid][pLevel] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Level 2 Perks: Alcoholic, DrugAddict");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Level 3 Perks: Alcoholic, DrugAddict, Miser");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Level 4 Perks: Alcoholic, DrugAddict, Miser, Trader");
				}
				else if(PlayerInfo[playerid][pLevel] >= 5)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Level 5 Perks: Alcoholic, DrugAddict, Miser, Trader, PainKillers");
				}
				SendClientMessage(playerid, COLOR_GRAD5, "Extra Health: health");
				SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				return 1;
			}
			strmid(gunid, tmp, 0, strlen(cmdtext), 255);
			if (PlayerInfo[playerid][gPupgrade] > 1)
			{
				if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "health", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pSHealth] < 50)
					{
						PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth]+5.0;
						format(infostring, 256, "New Upgrade: You Will Now Spawn With %.2f Health (+5)",PlayerInfo[playerid][pSHealth]+50);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   You Have Maximum Spawn Health");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "alcoholic", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pAlcoholPerk] < 3)
					{
						PlayerInfo[playerid][pAlcoholPerk] += 1;
						format(infostring, 256, "New Perk Upgrade: Your Alcoholic Perk is now Level %d.",PlayerInfo[playerid][pAlcoholPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Your Alcoholic Perk is maxed out !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "drugaddict", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pDrugPerk] < 3)
					{
						PlayerInfo[playerid][pDrugPerk] += 1;
						format(infostring, 256, "New Perk Upgrade: Your Drug Addict Perk is now Level %d.",PlayerInfo[playerid][pDrugPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Your Drug Addict Perk is maxed out !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "miser", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pMiserPerk] < 3)
					{
						PlayerInfo[playerid][pMiserPerk] += 1;
						format(infostring, 256, "New Perk Upgrade: Your Miser Perk is now Level %d.",PlayerInfo[playerid][pMiserPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Your Miser Perk is maxed out !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "trader", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pTraderPerk] < 3)
					{
						PlayerInfo[playerid][pTraderPerk] += 1;
						format(infostring, 256, "New Perk Upgrade: Your Trader Perk is now Level %d.",PlayerInfo[playerid][pTraderPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Your Trader Perk is maxed out !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pPainPerk] < 3)
					{
						PlayerInfo[playerid][pPainPerk] += 1;
						format(infostring, 256, "New Perk Upgrade: Your Pain Killers Perk is now Level %d.",PlayerInfo[playerid][pPainPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Your Pain Killers Perk is maxed out !");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Unrecognized Upgrade");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD6, "   You Have 0 Upgrade Points");
				return 1;
			}
			SendClientMessage(playerid, COLOR_GRAD6, infostring);
			PlayerInfo[playerid][gPupgrade]--;
		}
		return 1;
	}
//-------------------------------[Login]--------------------------------------------------------------------------
	/*if (strcmp(cmd, "/login", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new tmppass[64];
			if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: คุณได้ล๊อกอินแล้ว ไม่สามารถล๊อกอินได้อีก");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /login [password]");
				return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerLogin(playerid,tmppass);
		}
		return 1;
	}
	if (strcmp(cmd, "/register", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: คุณได้ล๊อกอินแล้ว ไม่สามารถล๊อกอินได้อีก");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s.ini", sendername);
			new File: hFile = fopen(string, io_read);
			if (hFile)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "That Username is already taken, please choose a different one.");
				fclose(hFile);
				return 1;
			}
	        new tmppass[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /register [password]");
				return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
		}
		return 1;
	}*/
	if (strcmp(cmd, "/changepass", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่ได้ล็อคอิน !");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s.ini", sendername);
	        new tmppass[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /changepass [newpassword]");
				return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
		}
		return 1;
	}
//----------------------[Changecolor]--------------
    if(strcmp(cmd, "/cname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, 0xF61400AA, "COLOR: /cname1 (500)");//แดง
			SendClientMessage(playerid, 0x00F6F6AA, "COLOR: /cname2 (500)");//ฟ้า
			SendClientMessage(playerid, COLOR_DBLUE, "COLOR: /cname3 (500)");//น้ำเงิน
			SendClientMessage(playerid, COLOR_WHITE, "COLOR: /cname4 (500)");//ขาว
			SendClientMessage(playerid, 0xF6F6ABAA, "COLOR: /cname5 (Free)");//เหลืองอ่อน
			SendClientMessage(playerid, COLOR_YELLOW, "COLOR: /cname6 (500)");//เหลือง
			SendClientMessage(playerid, COLOR_GREEN, "COLOR: /cname7 (500)");//เขียว
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "COLOR: /cname8 (500)");//ม่วง
			SendClientMessage(playerid, 0x79F6D4AA, "COLOR: /cname9 (500)");//เขียวอ่อน
			SendClientMessage(playerid, 0x000000AA, "COLOR: /cname10 (500)");//ดำ
        }
		return 1;
	}
	if(strcmp(cmd, "/cname1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, 0xF61400AA);
			SendClientMessage(playerid, 0xF61400AA, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -500);
        }
		return 1;
	}
	if(strcmp(cmd, "/cname2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, 0x00F6F6AA);
			SendClientMessage(playerid, 0x00F6F6AA, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -500);
        }
		return 1;
	}
	if(strcmp(cmd, "/cname3", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, COLOR_DBLUE);
			SendClientMessage(playerid, COLOR_DBLUE, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -500);
        }
		return 1;
	}
	if(strcmp(cmd, "/cname4", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, COLOR_WHITE);
			SendClientMessage(playerid, COLOR_WHITE, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -500);
        }
		return 1;
	}
	if(strcmp(cmd, "/cname5", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, 0xF6F6ABAA);
			SendClientMessage(playerid, 0xF6F6ABAA, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -0);
        }
		return 1;
	}
	if(strcmp(cmd, "/cname6", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, COLOR_YELLOW);
			SendClientMessage(playerid, COLOR_YELLOW, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -500);
        }
		return 1;
	}
	if(strcmp(cmd, "/cname7", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, COLOR_GREEN);
			SendClientMessage(playerid, COLOR_GREEN, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -500);
        }
		return 1;
	}
	if(strcmp(cmd, "/cname8", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, TEAM_BALLAS_COLOR);
			SendClientMessage(playerid, TEAM_BALLAS_COLOR, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -500);
        }
		return 1;
	}
	if(strcmp(cmd, "/cname9", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, 0x79F6D4AA);
			SendClientMessage(playerid, 0x79F6D4AA, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -500);
        }
		return 1;
	}
	if(strcmp(cmd, "/cname10", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetPlayerColor(playerid, 0x040200AA);
			SendClientMessage(playerid, 0x040200AA, "คุณได้เปลี่ยนสีชื่อเรียบร้อยแล้ว");
			SafeGivePlayerMoney(playerid, -500);
        }
		return 1;
	}
//--------------------------------=Police Backup=----------------------------------------------------------------
    if(strcmp(cmd,"/backup",true)==0 || strcmp(cmd,"/bk",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19|| PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21|| PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
			{
				if (PlayerInfo[playerid][pRequestingBackup] != 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Dispatch: ทุกหน่วยโปรดทราบ %s ได้ขอความช่วยเหลือด่วน, ไปที่จุดสีแดงเดี๋ยวนี้!", sendername);
					if (gTeam[playerid] != 2 ){SendClientMessage(playerid, COLOR_DBLUE, string);}
					SendTeamBeepMessage(2, COLOR_DBLUE, string);
					PlayerInfo[playerid][pRequestingBackup] = 1;
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3|| PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21|| PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
							{
								SetPlayerMarkerForPlayer(i, playerid, 0xFF0000FF);
								SendClientMessage(i, TEAM_BLUE_COLOR, string);
							}
						}
					}
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "พิมพ์ /bkc เพื่อยกเลิกการขอความช่วยเหลือ");
					SetTimerEx("BackupClear", 150000, false, "ii", playerid, 1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " คุณส่งวิทยุขอความช่วยเหลือไปแล้ว!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " คุณไม่ใช่ตำรวจ!");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/backupclear",true)==0 || strcmp(cmd,"/bkc",true)==0)
	{
		BackupClear(playerid, 0);
		return 1;
	}
//----------------------------------[ooc]-----------------------------------------------
	if(strcmp(cmd, "/ooc", true) == 0 || strcmp(cmd, "/o", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่ได้ล็อคอิน !");
	            return 1;
	        }
			if ((noooc) && PlayerInfo[playerid][pAdmin] < 1)
			{
				SendClientMessage(playerid, 0x909190AA, "   ระบบ OOC ถูกปิดโดย Admin !");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			if(deathcpr[playerid] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณมีแรงไม่พอ กรุณาพิมพ์((/b))เพื่อพูด !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/o)oc [ooc chat]");
				return 1;
			}
			for(new word=0; word < sizeof(BadWords); word++)
            {
    		DisableWord(BadWords[word][0], result);
  	        }
		    if(SpamStrings[playerid] >= MAX_SPAM)
   			{
		    	SendClientMessage(playerid,COLOR_LIGHTRED," อย่าฟลั๊ดครับ !");
	        	return 1;
	        }
	        SpamStrings[playerid] += 3;
			format(string, sizeof(string), "(( %s(%d): %s ))", sendername, playerid, result);
			OOCOff(COLOR_OOC,string);
			printf("%s", string);
		}
		return 1;
	}
	if(strcmp(cmd, "/noooc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3 && (!noooc))
			{
				noooc = 1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "   ระบบ OOC ได้ถูกปิดโดย Admin %s !", sendername);
				SendClientMessageToAll(0x33CCFFAA, string);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 3 && (noooc))
			{
				noooc = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "   ระบบ OOC ได้ถูกเปิดโดย Admin %s !", sendername);
				SendClientMessageToAll(0x33CCFFAA, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/nowisper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3 && (!nowisper))
			{
				nowisper = 1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "   ระบบ Wisper ได้ถูกปิดโดย Admin %s !", sendername);
				SendClientMessageToAll(0xD900D3C8, string);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 3 && (nowisper))
			{
				nowisper = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "   ระบบ Wisper ได้ถูกเปิดโดย Admin %s !", sendername);
				SendClientMessageToAll(0xD900D3C8, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/nogov", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3 && (!nogov))
			{
				nogov = 1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "   ระบบ Government ได้ถูกปิดโดย Admin %s !", sendername);
				SendClientMessageToAll(0x33CCFFAA, string);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 3 && (nogov))
			{
				nogov = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "   ระบบ Government ได้ถูกเปิดโดย Admin %s !", sendername);
				SendClientMessageToAll(0x33CCFFAA, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/noad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3 && (!noad))
			{
				noad = 1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "   ระบบ Advertise ได้ถูกปิดโดย Admin %s !", sendername);
				SendClientMessageToAll(0x33CCFFAA, string);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 3 && (noad))
			{
				noad = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "   ระบบ Advertise ได้ถูกเปิดโดย Admin %s !", sendername);
				SendClientMessageToAll(0x33CCFFAA, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/speedo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gSpeedo[playerid] == 1)
			{
				gSpeedo[playerid] = 2;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~on", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else if (gSpeedo[playerid] == 2)
			{
				gSpeedo[playerid] = 1;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~off", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "you dont have a speedometer");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/fuel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gGas[playerid] == 1)
			{
				gGas[playerid] = 0;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~Fuel Info on", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
			else if (gGas[playerid] == 0)
			{
				gGas[playerid] = 1;
				GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~Fuel Info off", 5000, 5);
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/hooktocar", true) == 0 || strcmp(cmd, "/hc", true) == 0)
	{
		new suspect = GetClosestPlayer(playerid);
 		if(PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pMember] != 2 && PlayerInfo[playerid][pMember] != 19&& PlayerInfo[playerid][pMember] != 21 && PlayerInfo[playerid][pLeader] != 1 && PlayerInfo[playerid][pLeader] != 2 && PlayerInfo[playerid][pLeader] != 19&& PlayerInfo[playerid][pLeader] != 21)
    	{
    		SendClientMessage(playerid,COLOR_GRAD1,"คุณไม่ใช่ ตำรวจ/FBI/ทหาร!");
     		return 1;
		}
  		if(!IsPlayerInAnyVehicle(playerid))
    	{
    		SendClientMessage(playerid, COLOR_GREY, "   Cannot use this while being in the Car !");
     		return 1;
    	}
  		tmp = strtok(cmdtext, idx);
    	if(!strlen(tmp))
    	{
    		SendClientMessage(playerid,COLOR_GRAD1,"USAGE: /hc [Playerid/PartOfName]");
     		return 1;
		}
      	if(IsPlayerConnected(suspect))
      	{
  			suspect = ReturnUser(tmp);
			new vehid = GetPlayerVehicleID(playerid);
     		new seat = 4;
			if (ProxDetectorS(8.0, playerid, suspect))
			{
    			if(PlayerCuffed[suspect] == 0)
	    		{
     				SendClientMessage(playerid, COLOR_GREY, "   ผู้ต้องหายังไม่ได้ใส่กุญแจมือ !");
       				return 1;
   			 	}
        		if(IsACop(suspect))
          		{
            		SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถดึง ตำรวจ/FBI/ทหาร !");
              		return 1;
                }
                new Float:pos[6];
              	GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
               	GetPlayerPos(suspect, pos[3], pos[4], pos[5]);
                if (floatcmp(floatabs(floatsub(pos[0], pos[3])), 10.0) != -1 &&
                floatcmp(floatabs(floatsub(pos[1], pos[4])), 10.0) != -1 &&
                floatcmp(floatabs(floatsub(pos[2], pos[5])), 10.0) != -1) return false;
          		GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
             	GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "* %s ได้ล๊อคตัวผู้ต้องหา %s ขึ้นรถ", sendername ,giveplayer);
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                TogglePlayerControllable(suspect, 0);
           		PutPlayerInVehicle(suspect,vehid,seat);
			}
   			else
   			{
				SendClientMessage(playerid, COLOR_GREY, "   ผู้ต้องหาอยู่ห่างจากคุณมากเกินไป !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[advertise]-----------------------------------------------
	if(strcmp(cmd, "/advertise", true) == 0 || strcmp(cmd, "/ad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
	            return 1;
	        }
			if ((noad) && PlayerInfo[playerid][pAdmin] < 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   ระบบ Advertise ถูกปิดโดย Admin !");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/ad)vertise [advert text]");
				return 1;
			}
			if ((!adds) && (PlayerInfo[playerid][pAdmin] < 1))
			{
				format(string, sizeof(string), "   Please try again later %d seconds between Advertisements !",  (addtimer/1000));
				SendClientMessage(playerid, COLOR_GRAD2, string);
				return 1;

			}
			new payout = idx * 25;
			if(ScriptMoney[playerid] < payout)
	        {
	            format(string, sizeof(string), "* You used %d characters which cost $%d, you don't have enough.", offset, payout);
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	            return 1;
	        }
			SafeGivePlayerMoney(playerid, - payout);
			SBizzInfo[7][sbTill] += payout;
			ExtortionSBiz(7, payout);
			format(string, sizeof(string), " ประกาศโฆษนา: %s ผู้ประกาศ: %s เบอร์ติดต่อ: %d",  result, sendername,PlayerInfo[playerid][pPnumber]);
			OOCNews(TEAM_GROVE_COLOR,string);
			format(string, sizeof(string), "~r~Paid $%d~n~~w~Message contained: %d Characters", payout, idx);
			GameTextForPlayer(playerid, string, 5000, 5);
			if (PlayerInfo[playerid][pAdmin] < 1){SetTimer("AddsOn", addtimer, 0);adds = 0;}
		}
		return 1;
	}
//----------------------------------[government]-----------------------------------------------
	if(!strcmp(cmd, "/government", true) || !strcmp(cmd, "/gov", true))
	{
		if(IsPlayerConnected(playerid))
		{
			if ((nogov) && PlayerInfo[playerid][pAdmin] < 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   ระบบ Government ถูกปิดโดย Admin !");
				return 1;
			}
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, 0xBFC0C2FF, "USAGE: (/gov)ernment [text]");
				return 1;
			}
			if(PlayerInfo[playerid][pLeader] == 1)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ข่าวสารจากผู้บังคับบัญชาการตำรวจ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0x2641FEAA, string);
			}
			if(PlayerInfo[playerid][pLeader] == 21)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ข่าวสารจากผ.บ.ต.ร.เมือง (LS) ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0x2641FEAA, string);
			}
			if(PlayerInfo[playerid][pLeader] == 2)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากสำนักงาน FBI ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0x2641FEAA, string);
			}
			if(PlayerInfo[playerid][pLeader] == 3)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากกองกำลังนาวิกโยธิน::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0x2641FEAA, string);
			}
			if(PlayerInfo[playerid][pLeader] == 22)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากกองกำลังนาวิกโยธิน LS ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0x2641FEAA, string);
			}
			if(PlayerInfo[playerid][pLeader] == 4)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากสำนักงานแพทย์ ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0xFF8282AA, string);
			}
			if(PlayerInfo[playerid][pLeader] == 7)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากสำนักงานนายกรัฐมนตรี ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0xFF830000, string);
			}
			if(PlayerInfo[playerid][pLeader] == 11)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากกรมการขนส่ง ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0xFFC801C8, string);
			}
			if(PlayerInfo[playerid][pLeader] == 5)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากองค์กรมาเฟีย ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_GREY, string);
			}
			if(PlayerInfo[playerid][pLeader] == 6)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากองค์กรยากุซ่า ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_RED, string);
			}
			if(PlayerInfo[playerid][pLeader] == 8)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากองค์กรนักล่าค่าหัว ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_GREY, string);
			}
			if(PlayerInfo[playerid][pLeader] == 10)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากองค์กรแท็กซี่ ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0xFFFF00AA, string);
			}
			if(PlayerInfo[playerid][pLeader] == 12)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากแก๊งค์ Grove Street ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
			}
			if(PlayerInfo[playerid][pLeader] == 13)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากแก๊งค์ Ballas ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
			}
			if(PlayerInfo[playerid][pLeader] == 14)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ข่าวสารของแก๊งค์ Vagos ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
			}
			if(PlayerInfo[playerid][pLeader] == 15)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากแก๊งค์ Aztecas ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(TEAM_AZTECAS_COLOR, string);
			}
			if(PlayerInfo[playerid][pLeader] == 16)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากทีม Vance Boy ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(TEAM_Vance_COLOR, string);
			}
			if(PlayerInfo[playerid][pLeader] == 17)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากแก๊งประตูผี ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0xF60C4FAA, string);
			}
			if(PlayerInfo[playerid][pLeader] == 18)
			{
				SendClientMessageToAll(0xFFFFFFAA, "|_____.:: ประกาศจากทีมงานใต้ตึก ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(TEAM_AZTECAS_COLOR, string);
			}
			if(PlayerInfo[playerid][pLeader] == 19)
			{
				SendClientMessageToAll(0x515251AA, "|_____.:: ประกาศจากองกรณ์ลับ ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(0x515251AA, string);
			}
			if(PlayerInfo[playerid][pLeader] == 20)
			{
				SendClientMessageToAll(COLOR_RED, "|_____.:: ประกาศจากRed blood ::._____|");
				format(string, sizeof(string), " %s: %s", sendername, result);
				SendClientMessageToAll(COLOR_RED, string);
			}
		}
		return 1;
	}
//---------------------------------------[mgov]-------------------------------//
	if(strcmp(cmd, "/says", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD5,"You are not Admin !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /says [text]");
				return 1;
			}
			format(string, sizeof(string), "Admin %s: %s", sendername, result);
			SendClientMessageToAll(0x61F600AA, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/setname", true) == 0)
    {
    new newname[128];
	if (PlayerInfo[playerid][pAdmin] >= 1341)
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_YELLOW, "USAGE: /setname [playerid] [newname]");
			return 1;
		}

		giveplayerid = ReturnUser(tmp);
		if(giveplayerid != INVALID_PLAYER_ID)
		{
		    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset) < (sizeof(newname) - 1)))
			{
				newname[idx - offset] = cmdtext[idx];
				idx++;
			}
			newname[idx - offset] = EOS;
			if(!strlen(newname))
				{
					SendClientMessage(playerid, COLOR_YELLOW, "USAGE: /setname [playerid] [newname]");
					return 1;
				}
			else
			{
			format(string, sizeof(string), "AdmCmd: %s ได้เปลี่ยนชื่อ คุณ %s เป็นชื่อ : %s", sendername,giveplayer,newname);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			SetPlayerName(giveplayerid, newname);
			}
		}
		else if(giveplayerid == INVALID_PLAYER_ID)
		{
			format(string, sizeof(string), "%d is not an active player.", giveplayerid);
			SendClientMessage(playerid, COLOR_RED, string);
		}
	}
	else
 	{
 	SendClientMessage(playerid, COLOR_RED, "You are not an admin with the required level.");
  	}
	return 1;
    }
//----------------------------------[togooc]-----------------------------------------------

	if(strcmp(cmd, "/togooc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gOoc[playerid])
			{
				gOoc[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้เปิดรับฟังข้อความ OOC !");
			}
			else if (gOoc[playerid])
			{
				gOoc[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้ปิดรับฟังข้อความ OOC !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tognews", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gNews[playerid])
			{
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้ปิดรับฟังข้อความ News !");
			}
			else if (gNews[playerid])
			{
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้เปิดรับฟังข้อความ News !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/togfam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!gFam[playerid])
			{
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้ปิดรับฟังข้อความใน Family chat !");
			}
			else if (gFam[playerid])
			{
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้เปิดรับฟังข้อความใน Family chat !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/togwhisper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pAdmin] > 1)
	        {
				if (!HidePM[playerid])
				{
					HidePM[playerid] = 1;
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้ปิดรับฟัง Whisper chat !");
				}
				else if (HidePM[playerid])
				{
					HidePM[playerid] = 0;
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้เปิดรับฟัง Whisper chat !");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ไม่ใช่ Admin / หรือ Premium Account !");
	            return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/togphone", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pAdmin] > 1)
	        {
				if (!PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 1;
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้ปิดโทรศัพท์ !");
				}
				else if (PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 0;
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณได้เปิดโทรศัพท์ !");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ไม่ใช่ Admin หรือ Premium Account !");
	            return 1;
			}
		}
		return 1;
	}
//----------------------------------[Emote]-----------------------------------------------
	if(strcmp(cmd, "/me", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			if(deathcpr[playerid] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณมีแรงไม่พอ กรุณาพิมพ์((/b))เพื่อพูด !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /me [action]");
				return 1;
			}
			format(string, sizeof(string), "* %s %s", sendername, result);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Local]-----------------------------------------------
	if(strcmp(cmd, "/local", true) == 0 || strcmp(cmd, "/l", true) == 0 || strcmp(cmd, "/say", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/l)ocal [local chat]");
				return 1;
			}
			format(string, sizeof(string), "%s: %s", sendername, result);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return 1;
	}
	if(strcmp(cmd, "/b", true) == 0)//local ooc
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /b [local ooc chat]");
				return 1;
			}
			format(string, sizeof(string), "%s: (( %s ))", sendername, result);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return 1;
	}
	if(strcmp(cmd, "/close", true) == 0 || strcmp(cmd, "/c", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			if(deathcpr[playerid] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณมีแรงไม่พอ กรุณาพิมพ์((/b))เพื่อพูด !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /(c)lose [close chat text]");
				return 1;
			}
			format(string, sizeof(string), "%s: %s", sendername, result);
			ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Shout]-----------------------------------------------
	if(strcmp(cmd, "/shout", true) == 0 || strcmp(cmd, "/s", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You havent logged in yet !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			if(deathcpr[playerid] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณมีแรงไม่พอ กรุณาพิมพ์((/b))เพื่อพูด !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/s)hout [local chat]");
				return 1;
			}
			format(string, sizeof(string), "%s ตะโกน: %s!!", sendername, result);
			ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Shout]-----------------------------------------------
	if(strcmp(cmd, "/megaphone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerInfo[playerid][pMuted] == 1)
	    	{
	    		SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
	    		return 1;
	    	}
	    	if(deathcpr[playerid] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณมีแรงไม่พอ กรุณาพิมพ์((/b))เพื่อพูด !");
				return 1;
			}
	    	//new tmpcar = GetPlayerVehicleID(playerid);
	    	GetPlayerName(playerid, sendername, sizeof(sendername));
	    	new length = strlen(cmdtext);
	    	while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/m)egaphone [megaphone chat]");
				return 1;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
				{
					format(string, sizeof(string), "[เจ้าหน้าที่ตำรวจ %s:o< %s]", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
				{
					format(string, sizeof(string), "[เจ้าหน้าที่ FBI %s:o< %s]", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 19||PlayerInfo[playerid][pLeader] == 19)
				{
					format(string, sizeof(string), "[องกรณ์ลับ %s:o< %s]", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 21||PlayerInfo[playerid][pLeader] == 21)
				{
					format(string, sizeof(string), "[เจ้าหน้าที่ตำรวจเมือง LS %s:o< %s]", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
				{
				    format(string, sizeof(string), "[นาวิกโยธิน %s:o< %s]", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
                else if(PlayerInfo[playerid][pMember] == 22||PlayerInfo[playerid][pLeader] == 22)
				{
				    format(string, sizeof(string), "[นาวิกโยธินแห่ง LS %s:o< %s]", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				printf("%s", string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ใช่ส่วนหนึ่งของกองกำลัง !");
				return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/cs", true) == 0 || strcmp(cmd, "/copstop", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /copstop [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (IsACop(playerid))
			{
                if(IsPlayerConnected(playa))
			    {
                GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			    GetPlayerName(playerid, sendername, sizeof(sendername));
                if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
				{
					format(string, sizeof(string), "[เจ้าหน้าที่ %s:o< คุณ %s นี่คือเจ้าหน้าที่ตำรวจโปรดหยุดเดี่ยวนี่ ถ้าไม่หยุดจะถือว่าหลบหนีการจับกุม]", sendername, giveplayer);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
				{
					format(string, sizeof(string), "[เจ้าหน้าที่ FBI %s:o< คุณ %s นี่คือเจ้าหน้าที่ FBI โปรดหยุดเดี่ยวนี่ ถ้าไม่หยุดเราจำเป็นต้องยิงท่าน]", sendername, giveplayer);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
				{
					format(string, sizeof(string), "[องกรณ์ลับลับ %s:o< คุณ %s นี่คือหน่วยงานลับโปรดหยุดเดี่ยวนี่ ถ้าไม่หยุดเราจำเป็นต้องยิงท่าน]", sendername, giveplayer);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
				{
					format(string, sizeof(string), "[เจ้าหน้าที่ %s:o< คุณ %s นี่คือเจ้าหน้าที่ตำรวจ LS โปรดหยุดเดี่ยวนี่ ถ้าไม่หยุดจะถือว่าหลบหนีการจับกุม]", sendername, giveplayer);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
				{
				    format(string, sizeof(string), "[นาวิกโยธิน %s:o< คุณ %s นี่คือกองกำลังนาวิกโยธินโปรดหยุดเดี่ยวนี่ ถ้าไม่หยุดเราจำเป็นต้องยิงท่าน]", sendername, giveplayer);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
                else if(PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
				{
				    format(string, sizeof(string), "[นาวิกโยธิน %s:o< คุณ %s นี่คือกองกำลังนาวิกโยธิน LS โปรดหยุดเดี่ยวนี่ ถ้าไม่หยุดเราจำเป็นต้องยิงท่าน]", sendername, giveplayer);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
					}
				}
            }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่ตำรวจ !");
				return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/ca", true) == 0 || strcmp(cmd, "/coparrest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /coparrest [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (IsACop(playerid))
			{
			    if(IsPlayerConnected(playa))
			    {
                GetPlayerName(playa, giveplayer, sizeof(giveplayer));
			    GetPlayerName(playerid, sendername, sizeof(sendername));
				if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
				{
					format(string, sizeof(string), "[เจ้าหน้าที่ตำรวจ%s:o< คุณ %s ทิ้งอาวุธและยกมือขึ้น!!! (พิมพ์ /dw และ /handsup)]", sendername, giveplayer);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
				{
					format(string, sizeof(string), "[เจ้าหน้าที่ FBI %s:o< คุณ %s ทิ้งอาวุธและยกมือขึ้น!!! (พิมพ์ /dw และ /handsup)]", sendername, giveplayer);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 19||PlayerInfo[playerid][pLeader] == 19)
				{
					format(string, sizeof(string), "[องกรณ์ลับ %s:o< คุณ %s ทิ้งอาวุธและยกมือขึ้น!!! (พิมพ์ /dw และ /handsup)]", sendername, giveplayer);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 21||PlayerInfo[playerid][pLeader] == 21)
				{
					format(string, sizeof(string), "[เจ้าหน้าที่ตำรวจ LS %s:o< คุณ %s ทิ้งอาวุธและยกมือขึ้น!!! (พิมพ์ /dw และ /handsup)]", sendername, giveplayer);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
				{
				    format(string, sizeof(string), "[นาวิกโยธินเมือง%s:o< คุณ %s ทิ้งอาวุธและยกมือขึ้น!!! (พิมพ์ /dw และ /handsup)]", sendername, giveplayer);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
                else if(PlayerInfo[playerid][pMember] == 22||PlayerInfo[playerid][pLeader] == 22)
				{
				    format(string, sizeof(string), "[นาวิกโยธินเมือง LS %s:o< คุณ %s ทิ้งอาวุธและยกมือขึ้น!!! (พิมพ์ /dw และ /handsup)]", sendername, giveplayer);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
					}
				}
            }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่ตำรวจ !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[Team]-----------------------------------------------
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/r)adio [radio chat]");
				return 1;
			}
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
				if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** สารวัตร %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ผู้กอง %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ผู้หมวด %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** จ่า %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** นายตำรวจ %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** นักเรียนนายร้อย %s: %s, เปลี่ยน **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** นักเรียนนายร้อย %s: %s, เปลี่ยน **", sendername, result);
				}
				SendRadioMessage(1, TEAM_BLUE_COLOR, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			{
			    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** หัวหน้าเจ้าหน้าที่พิเศษ %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองหัวหน้าเจ้าหน้าที่พิเศษ %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** เอเย๊นพิเศษ %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** เอเย๊น A %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** เอเย๊น B %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** เจ้าหน้าที่ฝึกงาน FBI %s: %s, เปลี่ยน **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** เจ้าหน้าที่ฝึกงาน FBI %s: %s, เปลี่ยน **", sendername, result);
				}
				SendRadioMessage(2, TEAM_BLUE_COLOR, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
			{
			    if(PlayerInfo[playerid][pRank] == 7) { format(string, sizeof(string), "** ผู้บังคับบัญชาการสูงสุด %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** จอมพล %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** พลเอก %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** พันเอก %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ร้อยเอก %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** จ่าสิบเอก %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** นายสิบ %s: %s, เปลี่ยน **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** นายสิบ %s: %s, เปลี่ยน **", sendername, result);
				}
				SendRadioMessage(3, TEAM_BLUE_COLOR, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
   			else if(PlayerInfo[playerid][pMember] == 7 || PlayerInfo[playerid][pLeader] == 7)
			{
				if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** นายกรัฐมนตรี %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** หัวหน้าบอดิ้กาด %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** รองหัวหน้าบอดี้กาด %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** บอดิ้กาดมือขวา %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** บอดี้กาด %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** บอดี้กาดฝึกหัด %s: %s, เปลี่ยน **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** บอดิ้กาดฝึกหัด %s: %s, เปลี่ยน **", sendername, result);
				}
				SendRadioMessage(7, TEAM_BLUE_COLOR, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
			{
				if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** หัวหน้าองกรณ์ลับ %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองหัวหน้าองกร์ลับ %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** องกรณ์ลับขั้น 4 %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** องกรณ์ลับขั้น 3 %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** องกรณ์ลับขั้น 2 %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** องกรณ์ลับขั้น 1 %s: %s, เปลี่ยน **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** องกรณ์ลับขั้น 1 %s: %s, เปลี่ยน **", sendername, result);
				}
				SendRadioMessage(19, TEAM_BLUE_COLOR, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
            else if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
			{
				if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** สารวัตร %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ผู้กอง %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ผู้หมวด %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** จ่า %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** นายตำรวจ %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** นักเรียนนายร้อย %s: %s, เปลี่ยน **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** นักเรียนนายร้อย %s: %s, เปลี่ยน **", sendername, result);
				}
				SendRadioMessage(21, TEAM_BLUE_COLOR, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
            else if(PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
			{
		        if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** จอมพล %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** พลเอก %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** พันเอก %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ร้อยเอก %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** จ่าสิบเอก %s: %s, เปลี่ยน **", sendername, result); }
				else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** นายสิบ %s: %s, เปลี่ยน **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** นายสิบ %s: %s, เปลี่ยน **", sendername, result);
				}
				SendRadioMessage(22, TEAM_BLUE_COLOR, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(gTeam[playerid] == 1||PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)
			{
				format(string, sizeof(string), "** แพทย์ %s: %s, เปลี่ยน **", sendername, result);
				SendRadioMessage(4, TEAM_BLUE_COLOR, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ส่วนหนึ่งในทีม!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[departments]-----------------------------------------------
	if(strcmp(cmd, "/departments", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/d)epartments [department chat]");
				return 1;
			}
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1)
			{
				format(string, sizeof(string), "** เจ้าหน้าที่ตำรวจ %s: %s, เปลี่ยน **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
	    	if(PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
			{
				format(string, sizeof(string), "** เจ้าหน้าที่ตำรวจเมือง LS %s: %s, เปลี่ยน **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			{
				format(string, sizeof(string), "** เจ้าหน้าที่ FBI %s: %s, เปลี่ยน **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
			{
				format(string, sizeof(string), "** นาวิกโยธิน %s: %s, เปลี่ยน **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
            else if(PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
			{
				format(string, sizeof(string), "** นาวิกโยธินเมืองLS %s: %s, เปลี่ยน **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pLeader] == 7)
			{
				format(string, sizeof(string), "** นายกรัฐมนตรี %s: %s, เปลี่ยน **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember] == 7)
			{
				format(string, sizeof(string), "** บอดิ้กาดนายกรัฐมนตรี %s: %s, เปลี่ยน **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]== 19 || PlayerInfo[playerid][pLeader] == 19)
			{
				format(string, sizeof(string), "** องกรณ์ลับ %s: %s, เปลี่ยน **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)
			{
				format(string, sizeof(string), "** แพทย์ %s: %s, เปลี่ยน **", sendername, result);
				SendTeamMessage(2, COLOR_ALLDEPT, string);
				SendTeamMessage(1, COLOR_ALLDEPT, string);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
				ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ส่วนหนึ่งในทีม !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[Wisper]-----------------------------------------------
	if(strcmp(cmd, "/wisper", true) == 0 || strcmp(cmd, "/w", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่ได้ล็อคอิน !");
	            return 1;
	        }
			if ((nowisper) && PlayerInfo[playerid][pAdmin] < 1)
			{
				SendClientMessage(playerid, 0x13F67FAA, "   ระบบ Wisper ถูกปิดโดย Admin !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/w)isper [playerid/PartOfName] [whisper text]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(HidePM[giveplayerid] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นปิดรับระบบกระซิบ !");
			            return 1;
			        }
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					if(giveplayerid == playerid)
					{
						format(string, sizeof(string), "%s บ่นกับตัวเอง", sendername);
						ProxDetector(0.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/w)isper [playerid/PartOfName] [whisper text]");
						return 1;
					}
					format(string, sizeof(string), " %s (ID: %d): %s", sendername, playerid, (result));
					SendClientMessage(giveplayerid, 0x13F67FAA, string);
					format(string, sizeof(string), " ถึง %s (ID: %d): %s", giveplayer, giveplayerid, (result));
					SendClientMessage(playerid,  0x13F67FAA, string);
					SBizzInfo[2][sbTill] += txtcost / 2;
					ExtortionSBiz(2, txtcost / 2);
					return 1;
				}
			}
			else
			{
					format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//----------------------------------[offduty]-----------------------------------------------
	if(strcmp(cmd, "/duty", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
			{
				if (PlayerToPoint(3, playerid,-1616.7435,683.4896,7.1875))
				{
					if(OnDuty[playerid] == 0)
			        {
				    	format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้หยิบตราและปืนออกจากห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 24, 147);
						GivePlayerWeapon(playerid, 41, 1000);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 3, 1);
						SetPlayerArmour(playerid, 100);
			            SetPlayerHealth(playerid, 100);
						OnDuty[playerid] = 1;
					}
					else if(OnDuty[playerid] == 1)
					{
						format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้เก็บตราและปืนเข้าห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						SetPlayerArmour(playerid, 0);
						OnDuty[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ห้องเก็บของ !");
					return 1;
				}
			}
            else if(PlayerInfo[playerid][pMember] == 21||PlayerInfo[playerid][pLeader] == 21)
			{
				if (PlayerToPoint(3, playerid,1579.7631,-1636.1940,13.5595))
				{
					if(OnDuty[playerid] == 0)
			        {
				    	format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้หยิบตราและปืนออกจากห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 24, 147);
						GivePlayerWeapon(playerid, 41, 1000);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 3, 1);
						SetPlayerArmour(playerid, 100);
			            SetPlayerHealth(playerid, 100);
						OnDuty[playerid] = 1;
					}
					else if(OnDuty[playerid] == 1)
					{
						format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้เก็บตราและปืนเข้าห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						SetPlayerArmour(playerid, 0);
						OnDuty[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ห้องเก็บของ !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
			{
				if (PlayerToPoint(3, playerid,-1346.2050,492.3983,11.2027))
				{
					if(OnDuty[playerid] == 0)
			        {
				    	format(string, sizeof(string), "* นาวิกโยธิน %s ได้หยิบตราและปืนออกจากห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			            ResetPlayerWeapons(playerid);
			            GivePlayerWeapon(playerid, 24, 147);
			            GivePlayerWeapon(playerid, 31, 250);
			            GivePlayerWeapon(playerid, 34, 250);
			            GivePlayerWeapon(playerid, 41, 1000);
			            GivePlayerWeapon(playerid, 27, 147);
			            GivePlayerWeapon(playerid, 29, 300);
			            GivePlayerWeapon(playerid, 16, 20);
			            GivePlayerWeapon(playerid, 45, 1);
			            GivePlayerWeapon(playerid, 4, 1);
			            SetPlayerArmour(playerid, 100);
		            	SetPlayerHealth(playerid, 100);
                        OnDuty[playerid] = 1;
					}
					else if(OnDuty[playerid] == 1)
					{
						format(string, sizeof(string), "* นาวิกโยธิน %s ได้เก็บตราและปืนเข้าห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						SetPlayerArmour(playerid, 0);
						OnDuty[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ห้องเก็บของ !");
					return 1;
				}
			}
            else if(PlayerInfo[playerid][pMember] == 22||PlayerInfo[playerid][pLeader] == 22)
			{
				if (PlayerToPoint(3, playerid,2744.9077,-2453.8093,13.8623))
				{
					if(OnDuty[playerid] == 0)
			        {
				    	format(string, sizeof(string), "* นาวิกโยธิน %s ได้หยิบตราและปืนออกจากห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			            ResetPlayerWeapons(playerid);
			            GivePlayerWeapon(playerid, 24, 147);
			            GivePlayerWeapon(playerid, 31, 250);
			            GivePlayerWeapon(playerid, 34, 250);
			            GivePlayerWeapon(playerid, 41, 1000);
			            GivePlayerWeapon(playerid, 27, 147);
			            GivePlayerWeapon(playerid, 29, 300);
			            GivePlayerWeapon(playerid, 16, 20);
			            GivePlayerWeapon(playerid, 45, 1);
			            GivePlayerWeapon(playerid, 4, 1);
			            SetPlayerArmour(playerid, 100);
		            	SetPlayerHealth(playerid, 100);
                        OnDuty[playerid] = 1;
					}
					else if(OnDuty[playerid] == 1)
					{
						format(string, sizeof(string), "* นาวิกโยธิน %s ได้เก็บตราและปืนเข้าห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						SetPlayerArmour(playerid, 0);
						OnDuty[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ห้องเก็บของ !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
			{
				if (PlayerToPoint(3, playerid,-690.1140,941.3155,13.6328))
				{
					if(OnDuty[playerid] == 0)
			        {
				    	format(string, sizeof(string), "* เจ้าหน้าที่ FBI %s ได้หยิบตราและปืนออกจากห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			            ResetPlayerWeapons(playerid);
			            GivePlayerWeapon(playerid, 24, 147);
			            GivePlayerWeapon(playerid, 41, 1000);
			            GivePlayerWeapon(playerid, 27, 147);
			            GivePlayerWeapon(playerid, 31, 250);
			            GivePlayerWeapon(playerid, 34, 250);
			            GivePlayerWeapon(playerid, 3, 1);
			            GivePlayerWeapon(playerid, 29, 300);
			            GivePlayerWeapon(playerid, 44, 1);
                        GivePlayerWeapon(playerid, 3, 0);
			            SetPlayerArmour(playerid, 100);
		            	SetPlayerHealth(playerid, 100);
                        OnDuty[playerid] = 1;
					}
					else if(OnDuty[playerid] == 1)
					{
						format(string, sizeof(string), "* เจ้าหน้าที่ FBI %s ได้เก็บตราและปืนเข้าห้องเก็บของ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						SetPlayerArmour(playerid, 0);
						OnDuty[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ห้องเก็บของ !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 19||PlayerInfo[playerid][pLeader] == 19)
			{
				if (PlayerToPoint(3, playerid,-2237.2070,2354.2764,4.9798))
				{
					if(OnDuty[playerid] == 0)
			        {
				    	format(string, sizeof(string), "* เจ้าหน้าที่องกร์ลับ %s ได้หยิบตราและอุปกรณ์การสังหารอกชออกมาจากห้องลับ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			            ResetPlayerWeapons(playerid);
			            GivePlayerWeapon(playerid, 24, 500);
			            GivePlayerWeapon(playerid, 41, 1000);
			            GivePlayerWeapon(playerid, 27, 500);
			            GivePlayerWeapon(playerid, 31, 500);
			            GivePlayerWeapon(playerid, 34, 250);
			            GivePlayerWeapon(playerid, 4, 1);
			            GivePlayerWeapon(playerid, 29, 500);
			            GivePlayerWeapon(playerid, 45, 1);
			            GivePlayerWeapon(playerid, 16, 20);
			            SetPlayerArmour(playerid, 120);
		            	SetPlayerHealth(playerid, 120);
                        OnDuty[playerid] = 1;
					}
					else if(OnDuty[playerid] == 1)
					{
						format(string, sizeof(string), "* เจ้าหน้าที่องกร์ลับ %s ได้เก็บตราและอุปกรณ์การสังหารเก็บเข้าไปในห้องลับ", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						SetPlayerArmour(playerid, 0);
						OnDuty[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่หน้าห้องลับ !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 7||PlayerInfo[playerid][pLeader] == 7)
			{
				if (PlayerToPoint(3, playerid,356.2641,152.2074,1025.7891))
				{
					if(OnDuty[playerid] == 0)
			        {
				    	format(string, sizeof(string), "* %s ได้สวมเกราะและหยิบปืน", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			            ResetPlayerWeapons(playerid);
			            GivePlayerWeapon(playerid, 24, 147);
						GivePlayerWeapon(playerid, 29, 300);
			            GivePlayerWeapon(playerid, 41, 1000);
			            SetPlayerArmour(playerid, 100);
			            SetPlayerHealth(playerid, 100);
                        OnDuty[playerid] = 1;
					}
					else if(OnDuty[playerid] == 1)
					{
						format(string, sizeof(string), "* %s ได้ถอดเกราะและเก็บปืน", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeapons(playerid);
						SetPlayerArmour(playerid, 0);
						OnDuty[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ห้องเก็บของ !");
					return 1;
				}
			}
            else if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4)
			{
			    if(JobDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้หยุดรับงานแล้ว!");
			        JobDuty[playerid] = 0;
			        Medics -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้รับงานแล้ว ถ้ามีใครต้องการหมอ คุณจะรู้ทันที!");
			        JobDuty[playerid] = 1;
			        Medics += 1;
			    }
			}
			else if(PlayerInfo[playerid][pJob] == 7)
			{
			    if(JobDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้หยุดรับงานแล้ว");
			        JobDuty[playerid] = 0;
			        Mechanics -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้รับงานแล้ว ถ้าใครต้องการช่างซ่อมรถคุณจะรู้ทันที!");
			        JobDuty[playerid] = 1;
			        Mechanics += 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่ ตำรวจ/FBI/นาวิกโยธิน/หมอ !");
			}
		}
		return 1;
	}
//adminduty//
    if(strcmp(cmd, "/adminduty", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 2)
	        {
	            if(PlayerInfo[playerid][pAdmin] != 1 || PlayerInfo[playerid][pAdmin] != 5 || PlayerInfo[playerid][pAdmin] != 1338 || PlayerInfo[playerid][pAdmin] != 1340)
	        	{
		            if (adminonduty[playerid] == 0)
					{
			            GetPlayerName(playerid, sendername, sizeof(sendername));
			            SetPlayerColor(playerid,0x00F6A8AA);
						SetPlayerArmour(playerid, 9999999);
						SetPlayerHealth(playerid, 9999999);
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
							format(string, sizeof(string),"%s กำลังปฎิบัตหน้าที่ในการเป็นแอดมิน.",sendername);
							SendClientMessageToAll(0x00F6A8AA,string);
						}
                        else if (PlayerInfo[playerid][pAdmin] >= 2 && PlayerInfo[playerid][pAdmin] <= 4)
						{
							format(string, sizeof(string),"%s กำลังปฎิบัตหน้าที่ในการเป็นแอดมิน.",sendername);
							SendClientMessageToAll(0x00F6A8AA,string);
						}
						else if (PlayerInfo[playerid][pAdmin] >= 1337)
						{
							format(string, sizeof(string),"%s กำลังปฎิบัตหน้าที่ในการเป็นแอดมิน.",sendername);
							SendClientMessageToAll(0x00F6A8AA,string);
                        }
                        else if (PlayerInfo[playerid][pAdmin] >= 1339)
                        {
                           	format(string, sizeof(string),"%s กำลังปฎิบัตหน้าที่ในการเป็นแอดมิน.",sendername);

                            SendClientMessageToAll(0x00F6A8AA,string);
                        }
						adminonduty[playerid] = 1;
				/*		for(new h = 0; h < CAR_AMOUNT; h++)
				     	{
							SetVehicleParamsForPlayer(h,playerid,0,0);
						}*/
					}
					else if (adminonduty[playerid] == 1)
					{
			            GetPlayerName(playerid, sendername, sizeof(sendername));
						SetPlayerToTeamColor(playerid);
						SetPlayerArmour(playerid, 0);
						SetPlayerHealth(playerid, 100);
						format(string, sizeof(string),"%s เค้ากลับมาเล่นตามปกติในฐานะแอดมินแล้วแล้ว.",sendername);
						SendClientMessageToAll(0x00F6A8AA,string);
						adminonduty[playerid] = 0;
					}
                }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   คุณต้องแสดงชื่อในรายชื่อแอดมินก่อน(/hnal) !");
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not an Admin!");
	            return 1;
	        }
	    }
		return 1;
	}
//----------------------------------[mdc]-----------------------------------------------
	if(strcmp(cmd, "/mdc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!IsACop(playerid))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ตำรวจ !");
	            return 1;
	        }
			new tmpcar = GetPlayerVehicleID(playerid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /mdc [playerid/PartOfName]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsACopCar(tmpcar)||PlayerToPoint(5.0, playerid, 253.9280,69.6094,1003.6406))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						SendClientMessage(playerid, TEAM_BLUE_COLOR,"______-=MOBILE DATA COMPUTER=-_______");
						format(string, sizeof(string), "Name : %s", sendername);
						SendClientMessage(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "Crime : %s", PlayerCrime[giveplayerid][pAccusedof]);
						SendClientMessage(playerid, COLOR_GRAD2,string);
						format(string, sizeof(string), "Claimant : %s", PlayerCrime[giveplayerid][pVictim]);
						SendClientMessage(playerid, COLOR_GRAD3,string);
						format(string, sizeof(string), "Reported : %s", PlayerCrime[giveplayerid][pAccusing]);
						SendClientMessage(playerid, COLOR_GRAD4,string);
						format(string, sizeof(string), "Accused : %s", PlayerCrime[giveplayerid][pBplayer]);
						SendClientMessage(playerid, COLOR_GRAD5,string);
						SendClientMessage(playerid, TEAM_BLUE_COLOR,"_______________________________________");
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่บนรถตำรวจ.");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[SetCrim]-----------------------------------------------
	if(strcmp(cmd, "/suspect", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/su)spect [playerid/PartOfName] [crime discription]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3|| PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19|| PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21|| PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				if(IsACop(giveplayerid))
				{
					SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถยัดคดี ตำรวจ/FBI/นาวิกโยธิน ได้ !");
					return 1;
				}
				if(giveplayerid != INVALID_PLAYER_ID)
				{
						if (gTeam[giveplayerid] != 2)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/su)spect [playerid/PartOfName] [crime text]");
								return 1;
							}
							if(WantedPoints[giveplayerid] == 0) { WantedPoints[giveplayerid] = 2; }
							else { WantedPoints[giveplayerid]+= 2; }
							SetPlayerCriminal(giveplayerid,playerid, result);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่สามารถตั้งคดีให้กับตำรวจได้ !");
						}
					}
				}
				else
				{
						format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ใช่ ตำรวจ/FBI/นาวิกโยธิน !");
			}
		}
		return 1;
    }
	//--------------------------------=[Roadblock]=-----------------------------------
	if(strcmp(cmdtext, "/roadblock", true)==0 || strcmp(cmdtext, "/rb", true)==0)
	{
		if (PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1) return SendClientMessage(playerid, COLOR_GREY, "You are not a cop!");
		if (PlayerInfo[playerid][pRoadblock] != 0) return SendClientMessage(playerid, COLOR_GREY, " คุณได้ตั้งด่านไปแล้ว 1 ที่ โปรดเก็บด่านขอบคุณก่อนวางอีกครั้ง (พิมพ์ /rrb)");
		if (roadblocktimer != 0) return SendClientMessage(playerid, COLOR_GREY, "กรุณารอสักครู่คุณพึ้งตั่งด่านไปไม่นาน!");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		PlayerInfo[playerid][pRoadblock] = CreateObject(981, X, Y, Z, 0.0, 0.0, A+180);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Roadblock ~r~Placed", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, " ตั้งด่านแล้ว!!! (เก็บด่านให้พิมพ์/rrb หรือ /roadunblock)");
		//roadblocktimer = 1;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "HQ: คุณ %s ได้ตั้งด่านไว้แถวๆสิ่งก่อสร้างสักที่นึง", sendername);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
				{
					SetPlayerCheckpoint(playerid, X, Y, Z-10, 1.0);
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pRank] >= 5 && PlayerInfo[i][pMember] || PlayerInfo[i][pLeader] == 1)
					{
						SendClientMessage(i, COLOR_YELLOW, "คุณสามารถเก็บด่านทั้งหมดโดยการพิมพ์ /rrball");
					}
				}
			}
		}
		SetTimer("ResetRoadblockTimer", 6000, false);
		return 1;
	}

	if(strcmp(cmdtext, "/roadunblock", true)==0 || strcmp(cmdtext, "/rrb", true)==0)
	{
		if (PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "คุณไม่ใช่ตำรวจ!");
			return 1;
		}
		if (PlayerInfo[playerid][pRank] < 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "ต้องมียศมากกว่า 2 หรือมากกว่า !");
			return 1;
		}
		if (PlayerInfo[playerid][pRoadblock] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "คุณยังไม่ได้ตั้งด่าน แล้วจะให้เก็บไรละ");
			return 1;
		}
		RemoveRoadblock(playerid);
		SendClientMessage(playerid, COLOR_GREEN, "เก็บด่านเรียบร้อยแล้ว");
		return 1;
	}

	if(strcmp(cmdtext, "/roadunblockall", true)==0 || strcmp(cmdtext, "/rrball", true)==0)
	{
		if (PlayerInfo[playerid][pRank] >= 5 && PlayerInfo[playerid][pMember] || PlayerInfo[playerid][pLeader] == 1)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(PlayerInfo[i][pRoadblock] != 0)
				{
					RemoveRoadblock(i);
				}
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "HQ: ด่านทั้งหมดถูกเก็บโดย %s.", sendername);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pMember] == 1 || PlayerInfo[i][pLeader] == 1)
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}

			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "คุณต้องมียศมากกว่าหรือเท่ากับ 5 เท่านั้น");
		}
		return 1;
     }
//----------------------------------[LOCK]-----------------------------------------------
	if(strcmp(cmd, "/lock", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new carid;
            if (PlayerInfo[playerid][pLevel] == 1)
			{
				if(gLastCar[playerid] == 0 && PlayerInfo[playerid][pPhousekey] == 255)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You dont have a Vehicle.");
					return 1;
				}
				else if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pPhousekey]+1)
				{
					if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] != 299)
					{
						gLastDriver[HireCar[playerid]] = 300;
						gCarLock[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
					}
					HireCar[playerid] = gLastCar[playerid];
				}
			}
			if (PlayerInfo[playerid][pPhousekey] == 255)
			{
				if(HireCar[playerid] == 299)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You dont have a Vehicle.");
					return 1;
				}
			}
			carid = PlayerInfo[playerid][pPhousekey]+1;
			if(HireCar[playerid] != 299 && !SwitchKey[playerid])
			{
				carid = HireCar[playerid];
			}
			//new driver = gLastDriver[carid];
			new lockstatus = gCarLock[carid];
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			switch (lockstatus)
			{
				case 0:
				{
					if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   You dont have a Vehicle");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Hire Vehicle ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCar(carid);
					}
					else if (PlayerInfo[playerid][pPhousekey] == carid-1)
					{
						GameTextForPlayer(playerid, "~w~House Vehicle ~r~Locked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 1;
						LockCar(carid);
						return 1;
					}
				}
				case 1:
				{
					if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   You dont have a Vehicle");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Hire Vehicle ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCar(carid);
					}
					if (PlayerInfo[playerid][pPhousekey] == carid-1)
					{
						GameTextForPlayer(playerid, "~w~House Vehicle ~g~Unlocked", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						gCarLock[carid] = 0;
						UnLockCar(carid);
						return 1;
					}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Error");
				}
			}
			if(carid == 256)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You dont have a Vehicle !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/open", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(PlayerInfo[playerid][pPhousekey] == i)
					{
						if(HouseInfo[i][hLock] == 1)
						{
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~Door ~g~Unlocked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(HouseInfo[i][hLock] == 0)
						{
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~Door ~r~Locked", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
							SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~w~Bussiness ~g~Open", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~w~Bussiness ~r~Closed", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You Dont Have A Key", 5000, 6);
						return 1;
					}
				}
			}
	    }
	    return 1;
	}
    if(strcmp(cmd, "/setjob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setjob [playerid/PartOfName] [JobID(1-12)]");
				return 1;
			}
   			new level;
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 17|| level < 1) { SendClientMessage(playerid, COLOR_GREY, "   Dont go below number 0, or above number 12!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playerid))
			    {
			        if(playerid != INVALID_PLAYER_ID)
			        {
			            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid,sendername, sizeof(sendername));
						PlayerInfo[giveplayerid][pJob] = level;
                        format(string, 256, "AdmWarning: %s ได้ปรับอาชีพให้ %s เป็นอาชีพที่ %d", sendername,giveplayer,level);
                        SendAdminMessage(COLOR_YELLOW, string);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[GETGUN]-----------------------------------------------
	if(strcmp(cmd, "/getgun", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(PlayerInfo[playerid][pMember] == 12||PlayerInfo[playerid][pLeader] == 12)
			{
				if (PlayerToPoint(6, playerid,2492.6484,-1702.5197,1018.3438))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 5, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดของแก๊งค์ในตอนแรก !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 13||PlayerInfo[playerid][pLeader] == 13)
			{
				if (PlayerToPoint(6, playerid,307.7400,1122.2672,1083.8828))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 5, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดของแก๊งค์ในตอนแรก !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 14||PlayerInfo[playerid][pLeader] == 14)
			{
				if (PlayerToPoint(6, playerid,2246.8684,-1161.3959,1029.7969))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 5, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดของแก๊งค์ในตอนแรก !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 15||PlayerInfo[playerid][pLeader] == 15)
			{
				if (PlayerToPoint(6, playerid,2261.0935,-1222.1864,1049.0234))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 5, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดของแก๊งค์ในตอนแรก !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 16||PlayerInfo[playerid][pLeader] == 16)
			{
				if (PlayerToPoint(6, playerid,2329.8027,-1182.8723,1027.9766))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 15, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดของแก๊งค์ในตอนแรก !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 17||PlayerInfo[playerid][pLeader] == 17)
			{
				if (PlayerToPoint(6, playerid,-2533.5793,1220.4492,37.4219))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 7, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดของแก๊งค์ในตอนแรก !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 18||PlayerInfo[playerid][pLeader] == 18)
			{
				if (PlayerToPoint(6, playerid,-1716.4918,1018.1818,17.5859))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 7, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดของแก๊งค์ในตอนแรก !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 20||PlayerInfo[playerid][pLeader] == 20)
			{
				if (PlayerToPoint(6, playerid,-2184.8813,-262.8727,40.7195))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 7, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดของแก๊งค์ในตอนแรก !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 5||PlayerInfo[playerid][pLeader] == 5)
			{
				if (PlayerToPoint(6, playerid,1230.5728,-807.8337,1084.0078))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 7, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดขององค์กรในตอนแรก !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6)
			{
				if (PlayerToPoint(6, playerid,-2160.4790,645.9357,1057.5861))
				{
				    	format(string, sizeof(string), "* %s ได้หยิบปืนออกจากคลัง พร้อมกินอาหารไปด้วย", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 8, 1);
						GivePlayerWeapon(playerid, 18, 2);
			            SetPlayerHealth(playerid, 100);
					}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ตอนเกิดขององค์กรในตอนแรก !");
					return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่ แก๊งค์/องค์กร !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dw", true) == 0 || strcmp(cmd, "/dropweapon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerCuffed[playerid] > 1)
			{
					SendClientMessage(playerid, COLOR_GRAD2, "คุณครับอย่าแม้แต่ที่จะคิด..อย่าแม้แต่ที่จะทำ...");
					return 1;
			}
	        if(PlayerFrozened[playerid] == 1)
			{
					SendClientMessage(playerid, COLOR_GRAD2, "คุณครับอย่าแม้แต่ที่จะคิด..อย่าแม้แต่ที่จะทำ...");
					return 1;
			}
		 	ApplyAnimation(playerid, "GRENADE", "WEAPON_throwu", 4.0999, 0, 0, 0, 0, 0);
		 	ResetPlayerWeapons(playerid);
		 	GetPlayerName(playerid, sendername, sizeof(sendername));
		 	format(string, sizeof(string), "* %s ได้ทิ้งอาวุธทั้งหมดลงพื้น", sendername);
		 	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		 	}
		return 1;
	}
	if(strcmp(cmd, "/handsup", true) == 0|| strcmp(cmd, "/hs", true) == 0)
	{
	    if(PlayerCuffed[playerid] > 1)
			{
					SendClientMessage(playerid, COLOR_GRAD2, "คุณครับอย่าแม้แต่ที่จะคิด..อย่าแม้แต่ที่จะทำ...");
					return 1;
			}
	    if(PlayerFrozened[playerid] == 1)
			{
					SendClientMessage(playerid, COLOR_GRAD2, "คุณครับอย่าแม้แต่ที่จะคิด..อย่าแม้แต่ที่จะทำ...");
					return 1;
			}
	    if(IsPlayerConnected(playerid))
	    {
		 SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
		 GetPlayerName(playerid, sendername, sizeof(sendername));
		 }
		return 1;
	}
//----------------------setbomb---------------------------//
    if(strcmp(cmd, "/bombveh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่แอดมินไม่สามารถใช้คำสั่งนี้ได้!");
			    return 1;
			}
			if(gLastCar[playerid] == 0)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   โปรดขับรถที่ต้องการจะติดตั้งระเบิดก่อน!");
			    return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    format(string, sizeof(string), "*Admin %s ได้กดระเบิดรถคันนี้แล้ว !", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetVehicleHealth(gLastCar[playerid], 0.0);
			gLastCar[playerid] = 0;
		    new Float:pXx, Float:pYy, Float:pZz;
			GetPlayerPos(playerid,pXx,pYy,pZz);
			PlayerPlaySound(playerid,1056,pXx,pYy,pZz);
		}
		return 1;
	}
//----------------------------------------------------------------
    if(strcmp(cmd, "/curfew", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2|| PlayerInfo[playerid][pLeader] == 3|| PlayerInfo[playerid][pLeader] == 19)
		{
		    if(PlayerInfo[playerid][pRank] < 6)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				return 1;
			}
			curfew = 1;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "Dispatch: การเคอฟิวได้เริ่มต้นขึ้นแล้ว รีโหลดกระสุนแล้วลุยเลย !");
			SendRadioMessage(1, TEAM_BLUE_COLOR, string);
			SendRadioMessage(2, TEAM_BLUE_COLOR, string);
			SendRadioMessage(3, TEAM_BLUE_COLOR, string);
			format(string, sizeof(string), "* %s ได้เปิดคำสั่งปัฏิบัติการเคอฟิวล์!!", sendername);
			SendClientMessageToAll(COLOR_SUPERRED, string);
            format(string, sizeof(string), "%s แจ้งมาว่า : ข่าวร้ายเกิดการปัติวัติเมืองเกิดความกนลาหล !!", sendername);
            SendClientMessageToAll(COLOR_SUPERRED, string);
            format(string, sizeof(string), "%s แจ้งมาว่า : นายจ้างเลิกจ้างงานขอให้ประชาชนทุกคนหลบอยู่ในที่ปลอดภัย !!", sendername);
			SendClientMessageToAll(COLOR_SUPERRED, string);
            format(string, sizeof(string), "%s แจ้งมาว่า : ท่านอาจโดนลูกหลงได้!!", sendername);
			SendClientMessageToAll(COLOR_SUPERRED, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/uncurfew", true) == 0)
	{
		if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2|| PlayerInfo[playerid][pLeader] == 3|| PlayerInfo[playerid][pLeader] == 19)
		{
		    if(PlayerInfo[playerid][pRank] < 6)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				return 1;
			}
			curfew = 0;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "Dispatch: ยกเลิกเคอฟิว จนท.ทุกคนไปทำงานปกติซะ !");
			SendRadioMessage(1, TEAM_BLUE_COLOR, string);
			SendRadioMessage(2, TEAM_BLUE_COLOR, string);
			SendRadioMessage(3, TEAM_BLUE_COLOR, string);
			format(string, sizeof(string), "* %s ได้ปิดคำสั่งปัฏิบัติการเคอฟิวล์~", sendername);
			SendClientMessageToAll(0x00F600AA, string);
            format(string, sizeof(string), "%s แจ้งมาว่า : ข่าวดีเมืองของเรากลับสู้สภาพปกติแล้ว", sendername);
			SendClientMessageToAll(0x00F600AA, string);
            format(string, sizeof(string), "%s แจ้งมาว่า : นายจ้างได้กลับมาจ้างงานเหมือนเดิมขอให้ประชาชนทุกคนกลับไปทำงานตามสภาวะปกติ", sendername);
			SendClientMessageToAll(0x00F600AA, string);
		}
		return 1;
	}

//--------------------- AFK Mode -----------------------//
	if(strcmp(cmd, "/afk", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(SpamStrings[playerid] >= MAX_SPAM)
   				{
		    		SendClientMessage(playerid,COLOR_WHITE," กรุณารอซักครู่...");
	        		return 1;
	        	}
			if (PlayerToPoint(10, playerid,-1969.3550,137.9173,27.6875))
				{
				if (WantedLevel[playerid] > 0 || WantedPoints[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GRAD2, " คุณมีค่าความต้องการตัวไม่สามารถใช้คำสั่งนี้ได้");
					return 1;
				}
					else if(OnAFK[playerid] == 0)
			        {
				    	format(string, sizeof(string), "* %s ได้เปลี่ยนสถานะเป็น Away From Keyborad", sendername);
						SendClientMessageToAll(TEAM_AZTECAS_COLOR, string);
						TogglePlayerControllable(playerid, 0);
						PlayerFrozened[playerid] = 1;
						OnAFK[playerid] = 1;
						SpamStrings[playerid] += 15;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
						ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 0, 0, 0, 0, 0);
					}
					else if(OnAFK[playerid] == 1)
					{
						format(string, sizeof(string), "* %s ได้เปลี่ยนสถานะกลับเป็นปกติ", sendername);
						SendClientMessageToAll(COLOR_DBLUE, string);
						TogglePlayerControllable(playerid, 1);
						PlayerFrozened[playerid] = 0;
						OnAFK[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, " คุณไม่ได้อยู่บริเวณสถานที่ AFK (พิมพ์ /gps 13 เพื่อดูสถานที่) !");
					return 1;
				}

		}
		return 1;
	}
//----------------------robthink-------------------------
    if(strcmp(cmd, "/rob24", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pRobber] == 1)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, " ไม่คิดว่าปล้นถี่ไปหน่อยหรือ หัดไปมอบตัวซะบ้างนะ!");
			    SendClientMessage(playerid, COLOR_LIGHTRED, " ถ้าอยากจะปล้นอีกก็ออกเกมเข้าใหม่ซะ(คิดดูให้ดีออกเกมก็ติดคุกนะ)!");
			    return 1;
			}
			if (!PlayerToPoint(5, playerid,-1983.4200,83.1155,27.6875))//centerpoint 24-7
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ใน 24-7 !");
				return 0;
			}
			if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2|| PlayerInfo[playerid][pLeader] == 3|| PlayerInfo[playerid][pLeader] == 7||PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2|| PlayerInfo[playerid][pMember] == 3|| PlayerInfo[playerid][pMember] == 7)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "* เจ้าหน้าที่ที่ดีต้องไม่ทำแบบนี้ คุณจะต้องถูกไล่ออก!");
				return 1;
			}
			if(PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "คุณต้องมีเลเวล 3 ถึงจะทำ้การปล้น 24/7 ได้");
				return 1;
			}
			if(PlayerInfo[playerid][pRobber] == 0)
		    {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new robmoney = 5000 + random (8000);
          		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 0); // Rob
				format(string, sizeof(string), "** หน่วยข่าวกรอง: 24/7 ใน เมืองของเราถูกปล้นโดย %s ขอกำลังติดตามตัวโดยด่วน, เปลี่ยน **", sendername);
				SendRadioMessage(1, TEAM_BLUE_COLOR, string);
				WantedPoints[playerid] += 6; SetPlayerCriminal(playerid,255, " ปล้น 24/7 ");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "** คุณถูกจับภาพผ่านทางกล้องวงจรปิดรีบหนีซ้ะ! **");
				format(string,sizeof(string), "* %s ชี้ปืนไปที่หน้าเคาเตอร์เพื่อพยายามปล้น 24/7", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  				format(string, sizeof(string), "** การปล้น 24/7 เสร็จสมบูรณ์ได้รับเงิน $%d จากการปล้น! **",robmoney);
   				SendClientMessage(playerid,COLOR_YELLOW,string);
   				format(string, sizeof(string), "~w~Robbery Sucessful~n~~g~$%d",robmoney);
				GameTextForPlayer(playerid, string, 5000, 1);
				SBizzInfo[9][sbTill] -= robmoney;
				PlayerInfo[playerid][pRobber] = 1;
				SafeGivePlayerMoney(playerid, robmoney);
 			}
		}
		return 1;
	}
	if(strcmp(cmd, "/robbank", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pRobber] == 1)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, " ไม่คิดว่าปล้นถี่ไปหน่อยหรือ หัดไปมอบตัวซะบ้างนะ!");
			    SendClientMessage(playerid, COLOR_LIGHTRED, " ถ้าอยากจะปล้นอีกก็ออกเกมเข้าใหม่ซะ(คิดดูให้ดีออกเกมก็ติดคุกนะ)!");
			    return 1;
			}
			if(!PlayerToPoint(5, playerid,2315.9285,-12.6594,26.7422))
	        {
	            return 1;
	        }
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2|| PlayerInfo[playerid][pLeader] == 3|| PlayerInfo[playerid][pLeader] == 7||PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2|| PlayerInfo[playerid][pMember] == 3|| PlayerInfo[playerid][pMember] == 7)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "* เจ้าหน้าที่ที่ดีต้องไม่ทำแบบนี้ คุณจะต้องถูกไล่ออก!");
				return 1;
			}
			if(PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "คุณต้องมีเลเวล 3 ถึงจะทำ้การปล้น ธนาคาร ได้");
				return 1;
			}
			if(PlayerInfo[playerid][pRobber] == 0)
		    {
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new robmoney = 8000 + random (10000);
          		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 0, 0); // Rob
				format(string, sizeof(string), "** หน่วยข่าวกรอง: ธนาคารใน San Fierro ถูกปล้นโดย %s ! **", sendername);
				SendRadioMessage(1, TEAM_BLUE_COLOR,string);
				WantedPoints[playerid] += 10;SetPlayerCriminal(playerid,255, " ปล้นธนาคาร ");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณถูกจับภาพผ่านทางกล้องวงจรปิด รีบหนีซ้ะ!");
				format(string,sizeof(string), "* %s ชี้ปืนไปที่หน้าเคาเตอร์เพื่อพยายามปล้นธนาคาร", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
  				format(string, sizeof(string), "** การปล้นธนาคารเสร็จสมบูรณ์คุณไดรับเงินจำนวน $%d จากการปล้นครั่งนี้! **",robmoney);
   				SendClientMessage(playerid,COLOR_YELLOW,string);
   				format(string, sizeof(string), "~w~Robbery Sucessful~n~~g~$%d",robmoney);
				GameTextForPlayer(playerid, string, 5000, 1);
				PlayerInfo[playerid][pRobber] = 1;
				SafeGivePlayerMoney(playerid, robmoney);
 			}
		}
		return 1;
	}
	if(strcmp(cmd, "/buy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!PlayerToPoint(100, playerid,-1983.4200,83.1155,27.6875))//centerpoint 24-7
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You are not in a 24-7 !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /buy [item number]");
				SendClientMessage(playerid, COLOR_GREEN, "|_______ 24-7 _______|");
				SendClientMessage(playerid, COLOR_GRAD1, "| 1: โทรศัพท์มือถือ $999		2: บัตรเติมเงิน $7500");
				SendClientMessage(playerid, COLOR_GRAD2, "| 3: สมุดโทรศัพท์ $5000		4: ลูกเต๋า $500");
				SendClientMessage(playerid, COLOR_GRAD3, "| 5: เชือก $250          	6: กุญแจล๊อครถ $10000 (สินค้าหมด)");
				SendClientMessage(playerid, COLOR_GRAD4, "| 7: เกจวัดความเร็วรถ $5000		8: ถุงยางอนามัย $50");
				SendClientMessage(playerid, COLOR_GRAD5, "| 9: ซีดีเพลง $2500		10: ไก่ $10	");
				SendClientMessage(playerid, COLOR_GRAD5, "| 11: แฮมเบอร์เกอร์ $10		12: พืชซ่าแช่แข็ง $10");
				return 1;
			}
			new item = strval(tmp);
			if(SBizzInfo[9][sbProducts] == 0)
			{
				GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
				return 1;
			}
			if (item == 1 && ScriptMoney[playerid] > 999)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 999 - price;
			        format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
					SafeGivePlayerMoney(playerid,- payout);
					SBizzInfo[9][sbTill] += payout;
					ExtortionSBiz(9, payout);
			    }
			    else
			    {
			        format(string, sizeof(string), "~r~-$%d", 999);
					GameTextForPlayer(playerid, string, 5000, 1);
					SafeGivePlayerMoney(playerid,-999);
					SBizzInfo[9][sbTill] += 999;
					ExtortionSBiz(9, 999);
			    }
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new randphone = 10001 + random(89999);//minimum 10000  max 99999
				PlayerInfo[playerid][pPnumber] = randphone;
				format(string, sizeof(string), "   เบอร์โทรศัพท์ของคุณหมายเลข %d", randphone);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_GRAD5, "คุณสามารถดูเบอร์โทรศัพท์ของคุณได้โดยการพิมพ์ /stats");
				SendClientMessage(playerid, COLOR_WHITE, "HINT: คุณสามารถ /help เพื่อดูคำสั่งเกี่ยวกับโทรศัพท์ได้.");
				return 1;
			}
			else if (item == 2 && ScriptMoney[playerid] > 7500)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 7500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 7500 - price;
					SafeGivePlayerMoney(playerid,- payout);
					SBizzInfo[9][sbTill] += payout;
					ExtortionSBiz(9, payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid,-7500);
					SBizzInfo[9][sbTill] += 7500;
					ExtortionSBiz(9, 7500);
					format(string, sizeof(string), "~r~-$%d", 1000);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new prize;
				new symb1[32]; new symb2[32]; new symb3[32];
				new randcard1 = random(10);//minimum 1000  max 9999
				new randcard2 = random(10);//minimum 1000  max 9999
				new randcard3 = random(10);//minimum 1000  max 9999
				if(randcard1 >= 5)
				{
					format(symb1, sizeof(symb1), "~b~]");
					randcard1 = 1;
				}
				else if(randcard1 <= 4 && randcard1 >= 2)
				{
					format(symb1, sizeof(symb1), "~g~]");
					randcard1 = 2;
				}
				else if(randcard1 < 2)
				{
					format(symb1, sizeof(symb1), "~y~]");
					randcard1 = 3;
				}
				if(randcard2 >= 5)
				{
					format(symb2, sizeof(symb2), "~b~]");
					randcard2 = 1;
				}
				else if(randcard2 <= 4 && randcard2 >= 2)
				{
					format(symb2, sizeof(symb2), "~g~]");
					randcard2 = 2;
				}
				else if(randcard2 < 2)
				{
					format(symb2, sizeof(symb2), "~y~]");
					randcard2 = 3;
				}
				if(randcard3 >= 5)
				{
					format(symb3, sizeof(symb3), "~b~]");
					randcard3 = 1;
				}
				else if(randcard3 <= 4 && randcard3 >= 2)
				{
					format(symb3, sizeof(symb3), "~g~]");
					randcard3 = 2;
				}
				else if(randcard3 < 2)
				{
					format(symb3, sizeof(symb3), "~y~]");
					randcard3 = 3;
				}
				if(randcard1 == randcard2 && randcard1 == randcard3)
				{
					if(randcard1 > 5)
					{
						prize = 2500;
					}
					if(randcard1 <= 4 && randcard1 >= 2)
					{
						prize = 1500;
					}
					if(randcard1 < 2)
					{
						prize = 500;
					}
					SafeGivePlayerMoney(playerid,prize);
					SBizzInfo[9][sbTill] -= prize;
					ExtortionSBiz(9, prize);
					format(string, sizeof(string), "%s %s %s ~n~~n~~w~~g~$%d",symb1,symb2,symb3, prize);
				}
				else
				{
					format(string, sizeof(string), "%s %s %s ~n~~n~~w~~r~$0",symb1,symb2,symb3);
				}
				GameTextForPlayer(playerid, string, 3000, 3);
				return 1;
			}
			else if (item == 3 && ScriptMoney[playerid] > 5000)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 5000 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 5000 - price;
					SafeGivePlayerMoney(playerid,- payout);
					SBizzInfo[9][sbTill] += payout;
					ExtortionSBiz(9, payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid,-5000);
					SBizzInfo[9][sbTill] += 5000;
					ExtortionSBiz(9, 5000);
					format(string, sizeof(string), "~r~-$%d", 5000);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                PlayerInfo[playerid][pPhoneBook] = 1;
				format(string, sizeof(string), "   Phone Book Purchased you can look up any Players Number !");
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_WHITE, "ช่วยเหลือ: พิมพ์ /number <id/name>.");
				return 1;
			}
			else if (item == 4 && ScriptMoney[playerid] > 500)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 500 - price;
					SafeGivePlayerMoney(playerid,- payout);
					SBizzInfo[9][sbTill] += payout;
					ExtortionSBiz(9, payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid,-500);
					SBizzInfo[9][sbTill] += 500;
					ExtortionSBiz(9, 500);
					format(string, sizeof(string), "~r~-$%d", 500);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				gDice[playerid] = 1;
				format(string, sizeof(string), "   Dice Purchased you can throw your Dice.");
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_WHITE, "ช่วยเหลือ: พิมพ์ /dice ");
				return 1;
			}
            else if (item == 5 && ScriptMoney[playerid] > 250)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 250 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 250 - price;
					SafeGivePlayerMoney(playerid,- payout);
					SBizzInfo[9][sbTill] += payout;
					ExtortionSBiz(9, payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid,-500);
					SBizzInfo[9][sbTill] += 500;
					ExtortionSBiz(9, 500);
					format(string, sizeof(string), "~r~-$%d", 250);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				gRope[playerid] += 1;
				format(string, sizeof(string), "  คุณได้ซื้อเชือกแล้ว, คุณมีเชือกอยู่ %d เส้น",gRope[playerid]);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_WHITE, "ช่วยเหลือ: พิมพ์ /tie เพื่อมัดใครบางคนด้วยเชือก");
				return 1;
			}
			else if (item == 7 && ScriptMoney[playerid] > 5000)
			{
				gSpeedo[playerid] = 1;
				if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 5000 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 5000 - price;
					SafeGivePlayerMoney(playerid,- payout);
					SBizzInfo[9][sbTill] += payout;
					ExtortionSBiz(9, payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid,-5000);
					SBizzInfo[9][sbTill] += 5000;
					ExtortionSBiz(9, 5000);
					format(string, sizeof(string), "~r~-$%d", 5000);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				SBizzInfo[9][sbProducts]--;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Speedometer Purchased.");
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_WHITE, "ช่วยเหลือ: พิมพ์  /speedo ");
				return 1;
			}
			else if (item == 8 && ScriptMoney[playerid] > 49)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 50 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 50 - price;
					SafeGivePlayerMoney(playerid,- payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid,-50);
					format(string, sizeof(string), "~r~-$%d", 50);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				Condom[playerid] ++;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Condom Purchased.");
				SendClientMessage(playerid, COLOR_GRAD4, string);
				return 1;
			}
			else if (item == 9 && ScriptMoney[playerid] > 2500)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 2500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 2500 - price;
					SafeGivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid, - 2500);
					format(string, sizeof(string), "~r~-$%d", 2500);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "CD-Player Purchased.");
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_WHITE, "ช่วยเหลือ: พิมพ์  /music");
				PlayerInfo[playerid][pCDPlayer] = 1;
				return 1;
			}
			else if (item == 10 && ScriptMoney[playerid] > 10)
			{
			    if(Groceries[playerid][pChickens] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You have to many Chickens, Cook some first !");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					SafeGivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid, - 10);
					format(string, sizeof(string), "~r~-$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
			    SafeGivePlayerMoney(playerid, - 10);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Chicken Purchased.");
				SendClientMessage(playerid, COLOR_GRAD4, string);
				format(string, sizeof(string), "~r~-$%d", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pChickens] += 1;
				Groceries[playerid][pChicken] += rand;
				return 1;
			}
			else if (item == 11 && ScriptMoney[playerid] > 10)
			{
			    if(Groceries[playerid][pHamburgers] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You have to many Hamburgers, Cook some first !");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					SafeGivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid, - 10);
					format(string, sizeof(string), "~r~-$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
			    SafeGivePlayerMoney(playerid, - 10);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Hamburger Purchased.");
				SendClientMessage(playerid, COLOR_GRAD4, string);
				format(string, sizeof(string), "~r~-$%d", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pHamburgers] += 1;
				Groceries[playerid][pHamburger] += rand;
				return 1;
			}
			else if (item == 12 && ScriptMoney[playerid] > 10)
			{
			    if(Groceries[playerid][pPizzas] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You have to many Pizzas, Cook some first !");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					SafeGivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    SafeGivePlayerMoney(playerid, - 10);
					format(string, sizeof(string), "~r~-$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "Frozen Pizza Purchased.");
				SendClientMessage(playerid, COLOR_GRAD4, string);
				new rand = random(15);
				Groceries[playerid][pPizzas] += 1;
				Groceries[playerid][pPizza] += rand;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "   You don't have the cash for that !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/buyhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
					{
						format(string, sizeof(string), "   You must be Level %d to purchase this !", HouseInfo[h][hLevel]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   You already own a house, type /sellhouse if you want to buy this one !");
						return 1;
					}
					if(ScriptMoney[playerid] > HouseInfo[h][hValue])
					{
						PlayerInfo[playerid][pPhousekey] = h;
						HouseInfo[h][hOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						SafeGivePlayerMoney(playerid,-HouseInfo[h][hValue]);
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,HouseInfo[h][hInt]);
						SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
						PlayerInfo[playerid][pLocal] = h;
						SendClientMessage(playerid, COLOR_WHITE, "Congratulations, on your new Purchase !");
						SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new property help section !");
                        DateProp(playerid);
						OnPropUpdate();
						OnPlayerUpdate(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   You don't have the cash for that !");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rentroom", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   You already own a house, type /sellhouse if you want to rent this one.");
						return 1;
					}
					if(ScriptMoney[playerid] > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPhousekey] = h;
						SafeGivePlayerMoney(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,HouseInfo[h][hInt]);
						SetPlayerPos(playerid,HouseInfo[h][hExitx],HouseInfo[h][hExity],HouseInfo[h][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hInt];
						PlayerInfo[playerid][pLocal] = h;
						SendClientMessage(playerid, COLOR_WHITE, "Congratulations, You can enter and exit here anytime.");
						SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new property help section.");
						OnPlayerUpdate(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "You don't have the cash for that");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/hirecar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /hirecar [key id]");
					return 1;
				}
				new car = strval(tmp);
				HireCar[playerid] = car;
				format(string, sizeof(string), "Key Fashioned You Can Lock Car %d.",car);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_WHITE, "HINT: Type /lock ");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/switchkey", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!SwitchKey[playerid])
			{
				if(HireCar[playerid] != 299)
				{
					SwitchKey[playerid] = 1;
					GameTextForPlayer(playerid, "~w~You control now your house car", 5000, 6);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~You do not hire a car", 5000, 6);
				}
				return 1;
			}
			else
			{
				SwitchKey[playerid] = 0;
				GameTextForPlayer(playerid, "~w~You control now your hire car", 5000, 6);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/givekey", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			new car;
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /givekey [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPhousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  You dont have a key to give");
				return 1;
			}
			else
			{
				if(HireCar[playerid] != 299 && SwitchKey[playerid] == 0)
				{
					car = HireCar[playerid];
					gCarLock[car] = 0;
					UnLockCar(car);
					HireCar[playerid] = 299;
				}
				else
				{
					car = PlayerInfo[playerid][pPhousekey]+1;
				}
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if(HireCar[giveplayerid] != 299)
						{
							gCarLock[HireCar[giveplayerid]] = 0;
							UnLockCar(HireCar[giveplayerid]);
						}
						HireCar[giveplayerid] = car;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "   You have given %s the key to your vehicle", giveplayer);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   You have recieved the key to a vehicle from %s", sendername);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "* %s takes out a set of keys, and tosses them to %s.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		return 1;
	}
//----------------------------------[Bank System]-----------------------------------------------
    if(strcmp(cmd, "/withdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLocal] != 103 && !PlayerToPoint(3.0,playerid,-2034.7391,-101.3662,35.1641) && !PlayerToPoint(3.0,playerid,-2657.4995,1341.8669,7.0398))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ในธนาคาร/ATM !");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /withdraw [จำนวน]");
				format(string, sizeof(string), "  มีเงินจำนวน $%d อยู่ในบัญชีของคุณ", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /withdraw [จำนวน]");
				format(string, sizeof(string), "  มีเงินจำนวน $%d อยู่ในบัญชีของคุณ", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > PlayerInfo[playerid][pAccount] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   เงินในบัญชีของคุณมีน้อยกว่าที่คุณต้องการ !");
				return 1;
			}
		    //ConsumingMoney[playerid] = 1;
			SafeGivePlayerMoney(playerid,cashdeposit);
			PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-cashdeposit;
			format(string, sizeof(string), "  คุณได้เบิกเงิน $%d จากในบัญชีของคุณ คงเหลือ: $%d ", cashdeposit,PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/bank", true) == 0 || strcmp(cmd, "/deposit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLocal] != 103)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ในธนาคาร !");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /bank [จำนวน]");
				format(string, sizeof(string), "  คุณมีเงิน $%d อยู่ในบัญชีของคุณ", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /bank [จำนวน]");
				format(string, sizeof(string), "  คุณมีเงิน $%d ในบัญชีของคุณ", PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > ScriptMoney[playerid] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  เงินในบัญชีของคุณ มีไม่เพียงพอ !");
				return 1;
			}
			SafeGivePlayerMoney(playerid,-cashdeposit);
			new curfunds = PlayerInfo[playerid][pAccount];
			PlayerInfo[playerid][pAccount]=cashdeposit+PlayerInfo[playerid][pAccount];
			SendClientMessage(playerid, COLOR_WHITE, "|___ ธนาคาร ___|");
			format(string, sizeof(string), "  ยอดเงินฝาก: $%d", curfunds);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "  เบิก: $%d",cashdeposit);
			SendClientMessage(playerid, COLOR_GRAD4, string);
			SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
			format(string, sizeof(string), "  คงเหลือ: $%d", PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/balance", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pLocal] != 103 && !PlayerToPoint(3.0,playerid,-2034.7391,-101.3662,35.1641) && !PlayerToPoint(3.0,playerid,-2657.4995,1341.8669,7.0398))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ในธนาคาร/ATM !");
	            return 1;
	        }
			format(string, sizeof(string), "  คุณมีเงิน $%d อยู่ในบัญชีของคุณ",PlayerInfo[playerid][pAccount]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			GetPlayerName(playerid, sendername, sizeof(sendername));
		}
		return 1;
	}
	if(strcmp(cmd, "/dice", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(6)+1;
			if (gDice[playerid] == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s โยนลูกเต๋าได้เลข %d", sendername,dice);
				ProxDetector(5.0, playerid, string, TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR,TEAM_GREEN_COLOR);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่มีลูกเต๋า");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/transfer", true) == 0 || strcmp(cmd, "/wiretransfer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ต้องมีเลเวล 2 หรือมากกว่า !");
				return 1;
			}
			if(PlayerInfo[playerid][pLocal] != 103 && !PlayerToPoint(3.0,playerid,-2034.7391,-101.3662,35.1641) && !PlayerToPoint(3.0,playerid,-2657.4995,1341.8669,7.0398))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ในธนาคาร/ATM !");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /transfer [playerid/PartOfName] [จำนวน]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /transfer [playerid/PartOfName] [จำนวน]");
				return 1;
			}
			moneys = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = PlayerInfo[playerid][pAccount] ;
					if (moneys > 0 && playermoney >= moneys)
					{
						PlayerInfo[playerid][pAccount] -= moneys;
						PlayerInfo[giveplayerid][pAccount] += moneys;
						format(string, sizeof(string), "   คุณโอนเงิน $%d เข้าบัญชีของ %st", moneys, giveplayer,giveplayerid);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   มีเงินเข้า จำนวน $%d ในบัญชีของคุณ %s", moneys, sendername, playerid);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "%s โอนเงินจำนวน $%d ให้กับ %s", sendername, moneys, giveplayer);
						if(moneys >= 19999)
						{
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid,sendername, sizeof(sendername));
							format(string, 256, "AdmWarning: %s ได้โอนเงินให้ %s จำนวน $%d", sendername, giveplayer, moneys);
							SendAdminMessage(COLOR_YELLOW, string);
						}
						printf("%s", string);
						PayLog(string);
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Invalid transaction amount.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ไม่ได้อยู่ในเกมส์", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unrentroom", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   You own this house !");
				return 1;
			}
			PlayerInfo[playerid][pPhousekey] = 255;
			SpawnChange[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "You are now homeless.");
		}
		return 1;
	}
	if(strcmp(cmd, "/housewithdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			new bouse = PlayerInfo[playerid][pPhousekey];
			if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /housewithdraw [amount]");
					format(string, sizeof(string), "  You Have $%d in your cashbox.", HouseInfo[bouse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /housewithdraw [amount]");
					format(string, sizeof(string), "  You Have $%d in your cashbox.", HouseInfo[bouse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				if (cashdeposit >  HouseInfo[bouse][hTakings] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You dont have that much !");
					return 1;
				}
				if (!PlayerToPoint(100, playerid,HouseInfo[bouse][hExitx],HouseInfo[bouse][hExity],HouseInfo[bouse][hExitz]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your house !");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					SafeGivePlayerMoney(playerid,cashdeposit);
					HouseInfo[bouse][hTakings]=HouseInfo[bouse][hTakings]-cashdeposit;
					format(string, sizeof(string), "  You Have Withdrawn $%d from your cashbox Total: $%d ", cashdeposit,HouseInfo[bouse][hTakings]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "You don't own a house.");
			}
		}
		return 1;

	}
	if(strcmp(cmd, "/asellbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /asellbiz [bizid]");
				return 1;
			}
			new biz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				BizzInfo[biz][bLocked] = 1;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[biz][bExtortion], "No-one", 0, strlen("No-one"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~You have sold the Business");
				GameTextForPlayer(playerid, string, 10000, 3);
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "You are not an admin.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/asellsbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /asellsbiz [sbizid]");
				return 1;
			}
			new sbiz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				SBizzInfo[sbiz][sbLocked] = 1;
				SBizzInfo[sbiz][sbOwned] = 0;
				strmid(SBizzInfo[sbiz][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[sbiz][sbExtortion], "No-one", 0, strlen("No-one"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~You have sold the Business");
				GameTextForPlayer(playerid, string, 10000, 3);
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "You are not an admin.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/asellhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /asellhouse [houseid]");
				return 1;
			}
			new house = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 418;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~You have sold this property", HouseInfo[house][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "You are not an admin.");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/sellhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPhousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "You don't own a house.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   You are Married, can't sell the House !");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPhousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				new house = PlayerInfo[playerid][pPhousekey];
				HouseInfo[house][hHel] = 0;
				HouseInfo[house][hArm] = 0;
				HouseInfo[house][hHealthx] = 0;
				HouseInfo[house][hHealthy] = 0;
				HouseInfo[house][hHealthz] = 0;
				HouseInfo[house][hArmourx] = 0;
				HouseInfo[house][hArmoury] = 0;
				HouseInfo[house][hArmourz] = 0;
				HouseInfo[house][hLock] = 1;
				HouseInfo[house][hOwned] = 0;
				HouseInfo[house][hVec] = 418;
				HouseInfo[house][hVcol1] = -1;
				HouseInfo[house][hVcol2] = -1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 255);
				ConsumingMoney[playerid] = 1;
				SafeGivePlayerMoney(playerid,HouseInfo[house][hValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d", HouseInfo[house][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPhousekey] = 255;
				SpawnChange[playerid] = 0;
				if(PlayerInfo[playerid][pLocal] == house)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[house][hEntrancex],HouseInfo[house][hEntrancey],HouseInfo[house][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
				}
				OnPropUpdate();
				OnPlayerUpdate(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "You don't own a house.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/houseupgrade", true) == 0 || strcmp(cmd, "/hu", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new house = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (house != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /houseupgrade [item number]");
					SendClientMessage(playerid, COLOR_GRAD1, "|_______ Home Supplys _______|");
					SendClientMessage(playerid, COLOR_GRAD2, "| 1: Health Upgrade $50000");
					SendClientMessage(playerid, COLOR_GRAD3, "| 2: Armour Upgrade $100000");
					SendClientMessage(playerid, COLOR_GRAD3, "| 3: Tv Upgrade $5000");
					return 1;
				}
				new item = strval(tmp);
				switch (item)
				{
					case 1:
					{
						if(SBizzInfo[6][sbProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
							return 1;
						}
						if(PlayerInfo[playerid][pLevel] < 5)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "You Must Be Level 5 To Purchase This");
							return 1;
						}
						if(ScriptMoney[playerid] < 50000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "You Don't Have The Cash To Purchase This");
							return 1;
						}
						HouseInfo[house][hHel] = 1;
						GivePlayerMoney(playerid,-50000);
						SBizzInfo[6][sbTill] += 50000;//heal buisness
						ExtortionSBiz(6, 50000);
						SBizzInfo[6][sbProducts]--;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "You Can Now Heal Yourself At Home, Type /heal.");
					}
					case 2:
					{
					    if(!IsACop(playerid))
					    {
							SendClientMessage(playerid, COLOR_GREY, "   You can't buy this, you are not a Cop !");
							return 1;
					    }
						if(SBizzInfo[6][sbProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
							return 1;
						}
						if (PlayerInfo[playerid][pLevel] < 7)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "You Must Be Level 7 To Purchase This");
							return 1;
						}
						if(ScriptMoney[playerid] < 100000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "You Don't Have The Cash To Purchase This");
							return 1;
						}
						HouseInfo[house][hArm] = 1;
						GivePlayerMoney(playerid,-100000);
						SBizzInfo[6][sbTill] += 100000;//heal buisness
						ExtortionSBiz(6, 100000);
						SBizzInfo[6][sbProducts]--;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "You Can Now Get Armour At Home, Type /heal.");
					}
					case 3:
					{
						if(SBizzInfo[6][sbProducts] == 0)
						{
							GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
							return 1;
						}
						if (PlayerInfo[playerid][pLevel] < 4)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "You Must Be Level 4 To Purchase This");
							return 1;
						}
						if(ScriptMoney[playerid] < 5000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "You Don't Have The Cash To Purchase This");
							return 1;
						}
						HouseInfo[house][hHealthx] = 1;
						GivePlayerMoney(playerid,-500);
						SBizzInfo[6][sbTill] += 500;
						ExtortionSBiz(6, 500);
						SBizzInfo[6][sbProducts]--;
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "You can now use your TV set, type /tv.");
					}
				}
				OnPropUpdate();
				OnPlayerUpdate(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a house");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setrent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /setrent [RentFee]");
					return 1;
				}
				if(strval(tmp) < 1 || strval(tmp) > 99999)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Minimum rent is $1, Maximum rent is $99999.");
					return 1;
				}
				HouseInfo[bouse][hRent] = strval(tmp);
				OnPropUpdate();
				format(string, sizeof(string), "House rent set to $%d", HouseInfo[bouse][hRent]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a house");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evictall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							if (PlayerInfo[i][pPhousekey] == PlayerInfo[playerid][pPhousekey] )
							{
								SendClientMessage(i, COLOR_WHITE, "You have been evicted from your house.");
								SendClientMessage(playerid, COLOR_WHITE, "Everyone have been evicted.");
								PlayerInfo[i][pPhousekey] = 255;
								return 1;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a house !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/evict", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /evict [playerid/PartOfName]");
				}
				new target;
				//target = strval(tmp);
				target = ReturnUser(tmp);
				if (target == playerid)
				{
					SendClientMessage(target, COLOR_WHITE, "You cant evict yourself.");
					return 1;
				}
				if(IsPlayerConnected(target))
				{
				    if(target != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[target][pPhousekey] == PlayerInfo[playerid][pPhousekey])
						{
							SendClientMessage(target, COLOR_WHITE, "You have been evicted");
							SendClientMessage(playerid, COLOR_WHITE, "Player has been evicted");
							PlayerInfo[target][pPhousekey] = 255;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Player doesn't rent at your House !");
						    return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a house !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setrentable", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPhousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (bouse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPhousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /setrentable [0/1]");
				}
				HouseInfo[bouse][hRentabil] = strval(tmp);
				OnPropUpdate();
				format(string, sizeof(string), "House rentable set to %d.", HouseInfo[bouse][hRentabil]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a house !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/call", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "การใช้งาน: /call [phonenumber]");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  คุณไม่มีโทรศัพท์มือถือ !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s หยิบโทรศัพท์มือถือออกมา.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			new phonenumb = strval(tmp);
			if(phonenumb == 911)
			{
				SendClientMessage(playerid, COLOR_WHITE, "HINT: ตอนนี้คุณสามารถคุยโทรศัพท์ด้วยการกด T หรือ F6, พิมพ์ /hangup เพื่อวางสาย");
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: คุณต้องการโทรหาหน่วยงานใด ตำรวจหรือหมอ ( พิมพ์ Police หรือ Paramedic) ?");
				Mobile[playerid] = 911;
				return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  สายไม่ว่าง.");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  คุณอยู่ในสายแล้ว");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นปิดโทรศัพท์มือถือ !");
						            return 1;
						        }
								if (Mobile[giveplayerid] == 255)
								{
									format(string, sizeof(string), " โทรศัพท์ของคุณมีเสียงดัง พิมพ์ (/Pickup), เบอร์ที่โทรเข้ามา: %d", PlayerInfo[playerid][pPnumber]);
									SendClientMessage(giveplayerid, COLOR_WHITE, string);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									RingTone[giveplayerid] = 10;
									format(string, sizeof(string), "* %sกำลังหาโทรศัพท์.", sendername);
									SendClientMessage(playerid, COLOR_WHITE, "HINT: คุณสามารถคุยโทรศัพท์โดยกด T หรือ F6, พิมพ์ /hangup เพื่อวางสาย");
									ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									CellTime[playerid] = 1;
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  สายไม่ว่าง...");
		}
		return 1;
	}
	if(strcmp(cmd, "/txt", true) == 0 || strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/sms", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่ได้ล็อคอิน !");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "การใช้งาน: (/t)ext [phonenumber] [text chat]");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  คุณไม่มีโทรศัพท์มือถือ...");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s หยิบโทรศัพท์ออกมา.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "การใช้งาน: (/t)ext [phonenumber] [text chat]");
				return 1;
			}
			if(phonenumb == 555)
			{
				if ((strcmp("yes", result, true, strlen(result)) == 0) && (strlen(result) == strlen("yes")))
				{
					SendClientMessage(playerid, COLOR_WHITE, "ข้อความได้ถูกส่งเรียบร้อย");
					if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "SMS: I have no idea what you're talking about, Sender: Bamboo (555)");
						RingTone[playerid] = 20;
						return 1;
					}
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "SMS: A simple Yes will do, Sender: Bamboo (555)");
					RingTone[playerid] = 20;
					return 1;
				}
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นปิดโทรศัพท์มือถือ !");
						            return 1;
						        }
								format(string, sizeof(string), "SMS: %s, Sender: %s (%d)", result,sendername,PlayerInfo[playerid][pPnumber]);
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								//format(string, sizeof(string), "* %s's phone beeps.", sendername);
								RingTone[giveplayerid] =20;
								SendClientMessage(playerid, COLOR_WHITE, "ข้อความได้ถูกส่งเรียบร้อย");
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								SendClientMessage(playerid,  COLOR_YELLOW, string);
								format(string, sizeof(string), "~r~$-%d", txtcost);
								SafeGivePlayerMoney(playerid, - 25);
								GameTextForPlayer(playerid, string, 5000, 1);
								SBizzInfo[2][sbTill] += txtcost;
								ExtortionSBiz(2, txtcost);
					           	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					           	Mobile[playerid] = 255;
								return 1;
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  การส่งข้อความล้มเหลว");
		}
		return 1;
	}
//----------------------------------[pickup]-----------------------------------------------

    if(strcmp(cmd, "/pickup", true) == 0 || strcmp(cmd, "/p", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  ตอนนี้คุณอยู่ในสาย...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						Mobile[playerid] = i; //caller connecting
						format(string, sizeof(string), "* %sรับสายโทรศัพท์.", sendername);
						SendClientMessage(playerid, COLOR_WHITE, "HINT: คุณสามารถคุยโทรศัพท์โดยกด T หรือ F6, พิมพ์ /hangup เพื่อวางสาย");
						ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SendClientMessage(i,  COLOR_GRAD2, "   เขารับโทรศัพท์..");
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s พูดคุยโทรศัพท์.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						RingTone[playerid] = 0;
					}

				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/hangup", true) == 0 || strcmp(cmd, "/h", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COLOR_GRAD2, "   เขาวางสายไป");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COLOR_GRAD2, "   คุณวางสาย");
							SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
						    SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
							Mobile[caller] = 255;
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SendClientMessage(playerid,  COLOR_GRAD2, "   โทรศัพท์ของคุณอยู่ในกระเป๋า");
		}
		return 1;
	}
//-----------AllAnimsystem----------------------------------------------------------------
    if(strcmp(cmd, "/pee", true) == 0) {
         if(MedicBill[playerid] == 3) { return 1; }
		 SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
         return 1;
    }
//----------------------------------[TIME]-----------------------------------------------
    if(strcmp(cmd, "/fixr", true) == 0)
    {
        if(IsPlayerConnected(playerid))
		{
			PlayerFixRadio(playerid);
		}
		return 1;
	}
    if(strcmp(cmd, "/time", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			new year, month,day;
			getdate(year, month, day);
			if(month == 1) { mtext = "January"; }
			else if(month == 2) { mtext = "February"; }
			else if(month == 3) { mtext = "March"; }
			else if(month == 4) { mtext = "April"; }
			else if(month == 5) { mtext = "May"; }
			else if(month == 6) { mtext = "June"; }
			else if(month == 7) { mtext = "Juli"; }
			else if(month == 8) { mtext = "August"; }
			else if(month == 9) { mtext = "September"; }
			else if(month == 10) { mtext = "October"; }
			else if(month == 11) { mtext = "November"; }
			else if(month == 12) { mtext = "December"; }
		    new hour,minuite,second;
			gettime(hour,minuite,second);
			FixHour(hour);
			hour = shifthour;
			if (minuite < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Jail Time Left: %d sec", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s กำลังดูนาฬิกาของตัวเอง", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
		}
		return 1;
	}
//----------------------{HOUSES}-------------------
	if(strcmp(cmd, "/house", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1337)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /house [housenumber]");
					return 1;
				}
				new housenum = strval(tmp);
				SetPlayerInterior(playerid,HouseInfo[housenum][hInt]);
				SetPlayerPos(playerid,HouseInfo[housenum][hExitx],HouseInfo[housenum][hExity],HouseInfo[housenum][hExitz]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[housenum][hInt];
				PlayerInfo[playerid][pLocal] = housenum;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/houseo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1337)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /houseo [housenumber]");
					return 1;
				}
				new housenum = strval(tmp);
				SetPlayerPos(playerid,HouseInfo[housenum][hEntrancex],HouseInfo[housenum][hEntrancey],HouseInfo[housenum][hEntrancez]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/biz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1337)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /biz [biznumber]");
					return 1;
				}
				new housenum = strval(tmp);
				SetPlayerInterior(playerid,BizzInfo[housenum][bInterior]);
				SetPlayerPos(playerid,BizzInfo[housenum][bExitX],BizzInfo[housenum][bExitY],BizzInfo[housenum][bExitZ]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
				PlayerInfo[playerid][pInt] = BizzInfo[housenum][bInterior];
				PlayerInfo[playerid][pLocal] = housenum+99;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 1337)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sbiz [biznumber]");
					return 1;
				}
				new housenum = strval(tmp);
				SetPlayerInterior(playerid,SBizzInfo[housenum][sbInterior]);
				SetPlayerPos(playerid,SBizzInfo[housenum][sbEntranceX],SBizzInfo[housenum][sbEntranceY],SBizzInfo[housenum][sbEntranceZ]);
				GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/resethousecars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 1337)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You are not an Admin !");
				return 1;
			}
			HouseInfo[0][hVec] = 499; HouseInfo[1][hVec] = 499; HouseInfo[2][hVec] = 499;
			HouseInfo[3][hVec] = 499; HouseInfo[4][hVec] = 499; HouseInfo[5][hVec] = 499;
			HouseInfo[6][hVec] = 499; HouseInfo[7][hVec] = 499; HouseInfo[8][hVec] = 499;
			HouseInfo[9][hVec] = 499; HouseInfo[10][hVec] = 499; HouseInfo[11][hVec] = 499;
			HouseInfo[12][hVec] = 499; HouseInfo[13][hVec] = 499; HouseInfo[14][hVec] = 499;
			HouseInfo[15][hVec] = 499; HouseInfo[16][hVec] = 499; HouseInfo[17][hVec] = 499;
			HouseInfo[18][hVec] = 499; HouseInfo[19][hVec] = 499; HouseInfo[20][hVec] = 499;
			HouseInfo[21][hVec] = 499; HouseInfo[22][hVec] = 499; HouseInfo[23][hVec] = 499;
			HouseInfo[24][hVec] = 499; HouseInfo[25][hVec] = 499; HouseInfo[26][hVec] = 499;
			HouseInfo[27][hVec] = 499; HouseInfo[28][hVec] = 499; HouseInfo[29][hVec] = 499;
			HouseInfo[30][hVec] = 499; HouseInfo[31][hVec] = 499; HouseInfo[32][hVec] = 499;
			HouseInfo[33][hVec] = 499;
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_GREY, "   All House Cars resetted !");
		}
		return 1;
	}
	if(strcmp(cmd, "/edithousecar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You are not an Admin !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /edithousecar [vecid]");
				return 1;
			}
			new proplev = strval(tmp);
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					HouseInfo[i][hVec] = proplev;
					format(string, sizeof(string), "House Car: %d is now %d", i,HouseInfo[i][hVec]);
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
			}
			OnPropUpdate();
		}
		return 1;
	}
	if(strcmp(cmd, "/edit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You are not an Admin !");
				return 1;
			}
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Edit __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /edit [name] [ammount] (Used for Houses and Businesses)");
				SendClientMessage(playerid, COLOR_GREY, "Available names: Level, Price, Funds, Products");
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /edit [name] [ammount]");
				return 1;
			}
			new proplev = strval(tmp);
	        //if(strcmp(x_job,"car",true) == 0)
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "House: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							HouseInfo[i][hLevel] = proplev;
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							HouseInfo[i][hValue] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Biz: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							BizzInfo[i][bLevelNeeded] = proplev;
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							BizzInfo[i][bBuyPrice] = proplev;
						}
						else if(strcmp(x_job,"funds",true) == 0)
					    {
							BizzInfo[i][bTill] = proplev;
						}
						else if(strcmp(x_job,"products",true) == 0)
					    {
							BizzInfo[i][bProducts] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "SBiz: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_job,"level",true) == 0)
					    {
							SBizzInfo[i][sbLevelNeeded] = proplev;
						}
						else if(strcmp(x_job,"price",true) == 0)
					    {
							SBizzInfo[i][sbBuyPrice] = proplev;
						}
						else if(strcmp(x_job,"funds",true) == 0)
					    {
							SBizzInfo[i][sbTill] = proplev;
						}
						else if(strcmp(x_job,"products",true) == 0)
					    {
							SBizzInfo[i][sbProducts] = proplev;
						}
					}
				}
			}
			format(string, sizeof(string), "You've adjusted the: %s.", x_job);
			SendClientMessage(playerid, COLOR_WHITE, string);
			OnPropUpdate();
		}
		return 1;
	}
	if(strcmp(cmd, "/load", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			if(!IsATruck(tmpcar))
			{
				GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
				return 1;
			}
			format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/buyprods", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new tmpcar = GetPlayerVehicleID(playerid);
			new compcost = 50;
			if(PlayerToPoint(5.0, playerid, -2119.4863,-178.3242,35.3203))
			{
				if(IsATruck(tmpcar))
				{
					if(PlayerHaul[tmpcar][pLoad] < PlayerHaul[tmpcar][pCapasity])
					{
					    new amount;
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /buyprods [amount]");
							return 1;
						}
						amount = strval(tmp);
						if(amount < 1 || amount > 100) { SendClientMessage(playerid, COLOR_GREY, "   Can't buy less then 1 Product or more then 100 !"); return 1; }
						new check= PlayerHaul[tmpcar][pLoad] + amount;
						if(check > PlayerHaul[tmpcar][pCapasity])
						{
						    format(string, sizeof(string), "   You went over the Truck Products Carry Limit of %d, you currently carry %d.",PlayerHaul[tmpcar][pCapasity],PlayerHaul[tmpcar][pLoad]);
						    SendClientMessage(playerid, COLOR_GREY, string);
						    return 1;
						}
						new cost = amount*compcost;
						if(ScriptMoney[playerid] >= cost)
						{
							PlayerHaul[tmpcar][pLoad] += amount;
							format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), "You bought %d Products for $%d.", amount,cost);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							SafeGivePlayerMoney(playerid,-cost);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						else
						{
							format(string, sizeof(string), "You cant afford %d Products at $%d !", amount,cost);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							return 1;
						}
					}
					else
					{
							format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, TEAM_GROVE_COLOR, "This Vehicle does not deliver Products.");
					return 1;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sellprods", true) == 0)
	{
	    new cashmade;
	    new tmpcar;
	    if(IsPlayerConnected(playerid))
		{
			tmpcar = GetPlayerVehicleID(playerid);
			if(!IsATruck(tmpcar))
			{
				GameTextForPlayer(playerid, "~r~You are not in a delivery truck", 5000, 1);
				return 1;
			}
			if(PlayerHaul[tmpcar][pLoad] == 0)
			{
				GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
				format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
				SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
				return 1;
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(10, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					//printf("Found House :%d",i);
					for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
					{
						if(BizzInfo[i][bProducts] == BizzInfo[i][bMaxProducts])
						{
							GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
							format(string, sizeof(string), "Cash Earned $%d.", cashmade);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bPriceProd] > BizzInfo[i][bTill])
						{
							GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
							format(string, sizeof(string), "Cash Earned $%d.", cashmade);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
						PlayerHaul[tmpcar][pLoad]--;
						BizzInfo[i][bProducts]++;
						cashmade = cashmade+BizzInfo[i][bPriceProd];
						ConsumingMoney[playerid] = 1;
						SafeGivePlayerMoney(playerid,BizzInfo[i][bPriceProd]);
						BizzInfo[i][bTill] -= BizzInfo[i][bPriceProd];
						if(PlayerHaul[tmpcar][pLoad] == 0)
						{
							GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
							format(string, sizeof(string), "Cash Earned $%d.", cashmade);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
							SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					OnPropUpdate();
					return 1;
				}
			}
		}
		for(new i = 0; i < sizeof(SBizzInfo); i++)
		{
			if (PlayerToPoint(10, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
			{
				//printf("Found House :%d",i);
				for(new l = PlayerHaul[tmpcar][pLoad]; l > 0; l--)
				{
					if(SBizzInfo[i][sbProducts] == SBizzInfo[i][sbMaxProducts])
					{
						GameTextForPlayer(playerid, "~r~Our stores are full", 5000, 1);
						format(string, sizeof(string), "Cash Earned $%d.", cashmade);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
					if(SBizzInfo[i][sbPriceProd] > SBizzInfo[i][sbTill])
					{
						GameTextForPlayer(playerid, "~r~We Cant Afford The Deal", 5000, 1);
						format(string, sizeof(string), "Cash Earned $%d.", cashmade);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
					PlayerHaul[tmpcar][pLoad]--;
					SBizzInfo[i][sbProducts]++;
					cashmade = cashmade+SBizzInfo[i][sbPriceProd];
					ConsumingMoney[playerid] = 1;
					SafeGivePlayerMoney(playerid,SBizzInfo[i][sbPriceProd]);
					SBizzInfo[i][sbTill] -= SBizzInfo[i][sbPriceProd];
					if(PlayerHaul[tmpcar][pLoad] == 0)
					{
						GameTextForPlayer(playerid, "~r~Truck is empty, return to the stock house", 5000, 1);
						format(string, sizeof(string), "Cash Earned $%d.", cashmade);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						format(string, sizeof(string), " ผลิตภัณท์: %d/%d", PlayerHaul[tmpcar][pLoad],PlayerHaul[tmpcar][pCapasity]);
						SendClientMessage(playerid, TEAM_GROVE_COLOR, string);
						return 1;
					}
				}
				OnPropUpdate();
				return 1;
			}
		}
		GameTextForPlayer(playerid, "~r~To Far From A Business", 5000, 1);
		return 1;
	}
	if(strcmp(cmd, "/enter", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					//printf("Found House :%d",i);
					if(PlayerInfo[playerid][pPhousekey] == i || HouseInfo[i][hLock] == 0)
					{
						SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~w~Welcome Home", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Locked", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					//printf("Found House :%d",i);
					if(PlayerInfo[playerid][pPbiskey] == i || ScriptMoney[playerid] >= BizzInfo[i][bEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(BizzInfo[i][bLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
								return 1;
							}
							if(BizzInfo[i][bProducts] == 0)
							{
								GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
								return 1;
							}
							SafeGivePlayerMoney(playerid,-BizzInfo[i][bEntranceCost]);
							format(string, sizeof(string), "~r~-$%d~n~~w~type /exit~n~to get out", BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bProducts]--;
							OnPropUpdate();
							GameTextForPlayer(playerid, string, 5000, 3);
						}
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						PlayerInfo[playerid][pLocal] = i+99;
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s payed $%d to enter biz %d", dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", string);
						PayLog(string);
						//PlayerInfo[playerid][pLocal] = i;
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || ScriptMoney[playerid] >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Closed", 5000, 1);
								return 1;
							}
							if(SBizzInfo[i][sbProducts] == 0)
							{
								GameTextForPlayer(playerid, "~r~Out Of Stock", 5000, 1);
								return 1;
							}
							if(i == 10)
							{
							    PaintballPlayers ++;
							    PlayerPaintballing[playerid] = 1;
							    new rand = random(sizeof(PaintballSpawns));
								SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
								TogglePlayerControllable(playerid, 0);
							}
							else if(i == 11)
							{
							    PlayerKarting[playerid] = 1;
							    SendClientMessage(playerid, TEAM_GROVE_COLOR, "You can now parcipitate in a Karting Race, grab a Kart.");
							}
							else
							{
							    return 1;
							}
							SafeGivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = ScriptMoney[playerid];
							SBizzInfo[i][sbProducts]--;
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(string, sizeof(string), "%s payed $%d to enter sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", string);
							PayLog(string);
							OnPropUpdate();
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~You dont have the cash", 5000, 1);
					}
				}
			}
			if (PlayerToPoint(3.0, playerid,-2766.2881,375.5615,6.3347))
			{
			    SetPlayerInterior(playerid,3);
				SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
				GameTextForPlayer(playerid, "~w~Welcome to the City Hall", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
				PlayerInfo[playerid][pLocal] = 241;
			}
			else if (PlayerToPoint(3.0, playerid,1073.0619,-344.5148,73.9922))
			{
			    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			    {
				    SetPlayerInterior(playerid,2);
					SetPlayerPos(playerid,1205.0947,-10.1685,1000.9219);
					PlayerInfo[playerid][pInt] = 2;
					PlayerInfo[playerid][pLocal] = 242;
				}
			}
			else if (PlayerToPoint(3.0, playerid,2695.6235,-1704.6960,11.8438))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the 8ball Track", 5000, 1);
			    SetPlayerInterior(playerid,7);
				SetPlayerPos(playerid,-1404.5299,-259.0602,1043.6563);
			}
			else if (PlayerToPoint(8.0, playerid,-2111.5686,-443.9720,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Dirt Track", 5000, 1);
			    SetPlayerInterior(playerid,4);
				SetPlayerPos(playerid,-1443.0554,-581.1879,1055.0472);
			}
			else if (PlayerToPoint(8.0, playerid,-2080.3079,-406.0309,38.7344))
			{
			    GameTextForPlayer(playerid, "~w~Welcome to the Stunting Track", 5000, 1);
			    SetPlayerInterior(playerid,14);
				SetPlayerPos(playerid,-1464.7732,1557.5533,1052.5313);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/exit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i <  sizeof(HouseInfo); i++)
			{
				//printf("House :%d",i);
				if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
					PlayerInfo[playerid][pLocal] = 255;
					if(HouseInfo[i][hHel] == 1)
					{
						new Float:tempheal;
						GetPlayerHealth(playerid,tempheal);
						if(tempheal < 100.0)
						{
							SetPlayerHealth(playerid,100.0);
						}
					}
				}
			}
			for(new i = 0; i <  sizeof(BizzInfo); i++)
			{
				//printf("Bizz :%d",i);
				if (PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
					PlayerInfo[playerid][pLocal] = 255;
				}
			}
			if (PlayerToPoint(3.0, playerid,387.7978,173.8582,1008.3828))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2766.2881,375.5615,6.3347);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
			}
			else if (PlayerToPoint(6.0, playerid,-1404.5299,-259.0602,1043.6563))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,2695.6235,-1704.6960,11.8438);
			}
			else if (PlayerToPoint(8.0, playerid,-1443.0554,-581.1879,1055.0472))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2111.5686,-443.9720,38.7344);
			}
			else if (PlayerToPoint(8.0, playerid,-1464.7732,1557.5533,1052.5313))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2080.3079,-406.0309,38.7344);
			}
			else if (PlayerToPoint(8.0, playerid,-26.6916,-55.7149,1003.5469))
			{
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-1605.5741,713.1882,13.6160);
			}
			else if(NoFuel[playerid] == 1)
			{
			    TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicle(playerid);
				NoFuel[playerid] = 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/home", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPhousekey] != 255)
			{
			    if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   On a mission right now, can't use this command !");
			        return 1;
			    }
				SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPhousekey]][hEntrancez], 4.0);
				GameTextForPlayer(playerid, "~w~Waypoint set ~r~Home", 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
			}
			else
			{
				GameTextForPlayer(playerid, "~w~You are homeless", 5000, 1);
			}
		}
		return 1;
	}
//----------------------------------[BIZZ]-----------------------------------------------
	if(strcmp(cmd, "/buybiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   You already own a business, type /sellbiz if you want to buy this one.");
				return 1;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
					{
						format(string, sizeof(string), "You Must Be Level %d To Purchase This",SBizzInfo[b][sbLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(ScriptMoney[playerid] > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b+100;
						SBizzInfo[b][sbOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
						SafeGivePlayerMoney(playerid,-SBizzInfo[b][sbBuyPrice]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "Congratulations, On Your New Purchase.");
						SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new business help section.");
                        DateProp(playerid);
						OnPropUpdate();
						OnPlayerUpdate(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "You don't have the cash for that");
						return 1;
					}
				}
			}
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
					{
						format(string, sizeof(string), "You Must Be Level %d To Purchase This",BizzInfo[b][bLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(ScriptMoney[playerid] > BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						SafeGivePlayerMoney(playerid,-BizzInfo[b][bBuyPrice]);
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						GameTextForPlayer(playerid, "~w~Welcome~n~You can exit at any time by moving to this door and typing /exit", 5000, 3);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						PlayerInfo[playerid][pLocal] = b ;
						SendClientMessage(playerid, COLOR_WHITE, "Congratulations, On Your New Purchase.");
						SendClientMessage(playerid, COLOR_WHITE, "Type /help to review the new business help section.");
                        DateProp(playerid);
						OnPropUpdate();
						OnPlayerUpdate(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "You don't have the cash for that");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sellbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPbiskey] == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "You don't own a bizz.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   You are Married, can't sell the House !");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey]-100][sbOwner], true) == 0)
			{
				new bouse = PlayerInfo[playerid][pPbiskey]-100;
				SafeGivePlayerMoney(playerid,SBizzInfo[bouse][sbTill]);
				SBizzInfo[bouse][sbLocked] = 1;
				SBizzInfo[bouse][sbOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[bouse][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[bouse][sbExtortion], "No-one", 0, strlen("No-one"), 255);
				ConsumingMoney[playerid] = 1;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d", SBizzInfo[bouse][sbTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				SBizzInfo[bouse][sbTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				OnPropUpdate();
				OnPlayerUpdate(playerid);
				return 1;
			}
			if(strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
			{
				new bouse = PlayerInfo[playerid][pPbiskey];
				BizzInfo[bouse][bLocked] = 1;
				BizzInfo[bouse][bOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[bouse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[bouse][bExtortion], "No-one", 0, strlen("No-one"), 255);
				ConsumingMoney[playerid] = 1;
				SafeGivePlayerMoney(playerid,BizzInfo[bouse][bTill]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Congratulations~n~ You have sold your property for ~n~~g~$%d", BizzInfo[bouse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				BizzInfo[bouse][bTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				OnPropUpdate();
				OnPlayerUpdate(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "You don't own a business.");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/bizinfo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if(bouse == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "You don't own a business.");
				return 1;
			}
			if (bouse >= 100)
			{

				PrintSBizInfo(playerid,bouse-100);
			}
			else
			{
				PrintBizInfo(playerid,bouse);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/prodprice", true) == 0)
	{
		new bouse = PlayerInfo[playerid][pPbiskey];
		if (bouse == 255)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a business");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "USAGE: /prodprice [amount to pay per Product]");
		}
		if(strval(tmp) < 1 || strval(tmp) > 99999)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Minimum amount is $1, Maximum amount is $99999.");
			return 1;
		}
		if (bouse >= 100)
		{
			if(strval(tmp) > SBizzInfo[bouse-100][sbTill])
			{
				SendClientMessage(playerid, COLOR_WHITE, "You dont have that much in your Till.");
				return 1;
			}
			SBizzInfo[bouse-100][sbPriceProd] = strval(tmp);
			format(string, sizeof(string), "Buying Products for $%d.", SBizzInfo[bouse-100][sbPriceProd]);
		}
		else
		{
			if(strval(tmp) > BizzInfo[bouse][bTill])
			{
				SendClientMessage(playerid, COLOR_WHITE, "You dont have that much in your Till.");
				return 1;
			}
			BizzInfo[bouse][bPriceProd] = strval(tmp);
			format(string, sizeof(string), "Buying Products for $%d.", BizzInfo[bouse][bPriceProd]);
		}
		OnPropUpdate();
		SendClientMessage(playerid, COLOR_WHITE, string);
		return 1;
	}
	if(strcmp(cmd, "/bizfee", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a business !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /bizfee [EntranceFee]");
			}
			if(strval(tmp) < 0 || strval(tmp) > 99999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Minimum entrance is $0, Maximum entrance is $99999.");
				return 1;
			}
			if (bouse >= 100)
			{
				SBizzInfo[bouse-100][sbEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrance fee set to $%d.", SBizzInfo[bouse-100][sbEntranceCost]);
			}
			else
			{
				BizzInfo[bouse][bEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrance fee set to $%d.", BizzInfo[bouse][bEntranceCost]);
			}
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/extortion", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a business");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /extortion [playerid/PartOfName] (or 555 for No-one)");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			        format(string, sizeof(string), "* %s is know Extortioning your Business.",giveplayer);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			        format(string, sizeof(string), "* %s has adjusted his Business, you are now Extortioning his Business.",sendername);
			        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			        if (bouse >= 100)
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(SBizzInfo[bouse-100][sbExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Business Extortion Name set to %s",SBizzInfo[bouse-100][sbExtortion]);
					}
					else
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Business Extortion Name set to %s",BizzInfo[bouse][bExtortion]);
					}
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			}
			else if(giveplayerid == 555)
			{
			    if (bouse >= 100)
				{
				    format(string, sizeof(string), "No-one");
					strmid(SBizzInfo[bouse-100][sbExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Business Extortion Name set to %s",SBizzInfo[bouse-100][sbExtortion]);
				}
				else
				{
				    format(string, sizeof(string), "No-one");
					strmid(BizzInfo[bouse][bExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Business Extortion Name set to %s",BizzInfo[bouse][bExtortion]);
				}
				OnPropUpdate();
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bizname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a business");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /bizname [Name]");
			}
			if (bouse >= 100)
			{
				strmid(SBizzInfo[bouse-100][sbMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Business name set to %s",SBizzInfo[bouse-100][sbMessage]);
			}
			else
			{
				strmid(BizzInfo[bouse][bMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Business name set to %s",BizzInfo[bouse][bMessage]);
			}
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/bizwithdraw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a business");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (bouse >= 100)
				{
					format(string, sizeof(string), "  You Have $%d in your till.", SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  You Have $%d in your till.", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /bizwithdraw [amount]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /bizwithdraw [amount]");
				return 1;
			}
			if (bouse >= 100)
			{
				if(cashdeposit > SBizzInfo[bouse-100][sbTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You dont have that much");
					return 1;
				}
			}
			else
			{
				if (cashdeposit > BizzInfo[bouse][bTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You dont have that much");
					return 1;
				}
			}
			if (bouse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your business");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					SafeGivePlayerMoney(playerid,cashdeposit);
					SBizzInfo[bouse-100][sbTill] -= cashdeposit;
					format(string, sizeof(string), "  You Have Withdrawn $%d from your till Total: $%d ", cashdeposit,SBizzInfo[bouse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your business");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					SafeGivePlayerMoney(playerid,cashdeposit);
					BizzInfo[bouse][bTill] -= cashdeposit;
					format(string, sizeof(string), "  You Have Withdrawn $%d from your till Total: $%d ", cashdeposit,BizzInfo[bouse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bizbank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new bouse = PlayerInfo[playerid][pPbiskey];
			if (bouse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You don't own a business");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (bouse >= 100)
				{
					format(string, sizeof(string), "  You Have $%d in your till.", SBizzInfo[bouse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  You Have $%d in your till.", BizzInfo[bouse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /bizbank [amount]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /bizbank [amount]");
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > ScriptMoney[playerid] || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   You dont have that much");
				return 1;
			}
			if (bouse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[bouse-100][sbEntranceX],SBizzInfo[bouse-100][sbEntranceY],SBizzInfo[bouse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your business");
					return 1;
				}
				else
				{
					SafeGivePlayerMoney(playerid,-cashdeposit);
					SBizzInfo[bouse-100][sbTill] += cashdeposit;
					ExtortionSBiz(bouse-100, cashdeposit);
					format(string, sizeof(string), "  You Have Banked $%d to your till Total: $%d ", cashdeposit,SBizzInfo[bouse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[bouse][bExitX],BizzInfo[bouse][bExitY],BizzInfo[bouse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are to far from your business");
					return 1;
				}
				else
				{
					SafeGivePlayerMoney(playerid,-cashdeposit);
					BizzInfo[bouse][bTill] += cashdeposit;
					ExtortionBiz(bouse, cashdeposit);
					format(string, sizeof(string), "  You Have Banked $%d to your till Total: $%d ", cashdeposit,BizzInfo[bouse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
//-----------------------------------[HEAL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/heal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new location = PlayerInfo[playerid][pLocal];
			if(!strlen(tmp))
			{
				if(location != 255)
				{
					if(location < 99)
					{
						if(HouseInfo[location][hArm] == 1 && IsACop(playerid))
						{
							format(string, sizeof(string), "* %s puts on body armour.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(playerid, 0);
							GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
							Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
							Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
							SetPlayerPos(playerid,1527.5,-12.1,1002.0);
							PlayerInfo[playerid][pLocal] = 255;
							SetPlayerInterior(playerid,99);
							Spectate[playerid] = 257;
						}
						else
						{
							format(string, sizeof(string), "This place does not have armour upgrades.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
						}
						if(HouseInfo[location][hHel] == 1)
						{
							new Float:tempheal;
							GetPlayerHealth(playerid,tempheal);
							if ( tempheal < 100.0)
							{
								SetPlayerHealth(playerid,100.0);
								PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
								format(string, sizeof(string), "You have been healed to 100 health.");
								SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
							}
							else
							{
								SendClientMessage(playerid, TEAM_GREEN_COLOR,"You are already healed to 100.");
							}
						}
						else
						{
							format(string, sizeof(string), "This place does not have healing upgrades.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
						}
						return 1;
					}
					else if(location == 101)//Restaurant
					{
					    new Float:tempheal;
						GetPlayerHealth(playerid,tempheal);
						if ( tempheal < 100.0)
						{
							SetPlayerHealth(playerid,100.0);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "You have been healed to 100 health.");
							SendClientMessage(playerid, TEAM_GREEN_COLOR,string);
						}
						else
						{
							SendClientMessage(playerid, TEAM_GREEN_COLOR,"You are already healed to 100.");
						}
					}
					else if(location == 102 && IsACop(playerid))//Police Armoury
					{
					    SetPlayerHealth(playerid,100.0);
					    format(string, sizeof(string), "* %s puts on body armour.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						TogglePlayerControllable(playerid, 0);
						GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
						Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
						Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
						SetPlayerPos(playerid,1527.5,-12.1,1002.0);
						PlayerInfo[playerid][pLocal] = 255;
						SetPlayerInterior(playerid,99);
						Spectate[playerid] = 257;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /heal [playerid/PartOfName] [price]");
					return 1;
				}
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /heal [playerid/PartOfName] [price]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 1000) { SendClientMessage(playerid, COLOR_GREY, "   Healing price not below 1 or above 1000 !"); return 1; }
			if (giveplayerid == playerid)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่สามารถhealตนเองได้!");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new giveambu = GetPlayerVehicleID(giveplayerid);
					new playambu = GetPlayerVehicleID(playerid);
					if(gTeam[playerid] == TEAM_CYAN||PlayerInfo[playerid][pMember]==4||PlayerInfo[playerid][pLeader]==4)//model
					{
						if (IsAnAmbulance(playambu) && playambu == giveambu)
						{
							new Float:tempheal;
							GetPlayerHealth(giveplayerid,tempheal);
							if(tempheal >= 100.0)
							{
								SendClientMessage(playerid, TEAM_GREEN_COLOR,"   That person is fully healed.");
								return 1;
							}
							format(string, sizeof(string), "~y~You healed ~n~~w~%s~n~~g~$%d", giveplayer,moneys);
							GameTextForPlayer(playerid, string, 5000, 1);
							SafeGivePlayerMoney(playerid,moneys);
							SafeGivePlayerMoney(giveplayerid,-moneys);
							new hp = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        hp = 20 * PlayerInfo[playerid][pPainPerk]; hp += 100;
								SetPlayerHealth(giveplayerid, hp);
						    }
						    else
						    {
						        hp = 100;
						        SetPlayerHealth(giveplayerid, 100);
						    }
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "You have been healed to %d health -$%d",hp,moneys);
							SendClientMessage(giveplayerid, TEAM_GREEN_COLOR,string);
							if(STDPlayer[giveplayerid] > 0)
				            {
								STDPlayer[giveplayerid] = 0;
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* You are no longer infected with a STD anymore because of the Medics help !");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   ผู้เล่นคนนั้นไม่ได้อยุบนรถพยาบาล !");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   You are not authorized to use that command !");
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cpr", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /cpr [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
				if (PlayerInfo[playerid][pLeader] == 4 || PlayerInfo[playerid][pMember] == 4|| PlayerInfo[playerid][pAdmin] >= 2)
				{
					if (ProxDetectorS(2.0, playerid, giveplayerid))
					{
					if(deathcpr[giveplayerid] != 1)
					{
						SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นยังไม่ได้ใกล้ตาย");
						return 1;
					}
					new name[MAX_PLAYER_NAME];
					new cpr = PlayerInfo[giveplayerid][pLevel]*50 / 2;
					new cpr2 = PlayerInfo[giveplayerid][pLevel]*50;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, name, sizeof(name));
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถชุบตัวเองได้!"); return 1; }
					SafeGivePlayerMoney(playerid, cpr);
					SafeGivePlayerMoney(giveplayerid, -cpr2);
					format(string, sizeof(string), " แพทย์: %s ได้ชุบชีวิตคุณขึ้นมาอีกครั้ง คุณเสียเงินให้เขา จำนวน $%d", sendername, cpr2);
					SendClientMessage(giveplayerid, COLOR_ALLDEPT, string);
					format(string, sizeof(string), " คุณได้รับเงินจาก %s จำนวน $%d", name, cpr);
					SendClientMessage(playerid, COLOR_ALLDEPT, string);
					ClearAnimations(playerid);
					ApplyAnimation(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
					ApplyAnimation(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
					ApplyAnimation(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
					SetTimerEx("cprheal", 8000, 0, "d", giveplayerid);
					CprTime[giveplayerid] = 0;
					CprTimePoints[giveplayerid] = 0;
					deathcpr[giveplayerid] = 2;
					format(string, sizeof(string), "%s: เคลียร์, คุณจะไม่ตายหลอกน่า!", sendername);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
					SetPlayerColor(giveplayerid, COLOR_WHITE);
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   ยืนให้ตรงกับหัวใจด้วยครับ!");
						return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่แพทย์!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/death", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		if(deathcpr[playerid] != 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "คุณยังไม่ได้อยู่ในสภาพกำลังจะตาย");
			return 1;
		}
		if(CprTimePoints[playerid] == 0 && CprTime[playerid] == 0)
		{
//		    DropPlayerWeapons(playerid);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			PlayerFrozened[playerid] = 0;
			TogglePlayerControllable(playerid, 1);
			SetPlayerHealth(playerid, 0);
			deathcpr[playerid] = 0;
			format(string, sizeof(string), "* %s กลั้นใจตาย", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GameTextForPlayer(playerid, "~r~Death", 4000, 3);
			return 1;
		}
		else
		{
			format(string, sizeof(string), " โปรดรออีก %d วินาที เพื่อที่จะตรอมใจตาย", CprTimePoints[playerid] - CprTime[playerid]);
			SendClientMessage(playerid,  COLOR_LIGHTRED, string);
			return 1;
		}
  		}
	}
//----------------------------------[ADMINADMIN]-----------------------------------------------
//----------------------------------[mole]-----------------------------------------------
	if(strcmp(cmd, "/mole", true) == 0 && PlayerInfo[playerid][pAdmin] >= 4)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				//SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /mole [mole text]");
				return 1;
			}
			format(string, sizeof(string), "SMS: %s, Sender: MOLE (555)",result);
			if (gTeam[playerid] < 3){SendClientMessage(playerid, COLOR_YELLOW, string);}
			SendEnemyMessage(COLOR_YELLOW, string);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(gTeam[i] >= 3 && gPlayerSpawned[i])
					{
						RingTone[i] =20;
					}
				}
			}
			printf("MOLE: %s", result);
		}
		return 1;
	}
//----------------------------------[HQ]-----------------------------------------------
	if(strcmp(cmd, "/hq", true) == 0 && PlayerInfo[playerid][pAdmin] >= 4)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				//SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /hq [hq text]");
				return 1;
			}
			format(string, sizeof(string), "HQ: %s, over", result);
			if (gTeam[playerid] != 2 ){SendClientMessage(playerid, COLOR_DBLUE, string);}
			SendTeamBeepMessage(2, COLOR_DBLUE, string);
			printf("HQ: %s", result);
		}
		return 1;
	}
//----------------------------------[RECON]-----------------------------------------------
	if(strcmp(cmd, "/bigears", true) == 0 && PlayerInfo[playerid][pAdmin] >= 2)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!BigEar[playerid])
			{
				BigEar[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Your Ears Have Grown");
			}
			else if (BigEar[playerid])
			{
				(BigEar[playerid] = 0);
				SendClientMessage(playerid, COLOR_GRAD2, "   Your Ears Have Shrank");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/id", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /id [playerid/PartOfName]");
				return 1;
			}
			new target;
			target = ReturnUser(tmp);
			new sstring[256];
			if(IsPlayerConnected(target))
			{
			    if(target != INVALID_PLAYER_ID)
			    {
					GetPlayerName(target, giveplayer, sizeof(giveplayer));
					format(sstring, sizeof(sstring), "ID: (%d) %s",target,giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, sstring);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tv", true) == 0 || strcmp(cmd, "/recon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDonateRank] > 0 || PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            if(WatchingTV[playerid] < 1)
			    {
		        	GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
		        }
	        }
            new hkey = PlayerInfo[playerid][pPhousekey];
			new house = PlayerInfo[playerid][pLocal];
			if(Spectate[playerid] == 255 && PlayerInfo[playerid][pLocal] != 255 || Spectate[playerid] == 255 && PlayerInfo[playerid][pAdmin] >= 4)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
				Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
				PlayerInfo[playerid][pLocal] = 255;
				gTeam[playerid] = 0;
			}
			tmp = strtok(cmdtext, idx);
			if(strcmp("off", tmp, true, strlen(tmp)) == 0)
			{
			    if(WatchingTV[playerid] > 0)
			    {
			        WatchingTV[playerid] = 0;
					Spectate[playerid] = 253;
					GameTextForPlayer(playerid, "~w~                TV~n~~r~                Off", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not watching TV !");
				    return 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] <= 3)
			{
				if(house == 255)
				{
					GameTextForPlayer(playerid, "~r~There is no tv here", 5000, 1);
					return 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] > 3 || PlayerToPoint(12.0, playerid, HouseInfo[hkey][hExitx], HouseInfo[hkey][hExity],HouseInfo[hkey][hExitz]))
			{
			    if(HouseInfo[hkey][hHealthx] != 1)
			    {
			        GameTextForPlayer(playerid, "~r~This upgrade isn't installed", 5000, 1);
			        return 1;
			    }
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        Spectate[playerid] = giveplayerid;
						new Float:health;
						GetPlayerHealth(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
						new cash =  ScriptMoney[Spectate[playerid]];
						if (PlayerInfo[playerid][pAdmin] >= 4)
						{
							format(string, sizeof(string), "Recon: (%d) %s $%d H:%.0f",Spectate[playerid],giveplayer,cash,health);
						}
						else
						{
							format(string, sizeof(string), "UAV: (%d) %s",Spectate[playerid],giveplayer);
						}
						SendClientMessage(playerid, COLOR_GREEN, string);
						WatchingTV[playerid] = 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREEN, "Target is not available.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "   You are not in your House !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[UNCON]-----------------------------------------------

	if(strcmp(cmd, "/uncon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SetCamBack(playerid);
		}
		return 1;
	}

//----------------------------------[AdminChat]-----------------------------------------------
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/a)dmin [admin chat]");
				return 1;
			}
			format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], sendername, result);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendAdminMessage(COLOR_YELLOW, string);
			}
			printf("Admin %s: %s", sendername, result);
		}
		return 1;
	}
//--------------------------------------------------------------------------------------
//----------------------------------[cnn]-----------------------------------------------
	if(strcmp(cmd, "/cnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /cnn [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				format(string, sizeof(string), "~b~%s: ~w~%s",sendername,result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 6);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cnnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				new txtid;
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /cnnn <type> ");
					return 1;
				}
				txtid = strval(tmp);
				if(txtid == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "You can not select 2");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /cnnn <type> [cnnc textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				format(string, sizeof(string), "~w~%s",result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) == 1)
					{
						GameTextForPlayer(i, string, 5000, txtid);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
				return 1;
			}
		}
		return 1;
	}
//[ADMIN]______________________________________________________________________________
//-----------------------------------[JAIL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/prison",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   you are not authorized to use this command !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /prison [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
		            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* คุณได้ส่ง %s ไปคุกลับ", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					format(string, sizeof(string), "* คุณถูกทิ้งที่นี่โดย Admin %s เพราะคุณใช่โปรหรือโมดเพื่อประโยนช์ส่วนตัว", sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
					GameTextForPlayer(giveplayerid, "~w~Welcome to ~n~~r~Fort DeMorgan", 5000, 3);
					SetPlayerSkin(playerid, 268);
					WantedPoints[giveplayerid] = 0;
					WantedLevel[giveplayerid] = 0;
					SetPlayerStar(giveplayerid);
					SetPlayerInterior(giveplayerid, 0);
					PlayerInfo[giveplayerid][pJailed] = 2;
					PlayerInfo[giveplayerid][pJailTime] = 3600;
		            SetPlayerPos(giveplayerid, 107.2300,1920.6311,18.5208);
					SetPlayerWorldBounds(giveplayerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
		        }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/jail", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /jail [playerid/PartOfName] [time(minutes)]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* คุณได้ส่ง %s ไปคุก", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), "* คุณได้ถูกส่งคุกโดย Admin %s", sendername);
						SendClientMessage(playa, COLOR_LIGHTRED, string);
						ResetPlayerWeapons(playa);
						WantedPoints[playa] = 0;
						PlayerInfo[playa][pJailed] = 1;
						PlayerInfo[playa][pJailTime] = money*60;
						SetPlayerInterior(playa, 10);
						SetPlayerPos(playa, 227.4012,110.1810,999.0156);
						SetPlayerSkin(playerid, 268);
						format(string, sizeof(string), "* คุณถูกส่งคุกเวลา %d นาที   ค่าประกันตัว: ไม่มี", money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[TOD]-----------------------------------------------

	if(strcmp(cmd, "/tod", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /tod [timeofday] (0-23)");
				return 1;
			}
			new hour;
			hour = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
	            SetWorldTime(hour);
				format(string, sizeof(string), "   Time set to %d Hours.", hour);
				BroadCast(COLOR_GRAD1, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not authorized to use that command !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/startlotto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            format(string, sizeof(string), "Lottery News: We have started the Lottery Election.");
	            OOCOff(COLOR_WHITE, string);
	            new rand = random(50);
	            if(rand < 48) { rand += 2; }
	            Lotto(rand);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not an Admin !");
	            return 1;
	        }
	    }
		return 1;
	}
//-----------------------------------editstat---------------------------------------
	if(strcmp(cmd, "/setstat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /setstat [playerid/PartOfName] [statcode] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 SpawnHealth |3 UpgradePoints |4 Model ");
				SendClientMessage(playerid, COLOR_GRAD3, "|5 BankAccount |6 PhoneNumber |7 RespectPoints ");
				SendClientMessage(playerid, COLOR_GRAD2, "|8 HouseKey |9 BizKey |10 DonateRank |11 FMember");
				SendClientMessage(playerid, COLOR_GRAD2, "|12 Det |13 Lawyer |14 Fixer |15 News |16 Jack |17 Drug |18 Sex |19 Box |20 PassKey");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /setstat [playerid/PartOfName] [statcode] [amount]");
						SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 SpawnHealth |3 UpgradePoints |4 Model ");
						SendClientMessage(playerid, COLOR_GRAD3, "|5 BankAccount |6 PhoneNumber |7 RespectPoints ");
						SendClientMessage(playerid, COLOR_GRAD2, "|8 HouseKey |9 BizKey |10 DonateRank");
						SendClientMessage(playerid, COLOR_GRAD2, "|12 Det |13 Lawyer |14 Fixer |15 News |16 Jack |17 Drug |18 Sex |19 Box 20 CarKey");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /setstat [playerid/PartOfName] [statcode] [amount]");
						SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 SpawnHealth |3 UpgradePoints |4 Model ");
						SendClientMessage(playerid, COLOR_GRAD3, "|5 BankAccount |6 PhoneNumber |7 RespectPoints ");
						SendClientMessage(playerid, COLOR_GRAD2, "|8 HouseKey |9 BizKey |10 DonateRank");
						SendClientMessage(playerid, COLOR_GRAD2, "|12 Det |13 Lawyer |14 Fixer |15 News |16 Jack |17 Drug |18 Sex |19 Box 20 CarKey");
						return 1;
					}
					new amount;
					amount = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= 1339)
					{
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = amount;
								format(string, sizeof(string), "   The Player Was Set To Level %d", amount);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pSHealth] = amount;
								format(string, sizeof(string), "   The Player Was Set To %d Spawnhealth ", amount);
							}
							case 3:
							{
								PlayerInfo[giveplayerid][gPupgrade] = amount;
								format(string, sizeof(string), "   The Player Was Set To %d Upgrade Points", amount);
							}
							case 4:
							{
								PlayerInfo[giveplayerid][pModel] = amount;
								format(string, sizeof(string), "   The Player Was Set To Model %d", amount);
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pAccount] = amount;
								format(string, sizeof(string), "   The Player Account Was Set To $%d", amount);
							}
							case 6:
							{
								PlayerInfo[giveplayerid][pPnumber] = amount;
								format(string, sizeof(string), "   The Player Phone Number Was Set To %d", amount);
							}
							case 7:
							{
								PlayerInfo[giveplayerid][pExp] = amount;
								format(string, sizeof(string), "   The Player Respect Points Were Set To %d", amount);
							}
							case 8:
							{
								PlayerInfo[giveplayerid][pPhousekey] = amount;
								format(string, sizeof(string), "   The Player House Key Was Set To %d", amount);
							}
							case 9:
							{
								PlayerInfo[giveplayerid][pPbiskey] = amount;
								format(string, sizeof(string), "   The Player Business Key Was Set To %d", amount);
							}
							case 10:
							{
								PlayerInfo[giveplayerid][pDonateRank] = amount;
								format(string, sizeof(string), "   The Player DonateRank Was Set To %d", amount);
							}
							case 11:
							{
								PlayerInfo[giveplayerid][pFMember] = amount;
								format(string, sizeof(string), "   The Player Family Member Was Set To %d", amount);
							}
							case 12:
							{
								PlayerInfo[giveplayerid][pDetSkill] = amount;
								format(string, sizeof(string), "   The Player Detective Skill Set To %d", amount);
							}
							case 13:
							{
								PlayerInfo[giveplayerid][pLawSkill] = amount;
								format(string, sizeof(string), "   The Player Lawyer Skill Set To %d", amount);
							}
							case 14:
							{
								PlayerInfo[giveplayerid][pMechSkill] = amount;
								format(string, sizeof(string), "   The Player Car Mechanic Skill Set To %d", amount);
							}
							case 15:
							{
								PlayerInfo[giveplayerid][pNewsSkill] = amount;
								format(string, sizeof(string), "   The Player News Reporter Skill Set To %d", amount);
							}
							case 16:
							{
								PlayerInfo[giveplayerid][pJackSkill] = amount;
								format(string, sizeof(string), "   The Player Car Jacker Skill Set To %d", amount);
							}
							case 17:
							{
								PlayerInfo[giveplayerid][pDrugsSkill] = amount;
								format(string, sizeof(string), "   The Player Drug Dealer Skill Set To %d", amount);
							}
							case 18:
							{
								PlayerInfo[giveplayerid][pSexSkill] = amount;
								format(string, sizeof(string), "   The Player Sex Skill Set To %d", amount);
							}
							case 19:
							{
								PlayerInfo[giveplayerid][pBoxSkill] = amount;
								format(string, sizeof(string), "   The Player Box Skill Set To %d", amount);
							}
							case 77:
							{
								PlayerInfo[giveplayerid][pJob] = amount;
								format(string, sizeof(string), "   The Player Job Set To %d", amount);
							}
							case 88:
							{
								PlayerInfo[giveplayerid][pContractTime] = amount;
								format(string, sizeof(string), "   The Player Job Contract Time Set To %d", amount);
							}
							default:
							{
								format(string, sizeof(string), "   Invalid Stat Code", amount);
							}

						}
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
					}
				}//not valid id
			}//not connected
		}
		return 1;
	}
	if(strcmp(cmd, "/setfamily", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /setfamily [Family] [code] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 Members");
				return 1;
			}
			new family;
			family = strval(tmp);
			if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   FamilyNr can't be below 1 or above 10 !"); return 1; }
			family -= 1;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /setfamily [Family] [code] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 Members");
				return 1;
			}
			new stat;
			stat = strval(tmp);
			if(stat < 1 || stat > 1) { SendClientMessage(playerid, COLOR_GREY, "   Stat Code can't be below 1 or above 1 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /setfamily [Family] [code] [amount]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 Members");
				return 1;
			}
			new amount;
			amount = strval(tmp);
			if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Amount can't be below 1 or above 10 !"); return 1; }
			switch (stat)
			{
			    case 1:
			    {
					FamilyInfo[family][FamilyMembers] = amount;
					format(string, sizeof(string), "   Family %s set to %d members", FamilyInfo[family][FamilyName], amount);
			    }
			    default:
			    {
			    	format(string, sizeof(string), "   Invalid Stat Code");
			    }
			}
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		return 1;
	}
//----------------------------------[SETINT]-----------------------------------------------
    if(strcmp(cmd, "/setint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setint [playerid/PartOfName] [Interiorid]");
				return 1;
			}
			new intid;
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			intid = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playerid))
			    {
			        if(playerid != INVALID_PLAYER_ID)
			        {
					SetPlayerInterior(giveplayerid,intid);
					PlayerInfo[giveplayerid][pInt] = intid;
					format(string, sizeof(string), " Interior: %d", intid);
					SendClientMessage(giveplayerid, COLOR_GRAD1, string);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[SKYDIVE]------------------------------------------------
	if(strcmp(cmd, "/skydive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				GetPlayerPos(playerid, rx, ry, rz);
				if (IsPlayerConnected(playerid))
				{
					GivePlayerWeapon(playerid, 46, 0);
					SetPlayerPos(playerid,rx, ry, rz+1500);
					SendClientMessage(playerid, COLOR_WHITE, "GO!! GO!! GO!!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[FOURDIVE]------------------------------------------------
	if(strcmp(cmd, "/fourdive", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /fourdive [playerid1] [playerid2] [playerid3] [playerid4]");
				return 1;
			}
			new para1;
			new para2;
			new para3;
			new para4;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para2 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para3 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			para4 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (IsPlayerConnected(para1)){ GivePlayerWeapon(para1, 46, 0); SetPlayerPos(para1,1536.0, -1360.0, 1350.0);SetPlayerInterior(para1,0);PlayerInfo[para1][pInt] = 0;SendClientMessage(para1, COLOR_WHITE, "GO!! GO!! GO!!");}
				if ((IsPlayerConnected(para2)) && (para2>0)) { GivePlayerWeapon(para2, 46, 0); SetPlayerPos(para2,1536.0, -1345.0, 1350.0);SetPlayerInterior(para2,0);PlayerInfo[para2][pInt] = 0;SendClientMessage(para2, COLOR_RED, "GO!! GO!! GO!!");}
				if ((IsPlayerConnected(para3)) && (para3>0)) { GivePlayerWeapon(para3, 46, 0); SetPlayerPos(para3,1552.0, -1345.0, 1350.0);SetPlayerInterior(para3,0);PlayerInfo[para3][pInt] = 0;SendClientMessage(para3, COLOR_RED, "GO!! GO!! GO!!");}
				if ((IsPlayerConnected(para4)) && (para4>0)) { GivePlayerWeapon(para4, 46, 0); SetPlayerPos(para4,1552.0, -1360.0, 1350.0);SetPlayerInterior(para4,0);PlayerInfo[para4][pInt] = 0;SendClientMessage(para4, COLOR_RED, "GO!! GO!! GO!!");}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[INVITE]------------------------------------------------
	if(strcmp(cmd, "/invite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /invite [playerid/PartOfName]");
				return 1;
			}
			new para1;
			new ftext[20];
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLeader] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (gTeam[para1]==TEAM_GREEN && PlayerInfo[para1][pMember] == 0 && PlayerInfo[para1][pFMember] == 255)
					    {
					        if(PlayerInfo[para1][pJob] > 0)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   ไม่สามารถเชิญชวนได้ เพราะเขามีอาชีพอยู่แล้ว !");
					            return 1;
					        }
                            SafeGivePlayerMoney(playerid,0);
					        if(PlayerInfo[playerid][pLeader] == 1) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "เจ้าหน้าที่ตำรวจ"; ChosenSkin[para1] = 284; SetPlayerSkin(para1, 284); }
					        else if(PlayerInfo[playerid][pLeader] == 2) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "เจ้าหน้าที่ FBI"; ChosenSkin[para1] = 286; SetPlayerSkin(para1, 286); }
					        else if(PlayerInfo[playerid][pLeader] == 3) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "นาวิกโยธิน"; ChosenSkin[para1] = 287; SetPlayerSkin(para1, 287); }
					        else if(PlayerInfo[playerid][pLeader] == 4) { PlayerInfo[para1][pTeam] = 1; gTeam[para1] = 1; ftext = "แพทย์"; ChosenSkin[para1] = 258; SetPlayerSkin(para1, 258); }
                            else if(PlayerInfo[playerid][pLeader] == 5)  { PlayerInfo[para1][pTeam] = 10; gTeam[para1] = 10; ftext = "มาเฟีย"; ChosenSkin[para1] = 258; SetPlayerSkin(para1, 258); }
					        else if(PlayerInfo[playerid][pLeader] == 6) { PlayerInfo[para1][pTeam] = 10; gTeam[para1] = 10; ftext = "ยากูซ่า"; ChosenSkin[para1] = 121; SetPlayerSkin(para1, 121); }
						    else if(PlayerInfo[playerid][pLeader] == 7 || PlayerInfo[playerid][pMember] == 7){ PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "บอดิ้กาดนายก"; ChosenSkin[para1] = 66; SetPlayerSkin(para1, 66); }
				            else if(PlayerInfo[playerid][pLeader] == 8){ PlayerInfo[para1][pTeam] = 10; gTeam[para1] = 10; ftext = "นักล่าค่าหัว"; ChosenSkin[para1] = 127; SetPlayerSkin(para1, 127); }
					        else if(PlayerInfo[playerid][pLeader] == 9){ PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; ftext = "นักข่าว"; ChosenSkin[para1] = 148; SetPlayerSkin(para1, 148); }
					        else if(PlayerInfo[playerid][pLeader] == 10) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; ftext = "แท็กซี่"; ChosenSkin[para1] = 255; SetPlayerSkin(para1, 255); }
					        else if(PlayerInfo[playerid][pLeader] == 11) { PlayerInfo[para1][pTeam] = 12; gTeam[para1] = 12; ftext = "กรมการขนส่ง"; ChosenSkin[para1] = 59; SetPlayerSkin(para1, 59); }
					        else if(PlayerInfo[playerid][pLeader] == 12){ PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "Grove Street"; ChosenSkin[para1] = 105; SetPlayerSkin(para1, 105); }
					        else if(PlayerInfo[playerid][pLeader] == 13) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "Ballas"; ChosenSkin[para1] = 102; SetPlayerSkin(para1, 102); }
					        else if(PlayerInfo[playerid][pLeader] == 14) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "Vagos"; ChosenSkin[para1] = 108; SetPlayerSkin(para1, 108); }
					        else if(PlayerInfo[playerid][pLeader] == 15) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "Aztecas"; ChosenSkin[para1] = 114; SetPlayerSkin(para1, 114); }
                            else if(PlayerInfo[playerid][pLeader] == 16) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "แว็นบอย"; ChosenSkin[para1] = 100; SetPlayerSkin(para1, 100); }
                            else if(PlayerInfo[playerid][pLeader] == 17) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "แกีงประตูผี"; ChosenSkin[para1] = 173; SetPlayerSkin(para1, 173); }
                            else if(PlayerInfo[playerid][pLeader] == 18) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "ทีใงานใต็ตึก"; ChosenSkin[para1] = 176; SetPlayerSkin(para1, 176); }
							else if(PlayerInfo[playerid][pLeader] == 19) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "องกรณ์ลับ"; ChosenSkin[para1] = 166; SetPlayerSkin(para1, 166); }
							else if(PlayerInfo[playerid][pLeader] == 20) { PlayerInfo[para1][pTeam] = 5; gTeam[para1] = 5; ftext = "redblood"; ChosenSkin[para1] = 185; SetPlayerSkin(para1, 185); }
							else if(PlayerInfo[playerid][pLeader] == 21) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "เจ้าหน้าที่ตำรวจ"; ChosenSkin[para1] = 284; SetPlayerSkin(para1, 284); }
							else if(PlayerInfo[playerid][pLeader] == 22) { PlayerInfo[para1][pTeam] = 2; gTeam[para1] = 2; ftext = "นาวิกโยธิน"; ChosenSkin[para1] = 287; SetPlayerSkin(para1, 287); }
			                else { return 1; }
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							PlayerInfo[para1][pMember] = PlayerInfo[playerid][pLeader];
							PlayerInfo[para1][pRank] = 1;
							printf("AdmCmd: %s has invited %s to join %s.", sendername, giveplayer, ftext);
							format(string, sizeof(string), "   คุณ %s, ได้รับคุณเข้า %s", sendername, ftext);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "   คุณได้รับ %s เข้า %s", giveplayer,ftext);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[para1][pModel] = ChosenSkin[para1];
		    	            PlayerInfo[para1][pChar] = ChosenSkin[para1];
						   	SetPlayerSkin(para1,ChosenSkin[para1]);
						   	ClearAnimations(para1);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  ผู้เล่นคนนั้นมีคดีอยู่ / ผู้เล่นคนนั้นมีอาชีฑเสริมอยู่ / ผู้เล่นคนนั้นมีอาชีพหลัดแล้ว.");
						    return 1;
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   สำหรับลีดเดอณืเท่านั้น!");
			}
		}
		return 1;
	}
//----------------------------------[Personal Car]--------------------------------------------

//----------------------------------[UNINVITE]------------------------------------------------
	if(strcmp(cmd, "/uninvite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /uninvite [playerid/PartOfName]");
				return 1;
			}
 			new para1;
			para1 = ReturnUser(tmp);
			if(PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pMember] >= 5)
			{
				if(PlayerInfo[para1][pMember] != PlayerInfo[playerid][pRank])
				{
 					SendClientMessage(playerid, COLOR_GRAD1, " คุณไม่สามารถเตะผู้อื่นข้ามหลีดได้ !");
 					return 1;
				}
			}
			if(PlayerInfo[playerid][pLeader] >= 1)
			{
				if(PlayerInfo[para1][pMember] != PlayerInfo[playerid][pLeader])
				{
 					SendClientMessage(playerid, COLOR_GRAD1, " คุณไม่สามารถเตะผู้อื่นข้ามหลีดได้ !");
 					return 1;
				}
			}
			if (PlayerInfo[playerid][pLeader] >= 1 || PlayerInfo[playerid][pMember] >= 1 && PlayerInfo[playerid][pRank] >= 5)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pMember] > 0)
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							printf("AdmCmd: %s has uninvited %s.", sendername, giveplayer);
							format(string, sizeof(string), "* คุณถูกเตะจาก แฟลมิลี่/เจ้าหน้าที่, จากหลีดเดอร์ %s", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							SendClientMessage(para1, COLOR_LIGHTBLUE, "* ตอนนี้คุณกลายเปน คนธรรมดาอีกครั้ง.");
			                gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMember] = 0;
							PlayerInfo[para1][pRank] = 0;
							PlayerInfo[para1][pChar] = 0;
							new rand = random(sizeof(CIV));
							SetSpawnInfo(para1, gTeam[para1], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
							PlayerInfo[para1][pModel] = CIV[rand];
							MedicBill[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), "   คุณได้ไล่ %s ออกจากเจ้าหน้าที่", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่สามารถใช้คำสั่งนี้ได้ !");
			}
		}
		return 1;
	}
//----------------------------------[UNINVITE]------------------------------------------------
	if(strcmp(cmd, "/uninvite2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /uninvite2 [playerid/PartOfName]");
				return 1;
			}
 			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pMember] > 0)
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							printf("AdmCmd: %s has uninvited %s.", sendername, giveplayer);
							format(string, sizeof(string), "* You have been kicked from a Family / Police Force, by Admin %s", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							SendClientMessage(para1, COLOR_LIGHTBLUE, "* ตอนนี้คุณกลายเปน คนธรรมดาอีกครั้ง.");
			                gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMember] = 0;
							PlayerInfo[para1][pRank] = 0;
							PlayerInfo[para1][pChar] = 0;
							new rand = random(sizeof(CIV));
							SetSpawnInfo(para1, gTeam[para1], CIV[rand],0.0,0.0,0.0,0,0,0,0,0,0,0);
							PlayerInfo[para1][pModel] = CIV[rand];
							MedicBill[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), "   You have kicked %s from his Family / Police Force.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่สามารถใช้คำสั่งนี้ได้ !");
			}
		}
		return 1;
	}
//----------------------------------[MAKEADMIN]------------------------------------------------
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /makeadmin [playerid/PartOfName] [level(1-3)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1341)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pAdmin] = level;
						printf("AdmCmd: %s has promoted %s to a level %d admin.", sendername, giveplayer, level);
						format(string, sizeof(string), "   You have been promoted to a level %d admin by %s", level, sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   You have promoted %s to a level %d admin.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[MAKEIRCADMIN]----------------------------------------------
    if(strcmp(cmd, "/makeircadmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /makeircadmin [playerid/PartOfName] [ChannelNr]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /makeircadmin [playerid/PartOfName] [ChannelNr]");
				return 1;
			}
			new channel = strval(tmp);
			if(channel > 10 || channel < 0) { SendClientMessage(playerid, COLOR_GREY, "   Dont go below number 0, or above number 10!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* You've made %s an IRC Admin over Channel %d.", giveplayer, channel);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s has made you an IRC Admin over Channel %d.", sendername, channel);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s", giveplayer);
						switch(channel)
						{
						    case 1:
						    {
						        strmid(IRCInfo[0][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[0][iNeedPass] = 0; IRCInfo[0][iLock] = 0;
						    }
						    case 2:
						    {
						        strmid(IRCInfo[1][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[1][iNeedPass] = 0; IRCInfo[1][iLock] = 0;
						    }
						    case 3:
						    {
						        strmid(IRCInfo[2][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[2][iNeedPass] = 0; IRCInfo[2][iLock] = 0;
						    }
						    case 4:
						    {
						        strmid(IRCInfo[3][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[3][iNeedPass] = 0; IRCInfo[3][iLock] = 0;
						    }
						    case 5:
						    {
						        strmid(IRCInfo[4][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[4][iNeedPass] = 0; IRCInfo[4][iLock] = 0;
						    }
						    case 6:
						    {
						        strmid(IRCInfo[5][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[5][iNeedPass] = 0; IRCInfo[5][iLock] = 0;
						    }
						    case 7:
						    {
						        strmid(IRCInfo[6][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[6][iNeedPass] = 0; IRCInfo[6][iLock] = 0;
						    }
						    case 8:
						    {
						        strmid(IRCInfo[7][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[7][iNeedPass] = 0; IRCInfo[7][iLock] = 0;
						    }
						    case 9:
						    {
						        strmid(IRCInfo[8][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[8][iNeedPass] = 0; IRCInfo[8][iLock] = 0;
						    }
						    case 10:
						    {
						        strmid(IRCInfo[9][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[9][iNeedPass] = 0; IRCInfo[9][iLock] = 0;
						    }
						}
						SaveIRC();
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   you are not authorized to do that !");
			    return 1;
			}
		}
		return 1;
	}
//----------------------------------[MAKELEADER]------------------------------------------------
	if(strcmp(cmd, "/makeleader", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /makeleader [playerid/PartOfName] [Number(1-18)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 22 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "   Dont go below number 0, or above number 18!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
			            if(PlayerInfo[para1][pMember] > 0 || PlayerInfo[para1][pFMember] < 255)
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   That player is in a Faction / Family !");
			                return 1;
			            }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pLeader] = level;
						format(string, sizeof(string), "   คุณได้รับการตั้งแต่ให้เป็นหลีดเดอร์โดย ADMIN %s", sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   คุณได้ไห้ %s เป็นหลีดเดอร์ที่ %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						if(level == 0) { PlayerInfo[para1][pChar] = 0; }
						else if(level == 1) { PlayerInfo[para1][pChar] = 288; } //Police Force
						else if(level == 2) { PlayerInfo[para1][pChar] = 286; } //FBI/ATF
						else if(level == 3) { PlayerInfo[para1][pChar] = 287; } //National Guard
						else if(level == 4) { PlayerInfo[para1][pChar] = 70; } //Fire/Ambulance
						else if(level == 5) { PlayerInfo[para1][pChar] = 113; } //La Cosa Nostra
						else if(level == 6) { PlayerInfo[para1][pChar] = 120; } //Yakuza
						else if(level == 7) { PlayerInfo[para1][pChar] = 147; } //Mayor
						else if(level == 8) { PlayerInfo[para1][pChar] = 294; } //Hitmans
						else if(level == 9) { PlayerInfo[para1][pChar] = 187; } //News Reporters
						else if(level == 10) { PlayerInfo[para1][pChar] = 61; } //Taxi Cab Company
						else if(level == 11) { PlayerInfo[para1][pChar] = 171; } //Driving/Flying School
						else if(level == 12) { PlayerInfo[para1][pChar] = 270; } //GROVE STREET
						else if(level == 13) { PlayerInfo[para1][pChar] = 104; } //BALLAS
						else if(level == 14) { PlayerInfo[para1][pChar] = 108; } //VAGOS
						else if(level == 15) { PlayerInfo[para1][pChar] = 115; } //Aztecas
						else if(level == 16) { PlayerInfo[para1][pChar] = 181; } //Vance
						else if(level == 17) { PlayerInfo[para1][pChar] = 174; } //ประตูผี
						else if(level == 18) { PlayerInfo[para1][pChar] = 82; } //ใต้ตึก
						else if(level == 19) { PlayerInfo[para1][pChar] = 166; } //องกรณ์ลับ
						else if(level == 20) { PlayerInfo[para1][pChar] = 29; } //redblood
						else if(level == 21) { PlayerInfo[para1][pChar] = 288; } //Police Force ls
						else if(level == 22) { PlayerInfo[para1][pChar] = 287; } //National Guard ls
					    PlayerInfo[para1][pRank] = 6;
					    gTeam[para1] = 11;
					    PlayerInfo[para1][pTeam] = 11;
					    SetPlayerSkin(para1, PlayerInfo[para1][pChar]);
					    GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					    GetPlayerName(playerid,sendername, sizeof(sendername));
					    format(string, 256, "AdmWarning: %s ได้แต่งตั้งให้ %s เป็นหลีดเดอร์ที่ %d", sendername, giveplayer, level);
					    SendAdminMessage(COLOR_YELLOW, string);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rentcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!PlayerToPoint(3, playerid,-1968.5184,307.9874,35.1719))
			{
				SendClientMessage(playerid, COLOR_GRAD2, " คุณไม่ได้อยู่ที่กิจการเช่ารถ!");
				return 1;
			}
			if(RentCarKey[playerid] != 999)
			{
				SendClientMessage(playerid, COLOR_GRAD2, " คุณเช่ารถไปแล้วไม่สามารถเช่าได้อีก!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ .::RENTCAR::. __________________|");
   	            SendClientMessage(playerid, COLOR_WHITE, "USAGE: /rentcar [numbers]");
   	            SendClientMessage(playerid, COLOR_GREY, "Car names: 1.faggio(200) 2.Elegant(500) 3.sultan(1500) 4.jester(2000)");
			   	SendClientMessage(playerid, COLOR_GREY, "Car names: 5.bmx(100) 6.savana(1000) 7.Uranus(2000) 8.Sadler Shit(200).");
			   	SendClientMessage(playerid, COLOR_GREY, "ล็อกรถพิมพ์/carlock ปลดล็อกรถพิมพ์/uncarlock");
			    SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
				return 1;
			}
 		}
		new Rentcar = strval(tmp);
		if (Rentcar == 1 && ScriptMoney[playerid] > 199)
		{
			new carid = CreateVehicle(462, -1972.2280,278.3544,35.1719, 0.0, -1, -1, 30000);
			RentCarKey[playerid] = carid;
			SafeGivePlayerMoney(playerid,-200);
			SendClientMessage(playerid, COLOR_GREY, "รถเช่าของคุณมาแล้ว (กด /unrentcar เพื่อเลิกเช่า)");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ได้จ่ายเงินให้พนักงาน และหยิบกุญแจเช่ารถออกมา", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SBizzInfo[1][sbTill] += 200;
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			return 1;
		}
		if (Rentcar == 2 && ScriptMoney[playerid] > 499)
		{
			new carid = CreateVehicle(507, -1972.2280,278.3544,35.1719, 0.0, -1, -1, 30000);
			RentCarKey[playerid] = carid;
			SafeGivePlayerMoney(playerid,-500);
			SendClientMessage(playerid, COLOR_GREY, "รถเช่าของคุณมาแล้ว (กด /unrentcar เพื่อเลิกเช่า)");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ได้จ่ายเงินให้พนักงาน และหยิบกุญแจเช่ารถออกมา", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SBizzInfo[1][sbTill] += 500;
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			return 1;
		}
		if (Rentcar == 3 && ScriptMoney[playerid] > 1499)
		{
			new carid = CreateVehicle(560, -1972.2280,278.3544,35.1719, 0.0, -1, -1, 30000);
			RentCarKey[playerid] = carid;
			SafeGivePlayerMoney(playerid,-1500);
			SendClientMessage(playerid, COLOR_GREY, "รถเช่าของคุณมาแล้ว (กด /unrentcar เพื่อเลิกเช่า)");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ได้จ่ายเงินให้พนักงาน และหยิบกุญแจเช่ารถออกมา", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SBizzInfo[1][sbTill] += 1500;
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			return 1;
		}
		if (Rentcar == 4 && ScriptMoney[playerid] > 1999)
		{
			new carid = CreateVehicle(559, -1972.2280,278.3544,35.1719, 0.0, -1, -1, 30000);
			RentCarKey[playerid] = carid;
			SafeGivePlayerMoney(playerid,-2000);
			SendClientMessage(playerid, COLOR_GREY, "รถเช่าของคุณมาแล้ว (กด /unrentcar เพื่อเลิกเช่า)");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ได้จ่ายเงินให้พนักงาน และหยิบกุญแจเช่ารถออกมา", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SBizzInfo[1][sbTill] += 1999;
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			return 1;
		}
		if (Rentcar == 5 && ScriptMoney[playerid] > 99)
		{
			new carid = CreateVehicle(481, -1972.2280,278.3544,35.1719, 0.0, -1, -1, 30000);
			RentCarKey[playerid] = carid;
			SafeGivePlayerMoney(playerid,-100);
			SendClientMessage(playerid, COLOR_GREY, "รถเช่าของคุณมาแล้ว (กด /unrentcar เพื่อเลิกเช่า)");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ได้จ่ายเงินให้พนักงาน และหยิบกุญแจเช่ารถออกมา", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SBizzInfo[1][sbTill] += 100;
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			return 1;
		}
		if (Rentcar == 6 && ScriptMoney[playerid] > 999)
		{
			new carid = CreateVehicle(567, -1972.2280,278.3544,35.1719, 0.0, -1, -1, 30000);
			RentCarKey[playerid] = carid;
			SafeGivePlayerMoney(playerid,-1000);
			SendClientMessage(playerid, COLOR_GREY, "รถเช่าของคุณมาแล้ว (กด /unrentcar เพื่อเลิกเช่า)");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ได้จ่ายเงินให้พนักงาน และหยิบกุญแจเช่ารถออกมา", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SBizzInfo[1][sbTill] += 1000;
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			return 1;
		}
		if (Rentcar == 7 && ScriptMoney[playerid] > 1999)
		{
			new carid = CreateVehicle(558, -1972.2280,278.3544,35.1719, 0.0, -1, -1, 30000);
			RentCarKey[playerid] = carid;
			SafeGivePlayerMoney(playerid,-2000);
			SendClientMessage(playerid, COLOR_GREY, "รถเช่าของคุณมาแล้ว (กด /unrentcar เพื่อเลิกเช่า)");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ได้จ่ายเงินให้พนักงาน และหยิบกุญแจเช่ารถออกมา", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SBizzInfo[1][sbTill] += 1999;
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			return 1;
		}
		if (Rentcar == 8 && ScriptMoney[playerid] > 199)
		{
			new carid = CreateVehicle(605, -1972.2280,278.3544,35.1719, 0.0, -1, -1, 30000);
			RentCarKey[playerid] = carid;
			SafeGivePlayerMoney(playerid,-200);
			SendClientMessage(playerid, COLOR_GREY, "รถเช่าของคุณมาแล้ว (กด /unrentcar เพื่อเลิกเช่า)");
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ได้จ่ายเงินให้พนักงาน และหยิบกุญแจเช่ารถออกมา", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SBizzInfo[1][sbTill] += 200;
			ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
			SBizzInfo[1][sbProducts]--;
			return 1;
		}
		if (Rentcar != 1 && Rentcar != 2 && Rentcar != 3 && Rentcar != 4 && Rentcar != 5 && Rentcar != 6&& Rentcar != 7 && Rentcar != 8)
		{
			SendClientMessage(playerid, COLOR_GREY, "   ชื่อรถผิดพลาด !");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, " คุณมีเงินไม่พอที่จะเช่ารถได้!");
			return 1;
		}
 	}
	if(strcmp(cmd, "/carlock", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(RentCarKey[playerid] == 999)
			{
				SendClientMessage(playerid, COLOR_GRAD2, " คุณยังไม่ได้เช่ารถ!");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i))
				{
					SetVehicleParamsForPlayer(RentCarKey[playerid],i,0,1);
					format(string, sizeof(string), "~w~Vehicle~n~~R~Locked");
					GameTextForPlayer(playerid, string, 4000, 3);
					return 1;
				}
			}
		}
	}
	if(strcmp(cmd, "/carunlock", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(RentCarKey[playerid] == 999)
			{
				SendClientMessage(playerid, COLOR_GRAD2, " คุณยังไม่ได้เช่ารถ!");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i))
				{
					SetVehicleParamsForPlayer(RentCarKey[playerid],i,0,0);
					format(string, sizeof(string), "~w~Vehicle~n~~R~UnLocked");
					GameTextForPlayer(playerid, string, 4000, 3);
					return 1;
				}
			}
		}
	}
	if(strcmp(cmd, "/unrentcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(RentCarKey[playerid] != 999)
			{
				DestroyVehicle(RentCarKey[playerid]);
				GameTextForPlayer(playerid, "~w~You unrent a vehicle", 5000, 3);
				RentCarKey[playerid] = 999;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rentfino", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(GetPlayerVehicleID(playerid) >= 247 && GetPlayerVehicleID(playerid) <= 252)
			{
				if(GetPlayerVehicleID(playerid) >= 247 && GetPlayerVehicleID(playerid) <= 252)
				{
					if (GetPlayerMoney(playerid) < -250)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   You dont have that much cash !");
						return 1;
					}
					SafeGivePlayerMoney(playerid,-250);
					OnPropUpdate();
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TogglePlayerControllable(playerid, 1);
					HireCar[playerid] = GetPlayerVehicleID(playerid);
				}
			}
		}
	}
	if(strcmp(cmd, "/rentplane", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(GetPlayerVehicleID(playerid) >= 134 && GetPlayerVehicleID(playerid) <= 137)
			{
				if(GetPlayerVehicleID(playerid) >= 134 && GetPlayerVehicleID(playerid) <= 137)
				{
					if (GetPlayerMoney(playerid) < -2500)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   You dont have that much cash !");
						return 1;
					}
					SafeGivePlayerMoney(playerid,-2500);
					OnPropUpdate();
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TogglePlayerControllable(playerid, 1);
					HireCar[playerid] = GetPlayerVehicleID(playerid);
				}
			}
		}
	}
    if(strcmp(cmd, "/rentboat", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if(GetPlayerVehicleID(playerid) >= 256 && GetPlayerVehicleID(playerid) <= 260)
			{
				if(GetPlayerVehicleID(playerid) >= 256 && GetPlayerVehicleID(playerid) <= 260)
				{
					if (GetPlayerMoney(playerid) < -150)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "   You dont have that much cash !");
						return 1;
					}
					SafeGivePlayerMoney(playerid,-2500);
					OnPropUpdate();
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					TogglePlayerControllable(playerid, 1);
					HireCar[playerid] = GetPlayerVehicleID(playerid);
				}
			}
		}
	}
	if(strcmp(cmd, "/forceskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /forceskin [playerid/PartOfName]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[para1][pMember] < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   That player is not in a Family / Force !");
				            return 1;
				        }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* You are forced to Change your Skin by Admin %s.", sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* You have forced %s To change his Skin.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						if(PlayerInfo[para1][pMember] == 1) { PlayerInfo[para1][pTeam] = 5; ChosenSkin[para1] = 59; }
				        else if(PlayerInfo[para1][pMember] == 2) { PlayerInfo[para1][pTeam] = 6; ChosenSkin[para1] = 121; }
				        else if(PlayerInfo[para1][pMember] == 3) { PlayerInfo[para1][pTeam] = 7; ChosenSkin[para1] = 98; }
				        else if(PlayerInfo[para1][pMember] == 4) { PlayerInfo[para1][pTeam] = 8; ChosenSkin[para1] = 46; }
				        else if(PlayerInfo[para1][pMember] == 5) { PlayerInfo[para1][pTeam] = 9; ChosenSkin[para1] = 174; }
				        else if(PlayerInfo[para1][pMember] == 6) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 280; }
				        else if(PlayerInfo[para1][pMember] == 7) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 164; }
				        else if(PlayerInfo[para1][pMember] == 8) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 186; }
				        else { return 1; }
                        SetPlayerInterior(para1,0);
						new rand = random(sizeof(gInviteSpawns));
						SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						TogglePlayerControllable(para1, 0);
					    SelectChar[para1] = 255;
					    SelectCharID[para1] = PlayerInfo[para1][pMember];
					    SelectCharPlace[para1] = 1;
					    PlayerInfo[para1][pModel] = ChosenSkin[para1];
				    	PlayerInfo[para1][pChar] = ChosenSkin[para1];
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Use 'next' to Select the char you want to use.");
					    SendClientMessage(para1, COLOR_LIGHTRED, "* If you've found the Char you want to use, type 'done'.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[GIVERANK]------------------------------------------------
	if(strcmp(cmd, "/giverank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /giverank [playerid/PartOfName] [Number(1-6)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 6 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "   การให้ยศต้องไม่เกิน 1 - 6 เท่านั้น !"); return 1; }
			if(para1 == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถให้ยศตัวเองได้ !"); return 1; }
			if(PlayerInfo[para1][pMember] != PlayerInfo[playerid][pLeader]) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถให้ยศข้ามหลีดได้ !"); return 1; }
			if (PlayerInfo[playerid][pLeader] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pRank] = level;
						format(string, sizeof(string), "   คุณได้รับการเลื่อนยศจาก Leaders %s", sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   คุณได้เลื่อนยศให้ %s เป็นยศที่ %d", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่สามารถใช้คำสั่งนี้ได้ !");
			}
		}
		return 1;
	}
//----------------------------------[setteam]------------------------------------------------
	if(strcmp(cmd, "/setteam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setteam [playerid/PartOfName] [team 1(civ) - 2(cop)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pTeam] = level;
						gTeam[para1] = level;
						SetPlayerWeapons(para1);
						SetPlayerSpawn(para1);
						ClearCrime(para1);
						printf("AdmCmd: %s has switched %s to team %d.", sendername, giveplayer, level);
						format(string, sizeof(string), "   You have been switched to team %d by %s", level, sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   You have switched %s to team %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[GOTO]-----------------------------------------------
	if(strcmp(cmd, "/gotols", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1529.6,-1691.2,13.3);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported !");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not authorized to use that command !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotosw", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 181.8048,-87.9812,1002.0234);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported !");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not authorized to use that command !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotolv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar,1699.2, 1435.1, 10.7);//1699.2, 1435.1, 10.7
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1699.2, 1435.1, 10.7);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotosf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1930.3608,198.0463,25.6393);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -1930.3608,198.0463,25.6393);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/entercar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /entercar [carid]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				PutPlayerInVehicle(playerid, testcar, 1);
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotocar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /gotocar [carid]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				SendClientMessage(playerid, COLOR_GRAD1, "   teleporter destination set");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotomark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotoin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1416.107000,0.268620,1000.926000);
				}
				else
				{
					SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
				SetPlayerInterior(playerid,1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotostad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94);
				}
				else
				{
					SetPlayerPos(playerid, -1435.75, -652.664, 1054.94);
				}
				SetPlayerInterior(playerid,4);
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotorc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -975.0042,1080.6211,1344.9812);
				}
				else
				{
					SetPlayerPos(playerid, -975.0042,1080.6211,1344.9812);
				}
				SetPlayerInterior(playerid,4);
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gotojet", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34);
				}
				else
				{
					SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
				}
				SetPlayerInterior(playerid,1);
				SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/goto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /goto [playerid/PartOfName]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
							PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SendClientMessage(playerid, COLOR_GRAD1, "   You have been teleported");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d is not an active player.", plo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//----------------------------------[GETHERE]-----------------------------------------------
	if(strcmp(cmd, "/gethere", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /gethere [playerid/PartOfName]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[plo][pAdmin] > 1342)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Ask the admin to goto you.");
						return 1;
					}
					if (PlayerInfo[playerid][pAdmin] >= 3)
					{
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SendClientMessage(plo, COLOR_GRAD1, "   You have been teleported");
    					GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid,sendername, sizeof(sendername));
						format(string, 256, "AdmWarning: %s ได้ดึงตัว %s มาหาเขา", sendername, giveplayer);
						SendAdminMessage(COLOR_YELLOW, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d is not an active player.", plo);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/getcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /getcar [carid]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/oldcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    format(string, sizeof(string), "Your old car was: %d",gLastCar[playerid]);
		    SendClientMessage(playerid, COLOR_GREY, string);
	    }
	    return 1;
	}
	if(strcmp(cmd, "/fuelcars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            for(new c=0;c<CAR_AMOUNT;c++)
				{
					Gas[c] = GasMax;
				}
				SendClientMessage(playerid, COLOR_GREY, "   All cars filled with Fuel ! ");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not an Admin ! ");
	            return 1;
	        }
	    }
	    return 1;
	}

//----------------------------------[GiveGun]------------------------------------------------
	if(strcmp(cmd, "/givegun", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /givegun [playerid/PartOfName] [weaponid(eg. 46 = Parachute)] [ammo]");
				SendClientMessage(playerid, COLOR_GRAD4, "3(Club) 4(knife) 5(bat) 6(Shovel) 7(Cue) 8(Katana) 10-13(Dildo) 14(Flowers) 16(Grenades) 18(Molotovs) 22(Pistol) 23(SPistol)");
				SendClientMessage(playerid, COLOR_GRAD4, "24(Eagle) 25(shotgun) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
				return 1;
			}
			new gun;
			new ammo;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /givegun [playerid/PartOfName] [weaponid] [ammo]");
				SendClientMessage(playerid, COLOR_GRAD4, "3(Club) 4(knife) 5(bat) 6(Shovel) 7(Cue) 8(Katana) 10-13(Dildo) 14(Flowers) 16(Grenades) 18(Molotovs) 22(Pistol) 23(SPistol)");
				SendClientMessage(playerid, COLOR_GRAD4, "24(Eagle) 25(shotgun) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 41(spray) 42(exting) 43(Camera) 46(Parachute)");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo <1||ammo > 999)
			{ SendClientMessage(playerid, COLOR_GRAD1, "   dont go below 1 or above 999 bullets!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
						GivePlayerWeapon(giveplayerid, gun, ammo);
			            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid,sendername, sizeof(sendername));
						format(string, 256, "AdmWarning: %s ได้เสกอาวุธหมายเลข %d จำนวน %d นัด ให้กับ %s", sendername, gun, ammo, giveplayer);
						SendAdminMessage(COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/giveweapon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		if(GetPlayerWeapon(playerid) != 0)
		{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
					SendClientMessage(playerid, COLOR_GREY, "   คุณต้องไม่อยู่ในรถ !");
					return 1;
			    }
			    new Car = GetPlayerVehicleID(playerid);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /giveweapon [playerid/PartOfName] [Ammo]");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* คำเตือนปืนที่คุณจะให้ต้องเป็นปืนที่คุณจะถืออยู่เท่านั้น");
					return 1;
				}
				if(GetPlayerWeapon(playerid) != 16 && GetPlayerWeapon(playerid) != 23 && GetPlayerWeapon(playerid) != 24 && GetPlayerWeapon(playerid) != 25 && GetPlayerWeapon(playerid) != 29 && GetPlayerWeapon(playerid) != 30 && GetPlayerWeapon(playerid) != 31 && GetPlayerWeapon(playerid) != 34)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ปืนพวกนี้ไม่สามารถให้ได้ (ปืนที่ให้ได้ดูใน /guninfo)");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new ammo;
				new gun[20];
				ammo = strval(tmp);
				if(ammo < 1) { SendClientMessage(playerid, COLOR_GREY, "   ห้ามต่ำกว่า 1 นัด!"); return 1; }
				if(ammo > 999) { SendClientMessage(playerid, COLOR_GREY, "   ห้ามเกิม 999 นัด!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
					if(GetPlayerAmmo(playerid) >= ammo)
					{
						if (ProxDetectorS(3.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถให้ปืนตนเองได้!"); return 1; }
						    if(!IsPlayerInVehicle(giveplayerid, Car))
						    {
							if(GetPlayerWeapon(playerid) == 16) { gun = "Grenades"; }
							if(GetPlayerWeapon(playerid) == 23) { gun = "SPistol"; }
							if(GetPlayerWeapon(playerid) == 24) { gun = "Deagle"; }
							if(GetPlayerWeapon(playerid) == 25) { gun = "Shotgun"; }
							if(GetPlayerWeapon(playerid) == 29) { gun = "MP5"; }
							if(GetPlayerWeapon(playerid) == 30) { gun = "AK47"; }
							if(GetPlayerWeapon(playerid) == 31) { gun = "M4"; }
							if(GetPlayerWeapon(playerid) == 34) { gun = "Sniper"; }
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "   คุณได้ให้ปืนที่คุณถืออยู่แก่ %s จำนวน %d นัด", giveplayer, ammo);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "   คุณได้รับปืน %s จำนวน %d นัด จาก %s", gun, ammo, sendername);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "* %s ได้ให้ปืนที่ถืออยู่แก่ %s", sendername, giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							GivePlayerWeapon(playerid, GetPlayerWeapon(playerid),-ammo);
							GivePlayerWeapon(giveplayerid, GetPlayerWeapon(playerid), ammo);
				            }
				            else
				            {
				                SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นอยู่ในรถไม่สามารถให้ปืนได้ !");
				                return 1;
				            }
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้อยู่ใกล้คุณ !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   คุณไม่มีกระสุนมากขนาดนั้น !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณต้องถือปืนอยุ่เท่านั้นจึงจะให้ได้ !");
			}
		}//not connected
		return 1;
		}
	if(strcmp(cmd, "/givedrugs", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 0)
		{
	    	if(IsPlayerConnected(playerid))
	    	{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /givedrugs [playerid/PartOfName] [amount]");
					return 1;
				}
				//giveplayerid = strval(tmp);
	        	giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /givedrugs [playerid/PartOfName] [amount]");
					return 1;
				}
				new playa;
				GetPlayerName(playa, sendername, sizeof(sendername));
				playa = ReturnUser(tmp);
				moneys = strval(tmp);
		    	PlayerInfo[giveplayerid][pDrugs] = moneys;
			    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 256, "AdmWarning: %s has given %s %d drugs.", sendername,giveplayer,moneys);
				ABroadCast(COLOR_YELLOW,string,1);
				format(string, sizeof(string), "* %s ได้ให้ยาในตัวแก่ %s", sendername, giveplayer);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		return 1;
	}
//----------------------------------[sethp]------------------------------------------------
	if(strcmp(cmd, "/sethp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sethp [playerid/PartOfName] [health]");
				return 1;
			}
			new health;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if(health > 1000) { SendClientMessage(playerid, COLOR_GREY, " ห้ามมากกว่า 1000 !!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
						SetPlayerHealth(giveplayerid, health);
			            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid,sendername, sizeof(sendername));
						format(string, 256, "AdmWarning: %s ได้ตั้งเลือดของ %s ให้เป็น %d", sendername, giveplayer, health);
						SendAdminMessage(COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setarmor", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /setarmor [playerid/PartOfName] [armor]");
				return 1;
			}
			new health;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if(health > 1000) { SendClientMessage(playerid, COLOR_GREY, " ห้ามมากกว่า 1000 !!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
						SetPlayerArmour(giveplayerid, health);
			            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid,sendername, sizeof(sendername));
						format(string, 256, "AdmWarning: %s ได้ตั้งเกราะของ %s ให้เป็น %d", sendername, giveplayer, health);
						SendAdminMessage(COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/veh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 1339)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /veh [carid] [color1] [color2]");
				return 1;
			}
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   Vehicle Number can't be below 400 or above 611 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /veh [carid] [color1] [color2]");
				return 1;
			}
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 || color1 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Color Number can't be below 0 or above 126 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /veh [carid] [color1] [color2]");
				return 1;
			}
			new color2;
			color2 = strval(tmp);
			if(color2 < 0 || color2 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Color Number can't be below 0 or above 126 !"); return 1; }
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			new carid = CreateVehicle(car, X,Y,Z, 0.0, color1, color2, 60000);
			CreatedCars[CreatedCar] = carid;
			CreatedCar ++;
			format(string, sizeof(string), " คุณได้เสกรถ ID %d, Veh ID %d", car, carid);
			SendClientMessage(playerid, COLOR_GREY, string);
			GetPlayerName(playerid,sendername, sizeof(sendername));
			format(string, 256, "AdmWarning: %s ได้เสกรถ ID %d, Veh ID %d ออกมาใช้", sendername, car, carid);
			SendAdminMessage(COLOR_YELLOW, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/fixveh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			    return 1;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
			    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
			    SendClientMessage(playerid, COLOR_GREY, "   Vehicle Fixed !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/destroycars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			    return 1;
			}
			for(new i = 0; i < sizeof(CreatedCars); i++)
			{
				if(i != 0)
				{
			    	DestroyVehicle(i);
				}
			}
			SendClientMessage(playerid, COLOR_GREY, "   Created Vehicles destroyed !");
		}
		return 1;
	}
	if(strcmp(cmd, "/weather", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /weather [weatherid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Weather ID can't be below 0 or above 45 !"); return 1; }
			SetPlayerWeather(playerid, weather);
			SendClientMessage(playerid, COLOR_GREY, "   Weather Set !");
		}
		return 1;
	}
	if(strcmp(cmd, "/weatherall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /weatherall [weatherid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Weather ID can't be below 0 or above 45 !"); return 1; }
			SetWeather(weather);
			SendClientMessage(playerid, COLOR_GREY, "   Weather Set to everyone !");
		}
		return 1;
	}
//----------------------------------[Money]------------------------------------------------
	if(strcmp(cmd, "/money", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /money [playerid/PartOfName] [money]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SafeResetPlayerMoney(playa);
						ConsumingMoney[playa] = 1;
						SafeGivePlayerMoney(playa, money);
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid,sendername, sizeof(sendername));
						format(string, 256, "AdmWarning: %s ได้เซ็ทเงิน %s ให้เป็นจำนวน $%d", sendername, giveplayer, money);
						SendAdminMessage(COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[GiveMoney]------------------------------------------------
	if(strcmp(cmd, "/givemoney", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /givemoney [playerid/PartOfName] [money]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            ConsumingMoney[playa] = 1;
						SafeGivePlayerMoney(playa, money);
						GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid,sendername, sizeof(sendername));
						format(string, 256, "AdmWarning: %s ได้เสกเงินให้ %s จำนวน $%d", sendername, giveplayer, money);
						SendAdminMessage(COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/admins", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Admins Online");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdmin] < 1342)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Admin: %d %s", PlayerInfo[i][pAdmin], sendername);
						SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/clearmoney", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /clearmoney [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SafeResetPlayerMoney(playa);
						ConsumingMoney[playa] = 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/nopoll", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if(poll == 99)
				{
                    poll = 0;
                    BroadCast(0x04FFA6FF, "   Poll ถูกเปิดโดย Admin !");
				}
				else
				{
                    poll = 99;
                    BroadCast(0x04FFA6FF, "   Poll ถูกปิดโดย Admin !");
                    pchoice = 0;
	                pmaker = 999;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  คุณไม่สามารถใช้คำสั่งนี้ได้!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/poll", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (Vote[playerid] == 0 && poll == 0)
			{
                if(PlayerInfo[playerid][pLevel] < 3)
                {
 					SendClientMessage(playerid, COLOR_GRAD1, " คุณต้องเลเวล 3 ขึ้นไปจึงจะมีสิทธิ์");
					return 1;
                }
		    	new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /poll [คำสั่ง]");
					SendClientMessage(playerid, COLOR_WHITE, " คำสั่งที่มีอยู่: create, addchoice, deletechoice, start");
					return 1;
				}
				if(strcmp(x_nr,"create",true) == 0)
				{
						if(pmaker < 999) { SendClientMessage(playerid, COLOR_GRAD1, " มีการใช้งานโพลอยู่ในขณะนี้..."); return 1;}
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /poll create [หัวข้อคำถาม]");
							return 1;
						}
						format(string, sizeof(string), "%s", result);
						strmid(Poll, string, 0, strlen(string), 255);
			    		format(string, sizeof(string), "* คุณสร้างโพลในหัวข้อ %s", Poll);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						pmaker = playerid;
						pchoice = 0;
						SafeGivePlayerMoney(playerid,- 500);
						GameTextForPlayer(playerid, "~r~-$500", 5000, 1);
				}
				else if(strcmp(x_nr,"start",true) == 0)
				{
					if(poll > 0)
					{
							SendClientMessage(playerid, COLOR_GRAD1, "   มีการใช้งานโพลอยู่ในขณะนี้ ! ");
							return 1 ;
					}
					if(pchoice < 2)
					{
							SendClientMessage(playerid, COLOR_GRAD1, "  โพลของคุณจะต้องมีตัวเลือกอย่างน้อย 2 ตัวเลือก");
							return 1 ;
					}
					if(pmaker != playerid)
					{
							SendClientMessage(playerid, COLOR_GRAD1, "   คุณยังไม่ได้ตั้งคำถาม ! ");
							return 1 ;
					}
					poll = 1;
					GetPlayerName(playerid, sendername, sizeof(sendername));
		         	format(string, sizeof(string), "Poll Topic: %s  Maker: %s", Poll,sendername);
		         	SendClientMessageToAll(COLOR_YELLOW, string);
		         	for(new i = 0; i < MAX_PLAYERS; i++)
		         	{
	 	         	  if(IsPlayerConnected(i))
	  	         	  {
	  	         	  	Vote[i] = 0;
      	         	  }
		         	}
		         	if(pchoice == 2)
		         	{
		           		format(string, sizeof(string), "Choice (1): %s | (2): %s", V1,V2);
		         	  	SendClientMessageToAll(COLOR_YELLOW, string);
		         	  	SendClientMessageToAll(0xFFFFA6FF, "| พิมพ์ /vote [ตัวเลือกที่ต้องการจะเลือก] พิมพ์/novote [ไม่ออกคะแนนเสียง] |");
		         	}
		         	else if(pchoice == 3)
		         	{
		           		format(string, sizeof(string), "Choice (1): %s | (2): %s | (3): %s", V1,V2,V3);
		         	  	SendClientMessageToAll(COLOR_YELLOW, string);
		         	  	SendClientMessageToAll(0xFFFFA6FF, "|  พิมพ์ /vote [ตัวเลือกที่ต้องการจะเลือก] พิมพ์/novote [ไม่ออกคะแนนเสียง] |");
		         	}
		         	else if(pchoice == 4)
		         	{
		           		format(string, sizeof(string), "Choice (1): %s | (2): %s | (3): %s | (4): %s", V1,V2,V3,V4);
		         	  	SendClientMessageToAll(COLOR_YELLOW, string);
		         	  	SendClientMessageToAll(0xFFFFA6FF, "|  พิมพ์ /vote [ตัวเลือกที่ต้องการจะเลือก] พิมพ์/novote [ไม่ออกคะแนนเสียง] |");
		         	}
		         	KillTimer(vtime);
		         	vtime = SetTimer("SKPoll",60000,false);
				}
				else if(strcmp(x_nr,"addchoice",true) == 0)
				{
						if(pchoice > 3)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "  คุณได้สร้างตัวเลือกครบทั้ง 4 ตัวเลือกแล้ว");
							return 1 ;
						}
						if(pmaker != playerid)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   คุณยังไม่ได้ตั้งคำถาม ! ");
							return 1 ;
						}
						new c = pchoice;
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /poll addchoice [รายละเอียด]");
							return 1;
						}
						pchoice += 1;
						if(c == 0) {format(string, sizeof(string), "%s", result); strmid(V1, string, 0, strlen(string), 255);}
						if(c == 1) {format(string, sizeof(string), "%s", result);strmid(V2, string, 0, strlen(string), 255);}
						if(c == 2) {format(string, sizeof(string), "%s", result);strmid(V3, string, 0, strlen(string), 255);}
						if(c == 3) {format(string, sizeof(string), "%s", result);strmid(V4, string, 0, strlen(string), 255);}
			    		format(string, sizeof(string), "* คุณสร้างตัวเลือกที่ %d: %s", c+1,result);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
				else if(strcmp(x_nr,"deletechoice",true) == 0)
				{
						if(pchoice < 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "  คุณยังไม่ได้สร้างตัวเลือก !!");
							return 1 ;
						}
						if(pmaker != playerid)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   คุณยังไม่ได้ตั้งคำถาม ! ");
							return 1 ;
						}
			    		format(string, sizeof(string), "* คุณลบตัวเลือกที่ (%d)", pchoice);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						pchoice -= 1;
				}
			}
			else
			{
		         	SendClientMessage(playerid, COLOR_GRAD1, "   โพลถูกปิดหรือมีการใช้งานอยู่");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/vote", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (Vote[playerid] == 0)
			{
                if(PlayerInfo[playerid][pLevel] < 1)
                {
 					SendClientMessage(playerid, COLOR_GRAD1, " คุณต้องเลเวล 1 ขึ้นไปจึงจะมีสิทธิ์");
					return 1;
                }
				if(poll == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD1, " ยังไม่มีใครตั้งโพลสำรวจ");
					return 1;
				}
				if(poll == 99)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "  โพลถูกปิดโดยแอดมิน");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /vote [ตัวเลือก]");
		         	format(string, sizeof(string), "Poll Topic: %s", Poll);
		         	SendClientMessage(playerid, COLOR_YELLOW, string);
		         	if(pchoice == 2)
		         	{
		           		format(string, sizeof(string), "Choice (1): %s | (2): %s", V1,V2);
		         	  	SendClientMessage(playerid, COLOR_YELLOW, string);
		         	}
		         	else if(pchoice == 3)
		         	{
		           		format(string, sizeof(string), "Choice (1): %s | (2): %s | (3): %s", V1,V2,V3);
		         	  	SendClientMessage(playerid, COLOR_YELLOW, string);
		         	}
		         	else if(pchoice == 4)
		         	{
		           		format(string, sizeof(string), "Choice (1): %s | (2): %s | (3): %s | (4): %s", V1,V2,V3,V4);
		         	  	SendClientMessage(playerid, COLOR_YELLOW, string);
		         	}
					return 1;
				}
				new c = strval(tmp);
				if(c < 0 || c > pchoice) { SendClientMessage(playerid, COLOR_GREY, "  ไม่มีตัวเลือกนี้ครับ !"); return 1;}
				Vote[playerid] = c;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(c > 0)
				{
	           	  format(string, sizeof(string), "Voter %s ลงคะแนนเสียงให้กับตัวเลือกที่ %d   พิมพ์ /vote เพื่อลงคะแนน", sendername,c);
	           	}
	           	else { format(string, sizeof(string), "Voter %s ลงคะแนนเสียง NoVote   พิมพ์ /vote เพื่อลงคะแนน", sendername); }
                OOCOff(0xFFFFA6FF,string);
		        KillTimer(vtime);
		        vtime = SetTimer("SKPoll",20000,false);
		        poll = 2;
		        format(string, sizeof(string), "~w~you ~g~~h~~h~~h~voted~n~ ~y~~h~#%d",c);
		        if(c == 0) { Vote[playerid] = 99; format(string, sizeof(string), "~w~you ~g~~h~~h~~h~voted~n~ ~y~~h~NoVote"); }
		        GameTextForPlayer(playerid, string, 5000, 1);
 			}
			else { SendClientMessage(playerid, COLOR_GRAD1, "   คุณได้ลงคะแนนเสียงไปแล้ว !");}
		}
		return 1;
	}
//-----------------------------------[Slap]-----------------------------------------------
	if(strcmp(cmd, "/slap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /slap [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						new Float:slx, Float:sly, Float:slz;
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+5);
						PlayerPlaySound(playa, 1130, slx, sly, slz+5);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /mute [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playa][pMuted] == 0)
						{
							PlayerInfo[playa][pMuted] = 1;
							printf("AdmCmd: %s silenced %s",sendername,  giveplayer);
							format(string, sizeof(string), "AdmCmd: %s ได้ถูกใบ้ไม่ให้พูดโดย %s",giveplayer ,sendername);
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
						else
						{
							PlayerInfo[playa][pMuted] = 0;
							printf("AdmCmd: %s unsilenced %s",sendername,  giveplayer);
							format(string, sizeof(string), "AdmCmd: %s ได้ถูกปลดใบ้ให้พูดได้แล้วโดย %s",giveplayer ,sendername);
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}

//----------------------------------[Kick]------------------------------------------------
    if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /kick [playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /kick [playerid/PartOfName] [reason]");
							return 1;
						}
						new year, month,day;
						getdate(year, month, day);
						format(string, sizeof(string), "AdmCmd: %s ได้ถูกเตะโดย %s สาเหตุ: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
						format(string, sizeof(string), "AdmCmd: %s ได้ถูกเตะโดย %s สาเหตุ: %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						KickLog(string);
						Kick(giveplayerid);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ไม่ได้อยู่ในเกมส์", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/skick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /skick [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        Kick(giveplayerid);
				    }
				}
			}
			else
			{
				format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/skick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /skick [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        Kick(giveplayerid);
				    }
				}
			}
			else
			{
				format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/warn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /warn [playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /warn [playerid/PartOfName] [reason]");
							return 1;
						}
						PlayerInfo[giveplayerid][pWarns] += 1;
						if(PlayerInfo[giveplayerid][pWarns] >= 4)
						{
						    new year, month,day;
							getdate(year, month, day);
							format(string, sizeof(string), "AdmCmd: %s ได้ถูกแบนโดย %s สาเหตุ: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
							format(string, sizeof(string), "AdmCmd: %s ได้ถูกแบนโดย %s (เตือน 4 ครั้งแล้ว) สาเหตุ: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
							PlayerInfo[giveplayerid][pAdmin] = PlayerInfo[giveplayerid][pLevel];
							PlayerInfo[giveplayerid][pLevel] = -999;
							BanLog(string);
							Ban(giveplayerid);
							return 1;
						}
						format(string, sizeof(string), " คุณได้เตือน %s ว่า: %s", giveplayer, (result));
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), " คุณได้ถูกเตือนว่า: %s", (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
						format(string, sizeof(string), " Admin ได้เตือน %s ว่า: %s", giveplayer, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	/*if(strcmp(cmd, "/sban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sban [playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /sban [playerid/PartOfName] [reason]");
							return 1;
						}
						new year, month,day;
						getdate(year, month, day);
						format(string, sizeof(string), "AdmCmd: %s ได้ถูกเตะโดย %s สาเหตุ: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
						BanLog(string);
						PlayerInfo[giveplayerid][pAdmin] = PlayerInfo[giveplayerid][pLevel];
						PlayerInfo[giveplayerid][pLevel] = -999;
						Ban(giveplayerid);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "   %d is not an active player.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}*/
	if(strcmp(cmd, "/ban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ban [playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ban [playerid/PartOfName] [reason]");
							return 1;
						}
						new year, month,day;
						getdate(year, month, day);
						format(string, sizeof(string), "AdmCmd: %s ได้ถูกแบนโดย %s สาเหตุ: %s (%d-%d-%d)", giveplayer, sendername, (result),month,day,year);
						format(string, sizeof(string), "AdmCmd: %s ได้ถูกแบนโดย %s สาเหตุ: %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						BanLog(string);
						PlayerInfo[giveplayerid][pAdmin] = PlayerInfo[giveplayerid][pLevel];
						PlayerInfo[giveplayerid][pLevel] = -999;
						Ban(giveplayerid);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "   %d ไม่ได้อยู่ในเกมส์.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/fakeban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /fakeban [playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ban [playerid/PartOfName] [reason]");
							return 1;
						}
						format(string, sizeof(string), "AdmCmd: %s ได้ถูกแบนโดย %s สาเหตุ: %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						SendClientMessage(giveplayerid, TEAM_CYAN_COLOR, "Server closed the connection.");
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "   %d ไม่ได้อยู่ในเกมส์.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//----------------------------------[Freeze]------------------------------------------------
	if(strcmp(cmd, "/freeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /freeze [playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 0);
						PlayerFrozened[playa] = 1;
						GameTextForPlayer(playa, "~r~Frozen", 5000, 3);
						format(string, sizeof(string), "AdmCmd: %s ได้ล็อคตัว %s ไม่ให้ไปไหน",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "AdmCmd: %s ได้ถูกล็อคไม่ให้ไปไหนโดย %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}

//----------------------------------[unfreeze]------------------------------------------------
	if(strcmp(cmd, "/unfreeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /unfreeze [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						PlayerFrozened[playa] = 0;
						GameTextForPlayer(playa, "~w~Unfrozen", 5000, 3);
						format(string, sizeof(string), "AdmCmd: %s ได้ถูกปลดล็อคตัวให้เป็นอิสระ",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "AdmCmd: %s ได้ถูกปลดล็อคให้เป็นอิสระโดย %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
//----------------------------------[EndRound]-----------------------------------------------

	if(strcmp(cmd, "/endround", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	  		if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				expx = 1;
				SendRconCommand("The Samp ROLEPLAY Server");
				GameModeInitExitFunc();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command !");
			}
		}
		return 1;
	}
//----------------------------------[EndRound]-----------------------------------------------

//----------------------------------[GMX]-----------------------------------------------

/*	if(strcmp(cmd, "/gmx", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
				GameModeExit();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   You are not authorized to use that command !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/cam", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /cam [1/2/3/4]");
				return 1;
			}
			Unspec[playerid][sCam] = strval(tmp);
			format(string, sizeof(string), "Switching to cam %d",Unspec[playerid][sCam]);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
		return 1;
	}*/
//----------------------------------[HELP]-----------------------------------------------
	if(strcmp(cmd, "/help", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE, "*** ช่วยเหลือ *** /accounthelp /chathelp /bankhelp /atmhelp /leaderhelp /fishhelp /cookhelp f");
			SendClientMessage(playerid, COLOR_GRAD2, "*** ช่วยเหลือ *** /cellphonehelp /househelp /renthelp /bizhelp /irchelp  /jobhelp /donate");
			SendClientMessage(playerid, COLOR_GRAD3, "*** ช่วยเหลือ *** /poll(คำสั่งตั้งโหวด) /carhelp(คำสั่งรถ) /rob(ทำการปล้น) /gatehelp(สำหรับผู้บริจาก)");
			SendClientMessage(playerid, COLOR_GRAD4, "*** ช่วยเหลือ *** /commands ");
		}
		return 1;
	}
	if(strcmp(cmd, "/gatehelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			    SendClientMessage(playerid, 0xF6498AAA, "**กรงที่1** /opengate1 /opg1 (เปิดประตูที่เก็บรถที่1)");
				SendClientMessage(playerid, 0xF6498AAA, "**กรงที่2** /opengate2 /opg2 (เปิดประตูที่เก็บรถที่2)");
				SendClientMessage(playerid, 0xF6498AAA, "**กรงที่3** /opengate3 /opg3 (เปิดประตูที่เก็บรถที่3)");
				SendClientMessage(playerid, 0xF6498AAA, "**กรงที่4** /opengate4 /opg4 (เปิดประตูที่เก็บรถที่4)");
		}
		return 1;
	}
    if(strcmp(cmd, "/robhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD4,"*** ROB *** วิธีการปล้น 24/7 พิมพ์/rob24 ");
			SendClientMessage(playerid, COLOR_GRAD4,"*** ROB *** วิธีการปล้น ธนาคาร พิมพ์ /robbank");
		}
		return 1;
	}
	if(strcmp(cmd, "/accounthelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD4,"*** ACCOUNT *** /rules /login /stats /uplevel /upgrade /changepass /cname");
		}
		return 1;
	}
	if(strcmp(cmd, "/chathelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD2, "*** สนทนา *** (/w)hisper (/o)oc (/s)hout (/c)lose (/l)ocal (/b) (/ad)vertise /me");
			SendClientMessage(playerid, COLOR_GRAD3, "*** สนทนา *** /togooc /tognews /togfam /togwhisper /togphone");
		}
		return 1;
	}
	if(strcmp(cmd, "/carhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD3,"*** รถ *** /buycar /(v)ehicle ");
		}
		return 1;
	}
	if(strcmp(cmd, "/cellphonehelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "*** โทรศัพท์ *** /call /sms (/h)angup (/p)ickup /number");
		}
		return 1;
	}
	if(strcmp(cmd, "/bankhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD4,"*** ธนาคาร ***  /balance(เช็คเงิน) /deposit(ฝากเงิน) /withdraw(ถอนเงิน) /transfer(โอนเงิน)");
		}
		return 1;
	}
	if(strcmp(cmd, "/atmhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_GRAD3,"*** ATM *** /balance(เช็คเงิน) /withdraw(ถอนเงิน) /transfer(โอนเงิน)");
		}
		return 1;
	}
	if(strcmp(cmd, "/househelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD2,"*** บ้าน *** /enter /exit /open /home /heal /houseupgrade /setrentable");
			SendClientMessage(playerid, COLOR_GRAD1,"*** บ้าน *** /setrent /evict /housewithdraw");
		}
		return 1;
	}
	if(strcmp(cmd, "/animhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid,COLOR_WHITE,"***อนิเมชั่นต่าง ๆ***:");
	        SendClientMessage(playerid,COLOR_GRAD1,"(/h)and(s)up /drunk /bomb /getarrested /laugh /lookout /robman /chairsit");
            SendClientMessage(playerid,COLOR_GRAD2,"/crossarms /lay /hide /vomit /eat /wave /taichi /pee /fall /fallback");
            SendClientMessage(playerid,COLOR_GRAD3,"/deal /crack /smokem /smokef /groundsit /chat /dance /fucku /kiss /hug");
            SendClientMessage(playerid,COLOR_GRAD3,"/rapa /rapb /rapc /push /akick /lowbodypush /spray /headbutt /koface");
            SendClientMessage(playerid,COLOR_GRAD3,"/lifejump /exhaust /leftslap /chairsit /tapcig /bat /box /lay2 /finger");
            SendClientMessage(playerid,COLOR_GRAD3,"/chant /shouting /airkick /gkick /lowthrow /hightthrow /dealstance");
            SendClientMessage(playerid,COLOR_GRAD3,"/kneekick /fstance /gpunch /wank");
		}
		return 1;
	}
	if(strcmp(cmd, "/guninfo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"*** ปืนที่ให้ได้ *** Grenades(ระเบิด) Deagle SPistol");
			SendClientMessage(playerid, COLOR_GRAD1,"*** ปืนที่ให้ได้ *** Shotgun MP5 AK47 M4 Sniper");
		}
		return 1;
	}
	if(strcmp(cmd, "/renthelp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD2,"*** RENT *** /rentcar /unrentcar /rentroom /unrentroom /enter /exit /lock /home");
		}
		return 1;
	}
	if(strcmp(cmd, "/bizhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD1,"*** กิจการ *** /bizinfo /bizfee /bizname /prodprice /extortion");
			SendClientMessage(playerid, COLOR_GRAD4,"*** กิจการ *** /enter /exit /open /sellbiz /bizbank /bizwithdraw");
		}
		return 1;
	}
	if(strcmp(cmd, "/leaderhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pLeader] >= 1)
		    {
				SendClientMessage(playerid, COLOR_GRAD4,"*** หัวหน้า *** /invite /uninvite /giverank");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช้ Leader!");
			}
			if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2|| PlayerInfo[playerid][pLeader] == 3|| PlayerInfo[playerid][pLeader] == 19)
		    {
				SendClientMessage(playerid, COLOR_GRAD4,"*** เคอฟิว *** /curfew /uncurfew");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/irchelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_GRAD2,"*** IRC *** (/irc join [channelnr] or /irc join [channelnr] [password])  (/irc leave)");
			SendClientMessage(playerid, COLOR_GRAD3,"*** IRC *** (/irc Password [channelnr])  (/irc NeedPass [channelnr])  (/irc Lock [channelnr])");
			SendClientMessage(playerid, COLOR_GRAD4,"*** IRC *** (/irc Admins)  (/irc MOTD [motdtext])  (/irc status [channelnr])  (/i [text])");
	    }
	    return 1;
	}
	if(strcmp(cmd, "/fishhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD2,"*** ตกปลา *** /fish (ตกปลา)   /fishes (ดูปลาทั้งหมดที่คุณมี)");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ตกปลา *** /throwback (โยนปลาตัวสุดท้ายที่คุณจับได้)   /throwbackall");
			SendClientMessage(playerid, COLOR_GRAD4,"*** ตกปลา *** /releasefish (ปล่อยปลาที่คุณมีอยู่) /sell (ขายปลา)");
		}
		return 1;
	}
	if(strcmp(cmd, "/cookhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GRAD2,"*** ทำอาหาร *** /cook (ดูตัวเลือกทั้งหมดที่ใช้ได้)   /cooked (ดูอาหารของคุณที่ทำเสร็จแล้ว)");
			SendClientMessage(playerid, COLOR_GRAD3,"*** ทำอาหาร *** /eat (กินอาหารของคุณที่ทำเสร็จแล้ว)");
		}
		return 1;
	}
	if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "1 ADMIN:/slap /ga /clearmoney /check /setint /mute /kick /warn /ban /fackban /goto /cnn /a(dmin)");
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1,"2 ADMIN: /clear /skydive /setteam /bigears /freeze /unfreeze /setjobhelp /setjob");
				SendClientMessage(playerid, COLOR_GRAD2,"2 ADMIN: /adminduty/checkhp /checkammo /bombveh /cpr  ");
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				SendClientMessage(playerid, COLOR_GRAD2,"3 ADMIN: /noooc /nowisper /nogov /noad /fourdive /prison /mark /gotomark");
				SendClientMessage(playerid, COLOR_GRAD3,"3 ADMIN: /gotosw /gotolv /gotosf /gotols /gotojet /gotoin /gotostad /gotorc /gethere /oldcar /gotocar /getcar");
			}
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    	SendClientMessage(playerid, COLOR_GRAD3,"4 ADMIN: /recon /mole /hq /edit /fuelcars /asellhouse /asellbiz /sellsbiz /setchamp /mk");
			    	SendClientMessage(playerid, COLOR_GRAD4,"4 ADMIN: /fixveh /sethp /setarmor /forceskin /setstat /setfamily");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				SendClientMessage(playerid, COLOR_GRAD4,"1337 ADMIN: /iwant /uninvite2 /destroycars /cnnn /weather /weatherall /endround /tod /savemission /loadmission /startlotto");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
				SendClientMessage(playerid, COLOR_GRAD4,"1339 ADMIN: /jail /crash /veh /givemoney /makeleader /money(sets money) /setstat");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
				SendClientMessage(playerid, COLOR_GRAD5,"1340 ADMIN: /endround /setpayday /gmx /makeleader /makeadmin /setname");
			}
		}
		return 1;
	}
	if(!strcmp(cmd, "/commands", true))
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_WHITE,"*** ทั่วไป *** /pay /charity /time /buy /givekey /switchkey /id /drink /music /clothes /vote");
			SendClientMessage(playerid, COLOR_WHITE,"*** ทั่วไป *** /resetupgrades(25k) /resetjob(10k) /buygun /lock /skill /licenses /lotto /members /spawnchange /stopani");
			SendClientMessage(playerid, COLOR_WHITE,"*** ทั่วไป *** /report /cancel /accept /eject /usedrugs /contract /fill /fillcar /service /snatch");
			SendClientMessage(playerid, COLOR_WHITE,"*** ทั่วไป *** /admins (/d)rop(w)eapon (/show(l)icenses /giveweapon /givedrugs /guninfo /gps(หาที่สมัครอาชีพเสริม) /cleargps");
		}
		return 1;
	}
	if(strcmp(cmd, "/jobhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pJob] == 1) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /find"); }
		    else if(PlayerInfo[playerid][pJob] == 2) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /free /jaillist"); }
		    else if(PlayerInfo[playerid][pJob] == 3) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /sex"); }
		    else if(PlayerInfo[playerid][pJob] == 4) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /selldrugs"); }
		    else if(PlayerInfo[playerid][pJob] == 5) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /dropcar"); }
		    else if(PlayerInfo[playerid][pJob] == 7) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /repair /refill /duty"); }
		    else if(PlayerInfo[playerid][pJob] == 8) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /guard"); }
		    else if(PlayerInfo[playerid][pJob] == 9) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /materials /sellgun"); }
		    else if(PlayerInfo[playerid][pJob] == 10) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /sellcar"); }
		    else if(PlayerInfo[playerid][pJob] == 12) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /fight /boxstats"); }
		    else if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10) {
		    SendClientMessage(playerid,0xAEF600AA,"*** แท็กซี่ *** (/gov)ernment /fare"); }
		    else if(PlayerInfo[playerid][pJob] == 14) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /fare"); }
		    else if(PlayerInfo[playerid][pJob] == 15) {
		    SendClientMessage(playerid,0xAEF600AA,"*** JOB *** /papers /bring /deliver"); }
		    if(PlayerInfo[playerid][pMember] == 11||PlayerInfo[playerid][pLeader] == 11){
		    SendClientMessage(playerid,0xF64F9CAA,"*** นายทะเบียน *** /startlesson /stoplesson /givelicense (/gov)ernment"); }
			if (PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1||PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
			{
				SendClientMessage(playerid, 0x007EF6AA, "*** เจ้าหน้าที่ *** (/r)adio (/d)epartments (/m)egaphone (/su)spect /clear /mdc /arrest /duty /wanted /cuff /tazer");
				SendClientMessage(playerid, 0x007EF6AA, "*** เจ้าหน้าที่ *** /frisk /take /ticket (/gov)ernment /cs /ca (/h)ookto(c)ar /bk /bkc /rb /rrb /rrball /ram(พังประตูบ้าน)");
				SendClientMessage(playerid, 0x007EF6AA, "*** เจ้าหน้าที่ *** /aswat /dswat /swat /suit /jaillist /cgps");
			}
			if (PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
			{
				SendClientMessage(playerid, 0x4141F6AA, "*** เจ้าหน้าที่ FBI *** (/r)adio (/d)epartments (/m)egaphone ft /clear /mdc /arrest /duty /wanted /cuff /tazer /cgps");
				SendClientMessage(playerid, 0x4141F6AA, "*** เจ้าหน้าที่ FBI *** /frisk (/gov)ernment /spy /cs /ca (/h)ookto(c)ar /bk /bkc /suit /jaillist /ram(พังประตูบ้าน) ");
			}
			if (PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3||PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
			{
				SendClientMessage(playerid, 0x41F69CAA, "*** นาวิกโยธิน *** (/r)adio (/d)epartments (/m)egaphone (/su)spect /clear /mdc /duty /wanted");
				SendClientMessage(playerid, 0x41F69CAA, "*** นาวิกโยธิน *** /frisk (/gov)ernment /cs /ca /bk /bkc /setbomb /jaillist /ram(พังประตูบ้าน) /cgps ");
			}
			if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
			{
				SendClientMessage(playerid, 0x4141F6AA, "*** องกรณ์ลับ ***  (/r)adio (/d)epartments (/m)egaphone (/su)spect /clear /duty /wanted /ram(พังประตูบ้าน)");
				SendClientMessage(playerid, 0x4141F6AA, "*** องกรณ์ลับ *** /frisk (/gov)ernment /cs /ca /cuff /tazer (/h)ookto(c)ar /take /arrest /suit /jaillist /cgps ");
			}
			if (gTeam[playerid] == 1 || PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			{
				SendClientMessage(playerid, 0xF64F9CAA, "*** แพทย์สนาม *** (/gov)ernment (/r)adio (/d)epartments /heal /duty /suit /cpr");
			}
			if (PlayerInfo[playerid][pLeader] == 7)
			{
				SendClientMessage(playerid, 0xF64F9CAA, "*** นายก *** (/gov)ernment (/r)adio (/d)epartments /givetax /settax /duty /suit");
			}
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
				SendClientMessage(playerid, 0xF64F9CAA, "*** นักข่าว *** /news /live (/f)amily /suit");
			}
			if (PlayerInfo[playerid][pMember] == 7)
			{
				SendClientMessage(playerid, 0xF64F9CAA, "*** บอดิ้กาดนายก *** (/r)adio (/d)epartments /duty /suit");
			}
			if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
			{
				SendClientMessage(playerid, 0xBFC9C1AA, "*** นักล่าค่าหัว *** (/gov)ernment (/f)amily /portable /hopen /suit");
			}
			if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6)
			{
				SendClientMessage(playerid, 0xBFF6C1AA, "*** องค์กร *** (/gov)ernment (/f)amily /getgun /suit");
			}
			if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pMember] == 13 ||PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 12 || PlayerInfo[playerid][pLeader] == 13 || PlayerInfo[playerid][pLeader] == 14 || PlayerInfo[playerid][pLeader] == 15)
			{
				SendClientMessage(playerid, 0x88C0D4AA, "*** แก๊งค์ *** (/gov)ernment (/f)amily /getgun /suit");
			}
			if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
			{
				SendClientMessage(playerid, 0x88C0D4AA, "*** แว็นบอย *** (/gov)ernment (/f)amily /getgun /suit");
			}
			if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
			{
				SendClientMessage(playerid, 0x88C0D4AA, "*** แก๊งประตูผี *** (/gov)ernment (/f)amily /getgun /suit");
			}
			if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
			{
				SendClientMessage(playerid, 0x88C0D4AA, "*** ทีมงานใต้ตึก *** (/gov)ernment (/f)amily /getgun /suit");
			}
			if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
			{
				SendClientMessage(playerid, 0x88C0D4AA, "*** Red blood *** (/gov)ernment (/f)amily /getgun /suit");
			}

		}
		return 1;
	}
//-------------------------------iwant-------------------------------------
    if(strcmp(cmd, "/iwant", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 4)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่สามารถใช้คำสั่งนี้ได้!");
			    return 1;
			}
			SetPlayerArmour(playerid, 100);
			PlayerInfo[playerid][pCarLic] = 1;
	        PlayerInfo[playerid][pFlyLic] = 1;
	        PlayerInfo[playerid][pBoatLic] = 1;
	        PlayerInfo[playerid][pFishLic] = 1;
	        PlayerInfo[playerid][pGunLic] = 1;
			SendClientMessage(playerid, COLOR_YELLOW2, "คุณได้รับใบอณุญาติทั้งหมด");
			SendClientMessage(playerid, COLOR_YELLOW2, "ขอ มาเราจัดให้");
		}
		return 1;
	}

//----------------------------------[MEMBERS]-----------------------------------------------
	if(strcmp(cmd, "/members", true) == 0)
	{
			SendClientMessage(playerid, COLOR_LIGHTRED,"Members Online");
		    for(new i=0; i < MAX_PLAYERS; i++)
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1)
				    {
				    	if(PlayerInfo[i][pMember] == 1||PlayerInfo[i][pLeader] == 1)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2)
				    {
				    	if(PlayerInfo[i][pMember] == 2||PlayerInfo[i][pLeader] == 2)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3)
				    {
				    	if(PlayerInfo[i][pMember] == 3||PlayerInfo[i][pLeader] == 3)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 4||PlayerInfo[playerid][pLeader] == 4)
				    {
				    	if(PlayerInfo[i][pMember] == 4||PlayerInfo[i][pLeader] == 4)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 5||PlayerInfo[playerid][pLeader] == 5)
				    {
				    	if(PlayerInfo[i][pMember] == 5||PlayerInfo[i][pLeader] == 5)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 6||PlayerInfo[playerid][pLeader] == 6)
				    {
				    	if(PlayerInfo[i][pMember] == 6||PlayerInfo[i][pLeader] == 6)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 7||PlayerInfo[playerid][pLeader] == 7)
				    {
				    	if(PlayerInfo[i][pMember] == 7||PlayerInfo[i][pLeader] == 7)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 9||PlayerInfo[playerid][pLeader] == 9)
				    {
				    	if(PlayerInfo[i][pMember] == 9||PlayerInfo[i][pLeader] == 9)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 10||PlayerInfo[playerid][pLeader] == 10)
				    {
				    	if(PlayerInfo[i][pMember] == 10||PlayerInfo[i][pLeader] == 10)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 11||PlayerInfo[playerid][pLeader] == 11)
				    {
				    	if(PlayerInfo[i][pMember] == 11||PlayerInfo[i][pLeader] == 11)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 12||PlayerInfo[playerid][pLeader] == 12)
				    {
				    	if(PlayerInfo[i][pMember] == 12||PlayerInfo[i][pLeader] == 12)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 13||PlayerInfo[playerid][pLeader] == 13)
				    {
				    	if(PlayerInfo[i][pMember] == 13||PlayerInfo[i][pLeader] == 13)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 14||PlayerInfo[playerid][pLeader] == 14)
				    {
				    	if(PlayerInfo[i][pMember] == 14||PlayerInfo[i][pLeader] == 14)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 15||PlayerInfo[playerid][pLeader] == 15)
				    {
				    	if(PlayerInfo[i][pMember] == 15||PlayerInfo[i][pLeader] == 15)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 16||PlayerInfo[playerid][pLeader] == 16)
				    {
				    	if(PlayerInfo[i][pMember] == 16||PlayerInfo[i][pLeader] == 16)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
				       	  }
				    }
				    if(PlayerInfo[playerid][pMember] == 17||PlayerInfo[playerid][pLeader] == 17)
				    {
				    	if(PlayerInfo[i][pMember] == 17||PlayerInfo[i][pLeader] == 17)
				    	{
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_RED, string);
 	                }
				}
			}
		}
//------------------------------------[Sa,b,c,dgatwopen]--------------------------------------------------------
    if(strcmp(cmd, "/opg1", true) == 0 || strcmp(cmd, "/opengate1", true) == 0)
	{
	    if(PlayerInfo[playerid][pDonateRank] >= 1)
	    {
	         MoveDynamicObject(sagate, -1971.28, 99.2108, 24.6672,2.5);
             SetTimer("saGateClose", 7000, 0);
             GetPlayerName(playerid, sendername, sizeof(sendername));
             format(string, sizeof(string), "* %s กดรีโมทเปิดประตูโรงรถที่1", sendername);
		     ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		   	 return 1;
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถเปิดได้!");
			}
		return 1;
	}
	if(strcmp(cmd, "/opg2", true) == 0 || strcmp(cmd, "/opengate2", true) == 0)
	{
	    if(PlayerInfo[playerid][pDonateRank] >= 2)
	    {
	         MoveDynamicObject(sbgate, -1964.28, 99.2108, 24.6672,2.5);
             SetTimer("sbGateClose", 7000, 0);
             GetPlayerName(playerid, sendername, sizeof(sendername));
             format(string, sizeof(string), "* %s กดรีโมทเปิดประตูโรงรถที่2", sendername);
		     ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถเปิดได้!");
			}
		return 1;
	}
	if(strcmp(cmd, "/opg3", true) == 0 || strcmp(cmd, "/opengate3", true) == 0)
	{
	    if(PlayerInfo[playerid][pDonateRank] >= 3)
	    {
	         MoveDynamicObject(scgate, -1971.41, 86.9734, 24.6672,2.5);
             SetTimer("scGateClose", 7000, 0);
             GetPlayerName(playerid, sendername, sizeof(sendername));
             format(string, sizeof(string), "* %s กดรีโมทเปิดประตูโรงรถที่3", sendername);
		     ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถเปิดได้!");
			}
		return 1;
	}
    if(strcmp(cmd, "/opg4", true) == 0 || strcmp(cmd, "/opengate4", true) == 0)
	{
	    if(PlayerInfo[playerid][pDonateRank] >= 4)
	    {
	         MoveDynamicObject(sdgate, -1964.62, 86.9734, 24.6672,2.5);
             SetTimer("sdGateClose", 7000, 0);
             GetPlayerName(playerid, sendername, sizeof(sendername));
             format(string, sizeof(string), "* %s กดรีโมทเปิดประตูโรงรถที่4", sendername);
		     ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถเปิดได้!");
			}
		return 1;
	}
//------------------------------------[fgateopen]--------------------------------------------------------
    if(strcmp(cmd, "/hopen", true) == 0)
	{
	    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
	    {
	         MoveDynamicObject(fgate, -2419.550292 , 503.286071 , 29.102416 ,2.5);
             SetTimer("fGateClose", 7000, 0);
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่นักค่าล่าหัว!");
			}
		return 1;
	}
//----------------------------------[HELP]-----------------------------------------------
	if(strcmp(cmd, "/rules", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_LIGHTRED," Server:1.ห้ามใช้โปรแกรมโกงเกม และห้าม DBK");
		    SendClientMessage(playerid, COLOR_LIGHTRED," Server:2.ป.ช.ช ต้องไม่มีเกราะ และ รถทุกคันต้องขับขี่[เลนซ้าย]");
		}
		return 1;
	}
	if(strcmp(cmd, "/v", true) == 0 || strcmp(cmd, "/vehicle", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่ได้ล็อกอิน! ");
	            return 1;
	        }
	        new x_nr[64];
	        x_nr = strtok(cmdtext, idx);
	        if(!strlen(x_nr))
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "USAGE: (/v)ehicle [name]");
	            SendClientMessage(playerid, COLOR_WHITE, "Available names: park, lock, sell, tow, locate, color");
	            return 1;
	        }
	        if(strcmp(x_nr,"sell",true) == 0)
	        {
	                if(GetPlayerVehicleID(playerid) == VehicleGet[playerid])
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                    new ownvehkey;
	                    if(GetPlayerVehicleID(playerid) == VehicleGet[playerid]) { ownvehkey = PlayerInfo[playerid][pPcarkey]; }
	                    else { return 1; }
	                    if(strcmp(sendername, CarInfo[ownvehkey][cOwner], true) == 0)
	                    {
	                        new carsellprice = CarInfo[ownvehkey][cValue] / 2;
	                        new Float:x,Float:y,Float:z;
	                        new Float:a;
	                        CarInfo[ownvehkey][cOwned] = 0;
	                        strmid(CarInfo[ownvehkey][cOwner], "Dealership", 0, strlen("Dealership"), 999);
	                        SafeGivePlayerMoney(playerid,carsellprice);
	                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	                        format(string, sizeof(string), "~w~You have sold your car for: ~n~~g~$%d", carsellprice);
	                        GameTextForPlayer(playerid, string, 10000, 3);
	                        GetVehiclePos(VehicleGet[playerid], x, y, z);
	                        GetVehicleZAngle(VehicleGet[playerid], a);
	                        CarInfo[ownvehkey][cLocationx] = x;
	                        CarInfo[ownvehkey][cLocationy] = y;
	                        CarInfo[ownvehkey][cLocationz] = z;
	                        CarInfo[ownvehkey][cAngle] = a;
	                        CarInfo[ownvehkey][cLock] = 0;
	                        if(GetPlayerVehicleID(playerid) == VehicleGet[playerid]) { PlayerInfo[playerid][pPcarkey] = 999; }
	                        RemovePlayerFromVehicle(playerid);
	                        TogglePlayerControllable(playerid, 1);
							PlayerFrozened[playerid] = 0;
	                        /*if(PlayerInfo[playerid][pLocal] == ownvehkey)
	                        {
	                            SetPlayerInterior(playerid,0);
	                            SetPlayerPos(playerid,CarInfo[ownvehkey][cLocationx],CarInfo[ownvehkey][cLocationy],CarInfo[ownvehkey][cLocationz]);
	                            PlayerInfo[playerid][pInt] = 0;
	                        }*/
	                        OnPropUpdate();
	                        OnPlayerUpdate(playerid);
	                        DestroyVehicle(VehicleGet[playerid]);
	                        VehicleGet[playerid] = 999;
							//CreateVehicle(CarInfo[ownvehkey][cModel],CarInfo[ownvehkey][cLocationx],CarInfo[ownvehkey][cLocationy],CarInfo[ownvehkey][cLocationz]+1.0,CarInfo[ownvehkey][cAngle],CarInfo[ownvehkey][cColorOne],CarInfo[ownvehkey][cColorTwo],60000);
	                        return 1;
	                    }
	                }
	                else
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "  รถคันนี้ไม่ใช่ของคุณ คุณไม่สามารถขายได้!");
	                    return 1;
	                }
	        }
	        else if(strcmp(x_nr,"locate",true) == 0)
	        {
			if(PlayerInfo[playerid][pPcarkey] == 999)
			{
				SendClientMessage(playerid, COLOR_GREY, " คุณไม่มีรถ!");
				return 1;
			}
			if(ScriptMoney[playerid] < 200)
			{
				SendClientMessage(playerid, COLOR_GREY, " คุณไม่มีเงินพอ!");
				return 1;
			}
			SendClientMessage(playerid, COLOR_GREY, " คุณเสียค่าบริการ $200 รถของคุณอยู่ในตำแหน่ง GPS แล้ว");
			SafeGivePlayerMoney(playerid,-200);
			new Float:X,Float:Y,Float:Z;
			GetVehiclePos(VehicleGet[playerid], X, Y, Z);
			SetPlayerCheckpoint(playerid, X,Y,Z, 8.0);
			CP[playerid] = 98;
			return 1;
			}
	        else if(strcmp(x_nr,"tow",true) == 0)
	        {
			if(PlayerInfo[playerid][pPcarkey] == 999)
			{
				SendClientMessage(playerid, COLOR_GREY, " คุณไม่มีรถ!");
				return 1;
			}
			if(ScriptMoney[playerid] < 500)
			{
				SendClientMessage(playerid, COLOR_GREY, " คุณไม่มีเงินพอ!");
				return 1;
			}
			if(GetPlayerState(playerid) == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " คุณเสียค่าบริการ $500 รถของคุณกลับจุด Park แล้ว");
				SendClientMessage(playerid, COLOR_GREY, " พิมพ์ /cleargps เมื่อถึงรถของคุณแล้ว");
				SafeGivePlayerMoney(playerid,-500);
				GameTextForPlayer(playerid, "~w~Car~n~~g~Towed Park~n~~r~$-500", 5000, 1);
				new carid = PlayerInfo[playerid][pPcarkey];
				new carid2 = VehicleGet[playerid];
				SetVehiclePos(carid2,CarInfo[carid][cLocationx],CarInfo[carid][cLocationy],CarInfo[carid][cLocationz]);
				SetVehicleZAngle(carid2, CarInfo[carid][cAngle]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SBizzInfo[8][sbTill] += 500;
				ExtortionSBiz(8, SBizzInfo[1][sbEntranceCost]);
				SBizzInfo[8][sbProducts]--;
				return 1;
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Car is~n~in ~r~use", 5000, 1);
				return 1;
				}
			}
	        else if(strcmp(x_nr,"park",true) == 0)
	        {
	            new Float:x,Float:y,Float:z;
				new Float:a;
				new carid;
				new getcarid;
				if(GetPlayerVehicleID(playerid) == VehicleGet[playerid]) { carid = VehicleGet[playerid]; }
				else { return 1; }
				getcarid = GetPlayerVehicleID(playerid);
				GetPlayerName(playerid, playername, sizeof(playername));
				GetVehiclePos(carid, x, y, z);
				//GetPlayerFacingAngle(playerid, a);
				GetVehicleZAngle(carid, a);
				if(IsPlayerInVehicle(playerid,carid))
				{
			   		if(PlayerInfo[playerid][pPcarkey] == 999)
					{
						SendClientMessage(playerid, COLOR_GREY, " คุณไม่มีรถ!");
						return 1;
					}
					if(getcarid == carid)
					{
						CarInfo[PlayerInfo[playerid][pPcarkey]][cLocationx] = x;
						CarInfo[PlayerInfo[playerid][pPcarkey]][cLocationy] = y;
						CarInfo[PlayerInfo[playerid][pPcarkey]][cLocationz] = z;
						CarInfo[PlayerInfo[playerid][pPcarkey]][cAngle] = a;
						format(string, sizeof(string), "~n~ You have parked your vehicle in this location. ~n~");
						GameTextForPlayer(playerid, "You have parked your vehicle in this position. It will respawn here.", 10000, 3);
						OnPropUpdate();
						OnPlayerUpdate(playerid);
						DestroyVehicle(VehicleGet[playerid]);
						GetCar(playerid);
						TogglePlayerControllable(playerid, 1);
						PlayerFrozened[playerid] = 0;
						return 1;
   					}
				}
	        }
	        else if(strcmp(x_nr,"lock",true) == 0)
	        {
                new keycar = PlayerInfo[playerid][pPcarkey];
                if(keycar != 999)
                {
                    new locked[256];
                    locked = strtok(cmdtext, idx);
                    if(CarInfo[keycar][cLock] == 1)
                    {
                    	for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if (IsPlayerConnected(i))
							{
								SetVehicleParamsForPlayer(VehicleGet[playerid],i,0,0);
							}
						}
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* %s กดรีโมทปลดล็อครถส่วนตัว", sendername);
					    ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string, sizeof(string), "~w~Vehicle~n~~G~Unlocked");
						GameTextForPlayer(playerid, string, 4000, 3);
						CarInfo[keycar][cLock] = 0;
						OnPropUpdate();
						return 1;
					}
					else if(CarInfo[keycar][cLock] == 0)
					{
					    for(new i = 0; i < MAX_PLAYERS; i++)
						{
							if (IsPlayerConnected(i))
							{
								SetVehicleParamsForPlayer(VehicleGet[playerid],i,0,1);
							}
						}
						GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* %s กดรีโมทล็อครถส่วนตัว", sendername);
				        ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						format(string, sizeof(string), "~w~Vehicle~n~~R~Locked");
						GameTextForPlayer(playerid, string, 4000, 3);
						CarInfo[keycar][cLock] = 1;
						OnPropUpdate();
						return 1;
					}
                }
                else{ SendClientMessage(playerid, COLOR_GREY, " สัญญาณรีโมทรถยนต์ของคุณไปไม่ถึง"); }
                {
                    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่มีรถ!");
                    return 1;
                }
	        }
	        else if(strcmp(x_nr,"color",true) == 0)
	        {
	            if(PlayerInfo[playerid][pPcarkey] == 999)
	        	{
	            	SendClientMessage(playerid, COLOR_GREY,"    คุณไม่มีรถ!");
	            	return 1;
	        	}
	        	if(ScriptMoney[playerid] < 1000)
	        	{
	            	SendClientMessage(playerid, COLOR_GREY,"   คุณไม่มีเงินพอที่จะเปลี่ยนสีรถได้");
	            	return 1;
	        	}
	        	tmp = strtok(cmdtext, idx);
	        	if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /v color [ColorOneID] [ColorTwoID]");
					return 1;
				}
				new color1;
				color1 = strval(tmp);
				if(color1 < 0 && color1 > 126)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "   ID สีรถผิดพลาด!");
			    	return 1;
				}
				tmp = strtok(cmdtext, idx);
	        	if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /v color [ColorOneID] [ColorTwoID]");
					return 1;
				}
				new color2;
				color2 = strval(tmp);
				if(color2 < 0 && color2 > 126)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "   ID สีรถผิดพลาด!");
			    	return 1;
				}
				
				new vehid;
				if(GetPlayerVehicleID(playerid) == VehicleGet[playerid]) { vehid = VehicleGet[playerid]; }
				else { return 1; }
				
	        	if(IsPlayerInVehicle(playerid, vehid))
	        	{
         			CarInfo[PlayerInfo[playerid][pPcarkey]][cColorOne] = color1;
	                CarInfo[PlayerInfo[playerid][pPcarkey]][cColorTwo] = color2;
	                SafeGivePlayerMoney(playerid, -1000);
	                GameTextForPlayer(playerid, "~w~Bill for a Paint Respray~n~~r~-$1000", 5000, 1);
	                ChangeVehicleColor(VehicleGet[playerid], color1, color2);
	                OnPropUpdate();
					OnPlayerUpdate(playerid);
					return 1;
    			}
	        	else
	        	{
	            	SendClientMessage(playerid, COLOR_GREY,"    คุณไม่ได้อยู่บนรถของคุณ!");
	            	return 1;
	        	}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "USAGE: (/v)ehicle [name]");
	            SendClientMessage(playerid, COLOR_WHITE, "Available names: park, lock, sell, tow, locate, color");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/donate", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE,"_____________|รายละเอียดการ Donate|____________");
		    SendClientMessage(playerid, COLOR_GREY,"เปลี่ยนชื่อตัวละคร : #50");
		    SendClientMessage(playerid, COLOR_GREY,"หรือจะสนใจเป็นเพ็กเกจ");
		    SendClientMessage(playerid, 0xFF6347AA,"1.ระดับ Knowledge : /knowledge");
		    SendClientMessage(playerid, 0x516E6DAA,"2.ระดับ Silver : /silver");
		    SendClientMessage(playerid, 0xF6C000AA,"3.ระดับ GOLD : /gold");
		    SendClientMessage(playerid, 0xF60054AA,"4.ระดับ Platinum : /platinum");
		    SendClientMessage(playerid, COLOR_GREY,"ถ้าคุณจะโดเนท ต่อติด ADMIN:แอดมินโดยการ /report");
		    SendClientMessage(playerid, COLOR_WHITE,"_______________________________________________");
		}
		return 1;
	}
	if(strcmp(cmd, "/knowledge", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, 0xFF6347AA,"~~~~~~~~~~~ระดับ KNOWLEDGE~~~~~~~~~~~~");
		    SendClientMessage(playerid, 0xFF6347AA,"สิ่งที่จะได้รับ");
		    SendClientMessage(playerid, 0xFF6347AA,"ค่า upgrade+2      เลือดเต็มตอนเกิด");
		    SendClientMessage(playerid, 0xFF6347AA,"เงิน(100k)      รีโมทโรงรถ(1)");
		    SendClientMessage(playerid, 0xFF6347AA,"ราคา 150 บาท truemoney เท่านั้นสนใจ /report");
		    SendClientMessage(playerid, COLOR_LIGHTRED,"รีโมทถาวร");
		    SendClientMessage(playerid, 0xFF6347AA,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		}
		return 1;
	}
	if(strcmp(cmd, "/silver", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, 0x516E6DAA,"~~~~~~~~~~~ระดับ SILVER~~~~~~~~~~~~");
		    SendClientMessage(playerid, 0x516E6DAA,"สิ่งที่จะได้รับ");
		    SendClientMessage(playerid, 0x516E6DAA,"ค่า upgrade+3      เลือดเต็มตอนเกิด      เลเวล+1");
		    SendClientMessage(playerid, 0x516E6DAA,"เงิน(150k)         รีโมทโรงรถ(1)(2)");
		    SendClientMessage(playerid, 0x516E6DAA,"ราคา 200 บาท truemoney เท่านั้นสนใจ /report");
		    SendClientMessage(playerid, COLOR_LIGHTRED,"รีโมทถาวร");
		    SendClientMessage(playerid, 0x516E6DAA,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		}
		return 1;
	}
    if(strcmp(cmd, "/gold", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, 0xF6C000AA,"~~~~~~~~~~~ระดับ GOLD~~~~~~~~~~~~");
		    SendClientMessage(playerid, 0xF6C000AA,"สิ่งที่จะได้รับ");
		    SendClientMessage(playerid, 0xF6C000AA,"ค่า upgrade+5      เลือดเต็มตอนเกิด      เลเวล+2");
		    SendClientMessage(playerid, 0xF6C000AA,"เงิน(200k)    สกิวงานไดก็ได้+1level     รีโมทโรงรถ(1)(2)(3)");
		    SendClientMessage(playerid, 0xF6C000AA,"สามารถเปลี่นชื่อฟรี");
		    SendClientMessage(playerid, 0xF6C000AA,"ราคา 250 บาท truemoney เท่านั้นสนใจ /report");
		    SendClientMessage(playerid, COLOR_LIGHTRED,"รีโมทถาวร");
		    SendClientMessage(playerid, 0xF6C000AA,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		}
		return 1;
	}
    if(strcmp(cmd, "/platinum", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, 0xF60054AA,"~~~~~~~~~~~ระดับ PLATINUM~~~~~~~~~~~~");
		    SendClientMessage(playerid, 0xF60054AA,"สิ่งที่จะได้รับ");
		    SendClientMessage(playerid, 0xF60054AA,"ค่า upgrade+6      เลือดเต็มตอนเกิด      เลเวล+3");
		    SendClientMessage(playerid, 0xF60054AA,"เงิน(300k)    สกิวงานไดก็ได้เต็ม1สกิว     รีโมทโรงรถ(1)(2)(3)(4)");
		    SendClientMessage(playerid, 0xF60054AA,"สามารถเปลี่นชื่อฟรี");
		    SendClientMessage(playerid, 0xF60054AA,"ราคา 300 บาท truemoney เท่านั้นสนใจ /report");
		    SendClientMessage(playerid, COLOR_LIGHTRED,"รีโมทถาวร");
		    SendClientMessage(playerid, 0xF60054AA,"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~");
		}
		return 1;
	}
	if(strcmp(cmd, "/payday", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				PayDay();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่สามารถใช้คำสั่งนี้ได้!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setpayday", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] <= 1330)
			{
				SendClientMessage(playerid, COLOR_GRAD2, " คุณไม่สามารถใช้คำสั่งนี้ได้!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /setpayday [numbers]");
				return 1;
			}
 		}
		new payday = strval(tmp);
		if (payday == 0)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s ได้ปรับค่า EXP Payday ให้เป็นปกติ", sendername);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			expx = 1;
            SendRconCommand("mode   exp x 0 ");
			return 1;
		}
		if (payday == 1)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s ได้ปรับค่า EXP Payday ให้เป็นปกติ", sendername);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			expx = 1;
			SendRconCommand("mode   exp x 1 ");
			return 1;
		}
		if (payday == 2)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s ได้ปรับค่า EXP Payday ให้คูณด้วย 2", sendername);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			expx = 2;
			SendRconCommand("mode   exp x 2");
			return 1;
		}
		if (payday == 3)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s ได้ปรับค่า EXP Payday ให้คูณด้วย 3", sendername);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			expx = 3;
			SendRconCommand("mode   exp x 3");
			return 1;
		}
		if (payday == 4)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s ได้ปรับค่า EXP Payday ให้คูณด้วย 4", sendername);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			expx = 4;
			SendRconCommand("mode   exp x 4");
			return 1;
		}
		if (payday == 5)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s ได้ปรับค่า EXP Payday ให้คูณด้วย 5", sendername);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			expx = 5;
			SendRconCommand("mode   exp x 5");
			return 1;
		}
		if (payday == 999)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "AdmCmd: %s ได้ปรับค่า EXP Payday ให้คูณด้วย 999", sendername);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			expx = 999;
			SendRconCommand("mode   exp x 999");
			return 1;
		}
		if (payday != 1 && payday != 2 && payday != 3 && payday != 4 && payday != 5 && payday != 999)
		{
			SendClientMessage(playerid, COLOR_GREY, "   จำนวนที่จะให้คูณผิดพลาด (มีแค่ 1 - 5 เท่านั้น) !");
			return 1;
		}
 	}
	if(strcmp(cmd, "/buycar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, ".::_____ BUYCAR _____::.");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /buycar [numbers]");
				SendClientMessage(playerid, COLOR_WHITE, "($100k): 1.Landstalker 2.Elegant 3.Sabre 4.Clover");
				SendClientMessage(playerid, COLOR_WHITE, "($150k): 5.Slamvan 6.Savanna 7.Previon 8.Stallion");
				SendClientMessage(playerid, COLOR_WHITE, "($200k): 9.Feltzer 10.Uranus ");
				SendClientMessage(playerid, COLOR_WHITE, "($300k): 11.Blistacompact 12.Elegy 13.Banshee ");
				SendClientMessage(playerid, COLOR_WHITE, "($400k): 14.Buffalo 15.Jester");
				SendClientMessage(playerid, COLOR_WHITE, "($450k): 16.Sultan 17.Comet");
				SendClientMessage(playerid, COLOR_WHITE, "($600k): 18.Phoenix 19.Zr350 20.Cheetah");
				return 1;
			}
 		}
		new payday = strval(tmp);
		if (payday == 1)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 100000)//50k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($100000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 400;
			CarInfo[idcar][cValue] = 100000;
			strmid(CarInfo[i][cDescription], "Landstalker", 0, strlen("Landstalker"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-100000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Landstalker");
			return 1;
			}
			}
		}
		if (payday == 2)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 100000)//50k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($100000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 507;
			CarInfo[idcar][cValue] = 100000;
			strmid(CarInfo[i][cDescription], "Elegant", 0, strlen("Elegant"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-100000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Elegant");
			return 1;
			}
			}

		}
		if (payday == 3)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 100000)//100k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($100000) !");
				return 1;
			}
	        for(new i = 0; i < sizeof(CarInfo); i++)
	        {
			if(CarInfo[i][cOwned] == 0)
			{
            new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 475;
			CarInfo[idcar][cValue] = 100000;
			strmid(CarInfo[i][cDescription], "Sabre", 0, strlen("Sabre"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-100000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Sabre");
			return 1;
			}
			}

		}
		if (payday == 4)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 100000)//100k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($100000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 542;
			CarInfo[idcar][cValue] = 100000;
			strmid(CarInfo[i][cDescription], "Clover", 0, strlen("Clover"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-100000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Clover");
			return 1;
			}
			}

		}
		if (payday == 5)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 150000)//100k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($150000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 535;
			CarInfo[idcar][cValue] = 150000;
			strmid(CarInfo[i][cDescription], "Slamvan", 0, strlen("Slamvan"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-150000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Slamvan");
			return 1;
			}
			}

		}
		if (payday == 6)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 150000)//100k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($150000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 567;
			CarInfo[idcar][cValue] = 150000;
			strmid(CarInfo[i][cDescription], "Savanna", 0, strlen("Savanna"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-150000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Savanna");
			return 1;
			}
			}

		}
        if (payday == 7)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 150000)//300k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($150000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 402;
			CarInfo[idcar][cValue] = 150000;
			strmid(CarInfo[i][cDescription], "Previon", 0, strlen("Previon"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-150000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Previon");
			return 1;
			}
			}

		}
        if (payday == 8)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 150000)//100k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($150000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 439;
			CarInfo[idcar][cValue] = 150000;
			strmid(CarInfo[i][cDescription], "Stallion", 0, strlen("Stallion"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-150000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Stallion");
			return 1;
			}
			}

		}
        if (payday == 9)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 200000)//400k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($200000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 533;
			CarInfo[idcar][cValue] = 200000;
			strmid(CarInfo[i][cDescription], "Feltzer", 0, strlen("Feltzer"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-200000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Feltzer");
			return 1;
			}
			}

		}
        if (payday == 10)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 200000)//400k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($200000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 558;
			CarInfo[idcar][cValue] = 200000;
			strmid(CarInfo[i][cDescription], "Uranus", 0, strlen("Uranus"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-200000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Uranus");
			return 1;
			}
			}

		}
        if (payday == 11)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 300000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($300000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 496;
			CarInfo[idcar][cValue] = 300000;
			strmid(CarInfo[i][cDescription], "Blistacompact", 0, strlen("Blistacompact"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-300000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Blistacompact");
			return 1;
			}
			}

		}
        if (payday == 12)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 300000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($300000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 562;
			CarInfo[idcar][cValue] = 300000;
			strmid(CarInfo[i][cDescription], "Elegy", 0, strlen("Elegy"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-300000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Elegy");
			return 1;
			}
			}

		}
        if (payday == 13)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 300000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($300000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 429;
			CarInfo[idcar][cValue] = 300000;
			strmid(CarInfo[i][cDescription], "Banshee", 0, strlen("Banshee"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-300000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Banshee");
			return 1;
			}
			}

		}
        if (payday == 14)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 400000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($400000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 402;
			CarInfo[idcar][cValue] = 400000;
			strmid(CarInfo[i][cDescription], "Buffalo", 0, strlen("Buffalo"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-400000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Buffalo");
			return 1;
			}
			}

		}
        if (payday == 15)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 400000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($400000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 559;
			CarInfo[idcar][cValue] = 400000;
			strmid(CarInfo[i][cDescription], "Jester", 0, strlen("Jester"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-400000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Jester");
			return 1;
			}
			}

    	}
        if (payday == 16)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 450000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($450000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 560;
			CarInfo[idcar][cValue] = 450000;
			strmid(CarInfo[i][cDescription], "Sultan", 0, strlen("Sultan"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-450000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Sultan");
			return 1;
			}
			}

		}
        if (payday == 17)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 450000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($450000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 480;
			CarInfo[idcar][cValue] = 450000;
			strmid(CarInfo[i][cDescription], "Comet", 0, strlen("Comet"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-450000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Comet");
			return 1;
			}
			}

		}
        if (payday == 18)
  		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 600000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($600000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 603;
			CarInfo[idcar][cValue] = 600000;
			strmid(CarInfo[i][cDescription], "Phoenix", 0, strlen("Phoenix"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-600000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Phoenix");
			return 1;
			}
			}

		}
        if (payday == 19)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 600000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($600000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 477;
			CarInfo[idcar][cValue] = 600000;
			strmid(CarInfo[i][cDescription], "Zr350", 0, strlen("Zr350"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-600000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Zr350");
			return 1;
			}
			}

		}
        if (payday == 20)
		{
			if(!PlayerToPoint(3.0,playerid,-2236.3728,292.0458,35.6449))
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้ที่กิจการขายรถ !");
				return 1;
			}
			if(PlayerInfo[playerid][pPcarkey] != 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีรถอยู่แล้วไม่สามารถซื้อได้อีก !");
				return 1;
			}
			if(ScriptMoney[playerid] < 600000)//500k
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณมีเงินไม่พอ ($600000) !");
				return 1;
			}
			for(new i = 0; i < sizeof(CarInfo); i++)
			{
			if(CarInfo[i][cOwned] == 0)
			{
  			new Float:a;
			PlayerInfo[playerid][pPcarkey] = i;
			new idcar;
			idcar = PlayerInfo[playerid][pPcarkey];
			CarInfo[idcar][cOwned] = 1;
			CarInfo[idcar][cLock] = 1;
			CarInfo[idcar][cModel] = 415;
			CarInfo[idcar][cValue] = 600000;
			strmid(CarInfo[i][cDescription], "Cheetah", 0, strlen("Cheetah"), 999);
			GetPlayerFacingAngle(playerid, a);
			//-2230.7483,300.2325,35.1230
			CarInfo[idcar][cLocationx] = -2230.7483; //ใส่เช่น 111.111
			CarInfo[idcar][cLocationy] = 300.2325; //ใส่เช่น 222.222
			CarInfo[idcar][cLocationz] = 35.1230; //ใส่เช่น 333.333
			CarInfo[idcar][cAngle] = a;
			GetPlayerName(playerid, sendername, sizeof(sendername));
			strmid(CarInfo[idcar][cOwner], sendername, 0, strlen(sendername), 999);
			//DateProp(playerid);
			OnPropUpdate();
			OnPlayerUpdate(playerid);
			GetCar(playerid);
			SafeGivePlayerMoney(playerid,-600000);
			SendClientMessage(playerid, COLOR_GRAD2, " รถของคุณจะมาถึงภายในไม่เกิน 5 วินาที");
			SendClientMessage(playerid, COLOR_GRAD2, " พิมพ์ /(v)ehicle เพื่อดูวิธีการใช้งาน");
			SendClientMessage(playerid, COLOR_GRAD3, " รถของคุณคือรุ่น Cheetah");
			return 1;
			}
			}

		}
		if (payday != 1 && payday != 2 && payday != 3 && payday != 4 && payday != 5 && payday != 6 && payday != 7 && payday != 8 && payday != 9 && payday != 10 && payday != 11 && payday != 12&& payday != 13 && payday != 14 && payday != 15&& payday != 16 && payday != 17 && payday != 18&& payday != 19 && payday != 20)
		{
			SendClientMessage(playerid, COLOR_GREY, "   เลขรถผิดพลาด (มีแค่ 1 - 12 เท่านั้น) !");
			return 1;
		}
 	}
	if(strcmp(cmd, "/ga", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
						GetPlayerName(playerid, sendername, sizeof(sendername));
				    	format(string, sizeof(string), "* Admin %s ได้เสกปืนออกมาใช้", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 24, 1000);
						GivePlayerWeapon(playerid, 32, 1000);
						GivePlayerWeapon(playerid, 27, 1000);
						GivePlayerWeapon(playerid, 31, 1000);
						GivePlayerWeapon(playerid, 16, 1000);
						GivePlayerWeapon(playerid, 41, 1000);
						GivePlayerWeapon(playerid, 34, 1000);
						GivePlayerWeapon(playerid, 4, 1);
						SetPlayerArmour(playerid, 200);
						SetPlayerHealth(playerid, 200);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่สามารถใช้คำสั่งนี้ได้!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/suit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pMember] == 1|| PlayerInfo[playerid][pLeader] == 1)
	    	{
                if (PlayerToPoint(3,playerid,-1616.3198,683.1079,7.1875) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0x0000F6AA, "|_______ SFPD Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| rank1: 1-3		rank2: 4-6");
						SendClientMessage(playerid, COLOR_GRAD2, "| rank3: 7-8 ");
						SendClientMessage(playerid, COLOR_GRAD1, "| rank6: 9    ");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 1|| PlayerInfo[playerid][pLeader] == 1)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 267;
							PlayerInfo[playerid][pChar] = 267;
							SetPlayerSkin(playerid, 267);
					    }
	   				}
					else if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 1|| PlayerInfo[playerid][pLeader] == 1)
					    {
	        				if(PlayerInfo[playerid][pRank] < 1)
							{
    							SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 284;
							PlayerInfo[playerid][pChar] = 284;
							SetPlayerSkin(playerid, 284);
						}
					}
					else if (item == 3)
					{
						if(PlayerInfo[playerid][pMember] == 1|| PlayerInfo[playerid][pLeader] == 1)
						{
						    if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 266;
							PlayerInfo[playerid][pChar] = 266;
							SetPlayerSkin(playerid, 266);
						}
					}
					else if (item == 4)
					{
						if(PlayerInfo[playerid][pMember] == 1|| PlayerInfo[playerid][pLeader] == 1)
						{
						    if(PlayerInfo[playerid][pRank] < 2)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 2 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 280;
							PlayerInfo[playerid][pChar] = 280;
							SetPlayerSkin(playerid, 280);
					    }
	   				}
	   				else if (item == 5)
					{
						if(PlayerInfo[playerid][pMember] == 1|| PlayerInfo[playerid][pLeader] == 1)
						{
						    if(PlayerInfo[playerid][pRank] < 2)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 2 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 282;
							PlayerInfo[playerid][pChar] = 282;
							SetPlayerSkin(playerid, 282);
					    }
	   				}
	   				else if (item == 6)
					{
						if(PlayerInfo[playerid][pMember] == 1|| PlayerInfo[playerid][pLeader] == 1)
						{
						    if(PlayerInfo[playerid][pRank] < 2)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 2 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 283;
							PlayerInfo[playerid][pChar] = 283;
							SetPlayerSkin(playerid, 283);
					    }
	   				}
	   				else if (item == 7)
					{
						if(PlayerInfo[playerid][pMember] == 1|| PlayerInfo[playerid][pLeader] == 1)
						{
						    if(PlayerInfo[playerid][pRank] < 3)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 3 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 281;
							PlayerInfo[playerid][pChar] = 281;
							SetPlayerSkin(playerid, 281);
					    }
	   				}
	   				else if (item == 8)
					{
						if(PlayerInfo[playerid][pMember] == 1|| PlayerInfo[playerid][pLeader] == 1)
						{
						    if(PlayerInfo[playerid][pRank] < 3)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 3 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 283;
							PlayerInfo[playerid][pChar] = 283;
							SetPlayerSkin(playerid, 283);
					    }
	   				}
                    else if (item == 9)
					{
						if(PlayerInfo[playerid][pLeader] == 1)
						{
						    if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 288;
							PlayerInfo[playerid][pChar] = 288;
							SetPlayerSkin(playerid, 288);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 2|| PlayerInfo[playerid][pLeader] == 2)
	    	{
				if (PlayerToPoint(3, playerid,-684.1024,939.5552,13.6328) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0x007FF6AA, "|_______ FBI Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1: Special FBI");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 2|| PlayerInfo[playerid][pLeader] == 2)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 286;
							PlayerInfo[playerid][pChar] = 286;
							SetPlayerSkin(playerid, 286);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 3|| PlayerInfo[playerid][pLeader] == 3)
 			{
				if (PlayerToPoint(3, playerid,-1346.2615,492.6144,11.2027) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0x007F00AA, "|_______ ARMY Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1: Army suit");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 3|| PlayerInfo[playerid][pLeader] == 3)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 287;
							PlayerInfo[playerid][pChar] = 287;
							SetPlayerSkin(playerid, 287);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 4|| PlayerInfo[playerid][pLeader] == 4)
 			{
				if (PlayerToPoint(3, playerid,-2655.8730,635.2342,14.4531) || PlayerInfo[playerid][pLocal] != 2555 )
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xF6636EAA, "|_______ Medic Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1: Male Nurse	   2: Firefighter");
						SendClientMessage(playerid, COLOR_GRAD1, "| 3: Medic");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 4|| PlayerInfo[playerid][pLeader] == 4)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 276;
							PlayerInfo[playerid][pChar] = 276;
							SetPlayerSkin(playerid, 276);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 4|| PlayerInfo[playerid][pLeader] == 4)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 279;
							PlayerInfo[playerid][pChar] = 279;
							SetPlayerSkin(playerid, 279);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pMember] == 4|| PlayerInfo[playerid][pLeader] == 4)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 3 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 70;
							PlayerInfo[playerid][pChar] = 70;
							SetPlayerSkin(playerid, 70);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 5|| PlayerInfo[playerid][pLeader] == 5)
 			{
				if (PlayerToPoint(3, playerid,1229.4397,-807.8854,1084.0078) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0x6F6E6EAA, "|________ Mafia Uniform ________|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-6: Mafia  7: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 5|| PlayerInfo[playerid][pLeader] == 5)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 258;
							PlayerInfo[playerid][pChar] = 258;
							SetPlayerSkin(playerid, 258);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 5|| PlayerInfo[playerid][pLeader] == 5)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 112;
							PlayerInfo[playerid][pChar] = 112;
							SetPlayerSkin(playerid, 112);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pMember] == 5|| PlayerInfo[playerid][pLeader] == 5 )
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 126;
							PlayerInfo[playerid][pChar] = 126;
							SetPlayerSkin(playerid, 126);
					    }
	   				}
	   				if (item == 4)
					{
					    if(PlayerInfo[playerid][pMember] == 5|| PlayerInfo[playerid][pLeader] == 5)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 125;
							PlayerInfo[playerid][pChar] = 125;
							SetPlayerSkin(playerid, 125);
					    }
	   				}
	   				if (item == 5)
					{
					    if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 111;
							PlayerInfo[playerid][pChar] = 111;
							SetPlayerSkin(playerid, 111);
					    }
	   				}
	   				if (item == 6)
					{
					    if(PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 98;
							PlayerInfo[playerid][pChar] = 98;
							SetPlayerSkin(playerid, 98);
					    }
	   				}
	   				if (item == 7)
					{
					    if(PlayerInfo[playerid][pLeader] == 5)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 113;
							PlayerInfo[playerid][pChar] = 113;
							SetPlayerSkin(playerid, 113);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 6|| PlayerInfo[playerid][pLeader] == 6)
 			{
				if (PlayerToPoint(3, playerid,-2655.8730,635.2342,14.4531) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xA9483DAA, "|_______ Yakuza Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-7: Yakuza's Member 8: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 121;
							PlayerInfo[playerid][pChar] = 121;
							SetPlayerSkin(playerid, 121);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 117;
							PlayerInfo[playerid][pChar] = 117;
							SetPlayerSkin(playerid, 117);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 122;
							PlayerInfo[playerid][pChar] = 122;
							SetPlayerSkin(playerid, 122);
					    }
	   				}
	   				if (item == 4)
					{
					    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 123;
							PlayerInfo[playerid][pChar] = 123;
							SetPlayerSkin(playerid, 123);
					    }
	   				}
	   				if (item == 5)
					{
					    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 169;
							PlayerInfo[playerid][pChar] = 169;
							SetPlayerSkin(playerid, 169);
					    }
	   				}
	   				if (item == 6)
					{
					    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 186;
							PlayerInfo[playerid][pChar] = 186;
							SetPlayerSkin(playerid, 186);
					    }
	   				}
	   				if (item == 7)
					{
					    if(PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 118;
							PlayerInfo[playerid][pChar] = 118;
							SetPlayerSkin(playerid, 118);
					    }
	   				}
	   				if (item == 8)
					{
					    if(PlayerInfo[playerid][pLeader] == 6)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 120;
							PlayerInfo[playerid][pChar] = 120;
							SetPlayerSkin(playerid, 120);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 7)
 			{
				if (PlayerToPoint(3, playerid, 356.2998,151.9914,1025.7891) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xF6A700AA, "|_______ Mayor Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1: suit 1    2: suit 2");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 163;
							PlayerInfo[playerid][pChar] = 163;
							SetPlayerSkin(playerid, 163);
	   				}
	   				if (item == 2)
					{
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 164;
							PlayerInfo[playerid][pChar] = 164;
							SetPlayerSkin(playerid, 164);
	   				   }
	   				}
            
   }
			if (PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
 			{
				if (PlayerToPoint(3, playerid,-2442.7756,522.9667,29.9126) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xF6F1D1AA, "|_______ Hitman Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-4: Hitman's 5: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 127;
							PlayerInfo[playerid][pChar] = 127;
							SetPlayerSkin(playerid, 127);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 165;
							PlayerInfo[playerid][pChar] = 165;
							SetPlayerSkin(playerid, 165);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 186;
							PlayerInfo[playerid][pChar] = 186;
							SetPlayerSkin(playerid, 186);
					    }
	   				}
	   				if (item == 4)
					{
					    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 118;
							PlayerInfo[playerid][pChar] = 118;
							SetPlayerSkin(playerid, 118);
					    }
	   				}
	   				if (item == 5)
					{
					    if(PlayerInfo[playerid][pLeader] == 8)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 294;
							PlayerInfo[playerid][pChar] = 294;
							SetPlayerSkin(playerid, 294);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
 			{
				if (PlayerToPoint(3, playerid,-2050.9248,459.5486,35.1719) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xF6B614AA, "|_______ Agency News Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-2: News's Member 3: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 148;
							PlayerInfo[playerid][pChar] = 148;
							SetPlayerSkin(playerid, 148);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 188;
							PlayerInfo[playerid][pChar] = 188;
							SetPlayerSkin(playerid, 188);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pLeader] == 9)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 187;
							PlayerInfo[playerid][pChar] = 187;
							SetPlayerSkin(playerid, 187);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
 			{
				if (PlayerToPoint(3, playerid,-1986.8893,240.8803,35.1719) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xF6E914AA, "|_______ Taxi Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-2: TAXI  3: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 255;
							PlayerInfo[playerid][pChar] = 255;
							SetPlayerSkin(playerid, 255);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 10 || PlayerInfo[playerid][pLeader] == 10)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 253;
							PlayerInfo[playerid][pChar] = 253;
							SetPlayerSkin(playerid, 253);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pLeader] == 10)
					    {
					        if(PlayerInfo[playerid][pRank] < 3)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 61;
							PlayerInfo[playerid][pChar] = 61;
							SetPlayerSkin(playerid, 61);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
 			{
				if (PlayerToPoint(3, playerid,-2032.9561,-117.4898,1035.1719) || PlayerInfo[playerid][pLocal] != 2555 )
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xF6E914AA, "|_______ Instructer Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-2: Member   3: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 59;
							PlayerInfo[playerid][pChar] = 59;
							SetPlayerSkin(playerid, 59);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 11 || PlayerInfo[playerid][pLeader] == 11)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 76;
							PlayerInfo[playerid][pChar] = 76;
							SetPlayerSkin(playerid, 76);
					    }
	   				}
					if (item == 3)
					{
					    if( PlayerInfo[playerid][pLeader] == 11)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 171;
							PlayerInfo[playerid][pChar] = 171;
							SetPlayerSkin(playerid, 171);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
 			{
				if (PlayerToPoint(3, playerid,2492.6484,-1702.5197,1018.3438) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, COLOR_GREEN, "|_______  GROVE STREET Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-3: GROVE STREET 4: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 105;
							PlayerInfo[playerid][pChar] = 105;
							SetPlayerSkin(playerid, 105);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 106;
							PlayerInfo[playerid][pChar] = 106;
							SetPlayerSkin(playerid, 106);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 270;
							PlayerInfo[playerid][pChar] = 270;
							SetPlayerSkin(playerid, 270);
					    }
	   				}
	   				if (item == 4)
					{
					    if(PlayerInfo[playerid][pLeader] == 12)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 271;
							PlayerInfo[playerid][pChar] = 271;
							SetPlayerSkin(playerid, 271);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
 			{
				if (PlayerToPoint(3, playerid,307.7400,1122.2672,1083.8828) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xF600F6AA, "|_______ BALLAS Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-2: BALLAS 3: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pLeader] == 13)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 102;
							PlayerInfo[playerid][pChar] = 102;
							SetPlayerSkin(playerid, 102);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 103;
							PlayerInfo[playerid][pChar] = 103;
							SetPlayerSkin(playerid, 103);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pLeader] == 13|| PlayerInfo[playerid][pLeader] == 13)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 104;
							PlayerInfo[playerid][pChar] = 104;
							SetPlayerSkin(playerid, 104);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
 			{
				if (PlayerToPoint(3, playerid,2246.8684,-1161.3959,1029.7969) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xF6F600AA, "|_______ VAGOS Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-2: VAGOS 3: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 110;
							PlayerInfo[playerid][pChar] = 110;
							SetPlayerSkin(playerid, 110);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 109;
							PlayerInfo[playerid][pChar] = 109;
							SetPlayerSkin(playerid, 109);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pLeader] == 14)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 108;
							PlayerInfo[playerid][pChar] = 108;
							SetPlayerSkin(playerid, 108);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
 			{
				if (PlayerToPoint(3, playerid,2261.0935,-1222.1864,1049.0234) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0x72F6F2AA, "|_______ Aztecas Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-2: Aztecas 3: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 114;
							PlayerInfo[playerid][pChar] = 114;
							SetPlayerSkin(playerid, 114);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 116;
							PlayerInfo[playerid][pChar] = 116;
							SetPlayerSkin(playerid, 116);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pLeader] == 15)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 115;
							PlayerInfo[playerid][pChar] = 115;
							SetPlayerSkin(playerid, 115);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
 			{
				if (PlayerToPoint(3, playerid,2329.8027,-1182.8723,1027.9766))
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0x727375AA, "|_______ Vance Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-3: สมาชิก 4-5: หัวหน้า/รองหัวหน้า");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 254;
							PlayerInfo[playerid][pChar] = 254;
							SetPlayerSkin(playerid, 254);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 247;
							PlayerInfo[playerid][pChar] = 247;
							SetPlayerSkin(playerid, 247);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 248;
							PlayerInfo[playerid][pChar] = 248;
							SetPlayerSkin(playerid, 248);
					    }
	   				}
	   				if (item == 4)
					{
					    if(PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16)
					    {
					        if(PlayerInfo[playerid][pRank] < 3)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 100;
							PlayerInfo[playerid][pChar] = 100;
							SetPlayerSkin(playerid, 100);
					    }
	   				}
	   				if (item == 5)
					{
					    if(PlayerInfo[playerid][pLeader] == 16)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 181;
							PlayerInfo[playerid][pChar] = 181;
							SetPlayerSkin(playerid, 181);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
 			{
				if (PlayerToPoint(3, playerid,-2533.0671,1220.1917,37.4219) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0x00F6F6AA, "|_______ Ghost door Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-2: Ghost door 3: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 173;
							PlayerInfo[playerid][pChar] = 173;
							SetPlayerSkin(playerid, 173);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 17 || PlayerInfo[playerid][pLeader] == 17)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 175;
							PlayerInfo[playerid][pChar] = 175;
							SetPlayerSkin(playerid, 175);
					    }
	   				}
	   				if (item == 3)
					{
					    if( PlayerInfo[playerid][pLeader] == 17)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 174;
							PlayerInfo[playerid][pChar] = 174;
							SetPlayerSkin(playerid, 174);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
 			{
				if (PlayerToPoint(3, playerid,-1715.9927,1018.2559,17.5859) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0x00F6CCAA, "|_______Underworld Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-2: Underworld  3: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 176;
							PlayerInfo[playerid][pChar] = 176;
							SetPlayerSkin(playerid, 176);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 18 || PlayerInfo[playerid][pLeader] == 18)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 177;
							PlayerInfo[playerid][pChar] = 177;
							SetPlayerSkin(playerid, 177);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pLeader] == 18 )
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 82;
							PlayerInfo[playerid][pChar] = 82;
							SetPlayerSkin(playerid, 82);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
 			{
				if (PlayerToPoint(3, playerid,-2237.0178,2353.9033,4.9809) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, COLOR_WHITE, "|_______ องกรณ์ลับ Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-4: องกรณ์ลับ");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 252;
							PlayerInfo[playerid][pChar] = 252;
							SetPlayerSkin(playerid, 252);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 162;
							PlayerInfo[playerid][pChar] = 162;
							SetPlayerSkin(playerid, 162);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 45;
							PlayerInfo[playerid][pChar] = 45;
							SetPlayerSkin(playerid, 45);
					    }
	   				}
	   				if (item == 4)
					{
					    if(PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 166;
							PlayerInfo[playerid][pChar] = 166;
							SetPlayerSkin(playerid, 166);
					    }
	   				}
				}
			}
			if (PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
 			{
				if (PlayerToPoint(3, playerid,-2184.8813,-262.8727,40.7195) || PlayerInfo[playerid][pLocal] != 2555)
				{
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /suit [หมายเลข]");
						SendClientMessage(playerid, 0xF60000AA, "|_______ Redblood Uniform _______|");
						SendClientMessage(playerid, COLOR_GRAD1, "| 1-2: Redblood 3: Leader");
						return 1;
					}
					new item = strval(tmp);
					if (item == 1)
					{
					    if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 185;
							PlayerInfo[playerid][pChar] = 185;
							SetPlayerSkin(playerid, 185);
					    }
	   				}
	   				if (item == 2)
					{
					    if(PlayerInfo[playerid][pMember] == 20 || PlayerInfo[playerid][pLeader] == 20)
					    {
					        if(PlayerInfo[playerid][pRank] < 1)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 1 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 186;
							PlayerInfo[playerid][pChar] = 186;
							SetPlayerSkin(playerid, 186);
					    }
	   				}
	   				if (item == 3)
					{
					    if(PlayerInfo[playerid][pLeader] == 20)
					    {
					        if(PlayerInfo[playerid][pRank] < 6)
							{
				    			SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีระดับ 6 เท่านั้น !");
				    			return 1;
							}
							PlayerInfo[playerid][pModel] = 29;
							PlayerInfo[playerid][pChar] = 29;
							SetPlayerSkin(playerid, 29);
					    }
	   				}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/clearchatbox", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
				format(string, sizeof(string), "                              ");
				SendClientMessageToAll(COLOR_WHITE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่สามารถใช้คำสั่งนี้ได้!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setjobhelp", true) == 0 || strcmp(cmd, "/jobidhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
            if (PlayerInfo[playerid][pAdmin] >= 2)
            {
			SendClientMessage(playerid, COLOR_GRAD1,"*1*นักสืบ(1) ทนายความ(2) โสเภณี(3) คนขายยา(4) คนขโมยรถ(5)");
            SendClientMessage(playerid, COLOR_GRAD1,"*2*ช่างซ่อม(7) บอดี้กาด(8) คนขายอาวุธ(9) พนักงานประกันภัย(10) นักมวย(12)");
			}
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		}
		return 1;
	}
//----------------------------- Gravity -------------------------------------------
	/*if(strcmp(cmd,"/gravity",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not an Admin !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
	            SendClientMessage(playerid, COLOR_WHITE, "USAGE: /gravity [value Default: 0.008]");
	            return 1;
			}
			new Float:gravity;
			floatstr(tmp);
			SetGravity(gravity);
			format(string, sizeof(string), "* Gravity changed to %f.",gravity);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		return 1;
	}*/
//------------------------------ Mission Making -----------------------------------
    if(strcmp(cmd,"/mk",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not an Admin !");
	            return 1;
	        }
	        new x_mk[256];
			x_mk = strtok(cmdtext, idx);
			if(!strlen(x_mk)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /mk [name]");
				SendClientMessage(playerid, COLOR_GREY, "Available names: (/mk text [number] [text]) (/mk game [number] [text]) (/mk cp [number])");
				SendClientMessage(playerid, COLOR_GREY, "Available names: (/mk title [text]) (/mk reward [price]) (/mk usecp)");
				return 1;
			}
	        if(strcmp(x_mk,"text",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /mk text [number] [text]");
					return 1;
				}
				new number = strval(tmp);
				if(number < 1 || number > 18) { SendClientMessage(playerid, COLOR_GREY, "   Number can't be below 1 or above 18 !"); return 1; }
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/mk text [number] [text]");
					return 1;
				}
				switch(number)
				{
				    case 1:
				    {
						strmid(MissionInfo[mText1], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 1st Text Line of the Mission.");
				    }
				    case 2:
				    {
				        strmid(MissionInfo[mText2], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 2nd Text Line of the Mission.");
				    }
				    case 3:
				    {
				        strmid(MissionInfo[mText3], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 3rd Text Line of the Mission.");
				    }
				    case 4:
				    {
				        strmid(MissionInfo[mText4], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 4th Text Line of the Mission.");
				    }
				    case 5:
				    {
				        strmid(MissionInfo[mText5], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 5th Text Line of the Mission.");
				    }
				    case 6:
				    {
				        strmid(MissionInfo[mText6], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 6th Text Line of the Mission.");
				    }
				    case 7:
				    {
				        strmid(MissionInfo[mText7], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 7th Text Line of the Mission.");
				    }
				    case 8:
				    {
				        strmid(MissionInfo[mText8], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 8th Text Line of the Mission.");
				    }
				    case 9:
				    {
				        strmid(MissionInfo[mText9], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 9th Text Line of the Mission.");
				    }
				    case 10:
				    {
				        strmid(MissionInfo[mText10], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 10th Text Line of the Mission.");
				    }
				    case 11:
				    {
				        strmid(MissionInfo[mText11], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 11th Text Line of the Mission.");
				    }
				    case 12:
				    {
				        strmid(MissionInfo[mText12], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 12th Text Line of the Mission.");
				    }
				    case 13:
				    {
				        strmid(MissionInfo[mText13], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 13th Text Line of the Mission.");
				    }
				    case 14:
				    {
				        strmid(MissionInfo[mText14], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 14th Text Line of the Mission.");
				    }
				    case 15:
				    {
				        strmid(MissionInfo[mText15], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 15th Text Line of the Mission.");
				    }
				    case 16:
				    {
				        strmid(MissionInfo[mText16], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 16th Text Line of the Mission.");
				    }
				    case 17:
				    {
				        strmid(MissionInfo[mText17], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 17th Text Line of the Mission.");
				    }
				    case 18:
				    {
				        strmid(MissionInfo[mText18], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 18th Text Line of the Mission.");
				    }
				}
			}
			else if(strcmp(x_mk,"game",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /mk game [number] [text]");
					return 1;
				}
				new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   Number can't be below 1 or above 6 !"); return 1; }
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/mk game [number] [text]");
					return 1;
				}
				switch(number)
				{
				    case 1:
				    {
				        strmid(MissionInfo[mGText1], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 1st GameText Line of the Mission.");
				    }
				    case 2:
				    {
				        strmid(MissionInfo[mGText2], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 2nd GameText Line of the Mission.");
				    }
				    case 3:
				    {
				        strmid(MissionInfo[mGText3], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 3rd GameText Line of the Mission.");
				    }
				    case 4:
				    {
				        strmid(MissionInfo[mGText4], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 4th GameText Line of the Mission.");
				    }
				    case 5:
				    {
				        strmid(MissionInfo[mGText5], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 5th GameText Line of the Mission.");
				    }
				    case 6:
				    {
				        strmid(MissionInfo[mGText6], result, 0, strlen(result), 255);
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 6th GameText Line of the Mission.");
				    }
				}
			}
			else if(strcmp(x_mk,"cp",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /mk cp [number]");
					return 1;
				}
			    new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   Number can't be below 1 or above 6 !"); return 1; }
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(playerid, X,Y,Z);
                switch(number)
				{
				    case 1:
				    {
				        MissionInfo[mCP1][0] = X; MissionInfo[mCP1][1] = Y; MissionInfo[mCP1][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 1st Checkpoint of the Mission.");
				    }
				    case 2:
				    {
				        MissionInfo[mCP2][0] = X; MissionInfo[mCP2][1] = Y; MissionInfo[mCP2][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 2nd Checkpoint Line of the Mission.");
				    }
				    case 3:
				    {
				        MissionInfo[mCP3][0] = X; MissionInfo[mCP3][1] = Y; MissionInfo[mCP3][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 3rd Checkpoint Line of the Mission.");
				    }
				    case 4:
				    {
				        MissionInfo[mCP4][0] = X; MissionInfo[mCP4][1] = Y; MissionInfo[mCP4][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 4th Checkpoint Line of the Mission.");
				    }
				    case 5:
				    {
				        MissionInfo[mCP5][0] = X; MissionInfo[mCP5][1] = Y; MissionInfo[mCP5][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 5th Checkpoint Line of the Mission.");
				    }
				    case 6:
				    {
				        MissionInfo[mCP6][0] = X; MissionInfo[mCP6][1] = Y; MissionInfo[mCP6][2] = Z;
				        SendClientMessage(playerid, COLOR_WHITE, "You've made the 6th Checkpoint Line of the Mission.");
				    }
				}
			}
			else if(strcmp(x_mk,"usecp",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /mk usecp [0/1]");
					return 1;
				}
			    new toggle = strval(tmp);
				if(toggle == 0 || toggle == 1) { }
				else { SendClientMessage(playerid, COLOR_GREY, "   CheckpointUse number must be 0 (OFF) or 1 (ON) !"); return 1; }
				MissionInfo[mToggle] = toggle;
				if(toggle == 0) { SendClientMessage(playerid, COLOR_WHITE, "You've set the Use of Checkpoints to 0 (OFF)."); }
				else if(toggle == 1) { SendClientMessage(playerid, COLOR_WHITE, "You've set the Use of Checkpoints to 1 (ON)."); }
			}
			else if(strcmp(x_mk,"title",true) == 0)
			{
			    new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/mk title [text]");
					return 1;
				}
				strmid(MissionInfo[mTitle], result, 0, strlen(result), 255);
		        SendClientMessage(playerid, COLOR_WHITE, "You've made the Title of the Mission.");
			}
			else if(strcmp(x_mk,"reward",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(x_mk))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /mk reward [price]");
					return 1;
				}
			    new price = strval(tmp);
				if(price < 1 || price > 50000) { SendClientMessage(playerid, COLOR_GREY, "   Reward Price can't be below 1 or above 50000 !"); return 1; }
				MissionInfo[mReward] = price;
				SendClientMessage(playerid, COLOR_WHITE, "You've made the Reward Price for the Mission.");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Invalid Mission Making name !");
				return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/savemission", true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /savemission [missionname]");
					return 1;
				}
				SaveMission(playerid,tmp);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/loadmission", true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /loadmission [missionname]");
					return 1;
				}
				LoadMission(playerid,tmp);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/skill",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Skill Info __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /skill [number]");
		  		SendClientMessage(playerid, COLOR_GREY, "| 1: นักสืบ                            7: ช่างซ่อมรถ");
		  		SendClientMessage(playerid, COLOR_GREY, "| 2: ทนายความ                      8: คนขายรถ");
		  		SendClientMessage(playerid, COLOR_GREY, "| 3: โสเภณี                           9: นักมวย");
		  		SendClientMessage(playerid, COLOR_GREY, "| 4: คนขายยา                       10: ตกปลา");
		  		SendClientMessage(playerid, COLOR_GREY, "| 5: นักขโมยรถ");
		  		SendClientMessage(playerid, COLOR_GREY, "| 6: นักข่าว");
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"1",true) == 0)//Detective
			{
			    new level = PlayerInfo[playerid][pDetSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 1."); format(string, sizeof(string), "You need to find %d more people to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 2."); format(string, sizeof(string), "You need to find %d more people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 3."); format(string, sizeof(string), "You need to find %d more people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 4."); format(string, sizeof(string), "You need to find %d more people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your Detective Skill Level = 5."); }
			}
			else if(strcmp(x_nr,"2",true) == 0)//Lawyer
			{
			    new level = PlayerInfo[playerid][pLawSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 1."); format(string, sizeof(string), "You need to free %d more people to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 2."); format(string, sizeof(string), "You need to free %d more people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 3."); format(string, sizeof(string), "You need to free %d more people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 4."); format(string, sizeof(string), "You need to free %d more people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your Lawyer Skill Level = 5."); }
			}
			else if(strcmp(x_nr,"3",true) == 0)//Whore
			{
			    new level = PlayerInfo[playerid][pSexSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Whore Skill Level = 1."); format(string, sizeof(string), "You need to have sex %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Whore Skill Level = 2."); format(string, sizeof(string), "You need to have sex %d times more to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Whore Skill Level = 3."); format(string, sizeof(string), "You need to have sex %d times more to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Whore Skill Level = 4."); format(string, sizeof(string), "You need to have sex %d times more to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your Whore Skill Level = 5."); }
			}
			else if(strcmp(x_nr,"4",true) == 0)//Drugs Dealer
			{
			    new level = PlayerInfo[playerid][pDrugsSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 1."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 2."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 3."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 4."); format(string, sizeof(string), "You need to sell drugs %d times more to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your Drug Dealer Skill Level = 5."); }
			}
			else if(strcmp(x_nr,"5",true) == 0)//Car Jacker
			{
			    new level = PlayerInfo[playerid][pJackSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 1."); format(string, sizeof(string), "You need to drop %d cars more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 2."); format(string, sizeof(string), "You need to drop %d cars more to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 3."); format(string, sizeof(string), "You need to drop %d cars more to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 4."); format(string, sizeof(string), "You need to drop %d cars more to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Jacker Skill Level = 5."); }
			}
			else if(strcmp(x_nr,"6",true) == 0)//News Reporter
			{
			    new level = PlayerInfo[playerid][pNewsSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 1."); format(string, sizeof(string), "You need to use /news %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 2."); format(string, sizeof(string), "You need to use /news %d times people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 3."); format(string, sizeof(string), "You need to use /news %d times people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 4."); format(string, sizeof(string), "You need to use /news %d times people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your New Reporter Skill Level = 5."); }
			}
			else if(strcmp(x_nr,"7",true) == 0)//Car Mechanic
			{
			    new level = PlayerInfo[playerid][pMechSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 1."); format(string, sizeof(string), "You need to fix/fill a car for %d times more to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 2."); format(string, sizeof(string), "You need to fix/fill a car for %d times people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 3."); format(string, sizeof(string), "You need to fix/fill a car for %d times people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 4."); format(string, sizeof(string), "You need to fix/fill a car for %d times people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Mechanic Skill Level = 5."); }
			}
			else if(strcmp(x_nr,"8",true) == 0)//Car Dealer
			{
			    new level = PlayerInfo[playerid][pCarSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Dealer Skill Level = 1."); format(string, sizeof(string), "You need to sell %d more cars to people to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Dealer Skill Level = 2."); format(string, sizeof(string), "You need to sell %d more cars to people to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Dealer Skill Level = 3."); format(string, sizeof(string), "You need to sell %d more cars to people to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Dealer Skill Level = 4."); format(string, sizeof(string), "You need to sell %d more cars to people to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your Car Dealer Skill Level = 5."); }
			}
			else if(strcmp(x_nr,"9",true) == 0)//Boxer
			{
			    new level = PlayerInfo[playerid][pBoxSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Boxing Skill Level = 1."); format(string, sizeof(string), "You need to Win %d more Matches to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Boxing Skill Level = 2."); format(string, sizeof(string), "You need to Win %d more Matches to Level up.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Boxing Skill Level = 3."); format(string, sizeof(string), "You need to Win %d more Matches to Level up.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Boxing Skill Level = 4."); format(string, sizeof(string), "You need to Win %d more Matches to Level up.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your Boxing Skill Level = 5."); }
			}
			else if(strcmp(x_nr,"10",true) == 0)//Fishing
			{
			    new level = PlayerInfo[playerid][pFishSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Fishing Skill Level = 1."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW, "Your Fishing Skill Level = 2."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 250 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Your Fishing Skill Level = 3."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 500 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Your Fishing Skill Level = 4."); format(string, sizeof(string), "You need to Fish %d more Fishes to Level up.", 999 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW, "Your Fishing Skill Level = 5."); }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid Skill Number !");
			    return 1;
			}
	    }
	    return 1;
	}
	/*if(strcmp(cmd,"/agreementbroken",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_YELLOW, "Agreement Violation Security has been activated.");
	        Security = 1;
	        SaveStuff();
	        GameModeExit();
	    }
	    return 1;
	}*/
	if(strcmp(cmd, "/cks", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not an Admin !");
	            return 1;
	        }
	        new ck;
	        new number = 0;
	        new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    for(new i = 0; i < sizeof(CKInfo); i++)
			    {
					number ++;
					if(CKInfo[i][cUsed] != 0)
					{
				        format(string, sizeof(string), "%d| %s wants to Character Kill %s.",number,CKInfo[i][cSendername],CKInfo[i][cGiveplayer]);
				        SendClientMessage(playerid, COLOR_WHITE, string);
			        }
			    }
				return 1;
			}
		    if(strcmp(x_nr,"accept",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cks accept [cknumber]");
					return 1;
				}
				ck = strval(tmp);
				if(ck < 1 || ck > 10) { SendClientMessage(playerid, COLOR_GREY, "   CK Number can't be below 1 or above 10 !"); return 1; }
				ck -= 1;
				new found1 = 255;
				new found2 = 255;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(found1 != 255 && found2 != 255)
				        {
							new wstring[MAX_PLAYER_NAME];
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "%s", giveplayer);
							strmid(wstring, string, 0, strlen(string), 255);
							if(strcmp(CKInfo[ck][cSendername] ,wstring, true ) == 0 )
							{
							    found1 = i;
							}
							else if(strcmp(CKInfo[ck][cGiveplayer] ,wstring, true ) == 0 )
							{
							    found2 = i;
							}
						}
					}
				}
				if(found1 != 255 && found2 != 255)
    			{
    			    GetPlayerName(found2, giveplayer, sizeof(giveplayer));
    			    format(string, sizeof(string), "* An Admin has accepted your Character Kill, you can now perform your kill on %s.", giveplayer);
    			    SendClientMessage(found1, COLOR_LIGHTBLUE, string);
    			    OnCK[found1] = found2;
    			    GettingCK[found2] = found1;
    			    return 1;
    			}
    			else
    			{
    			    SendClientMessage(playerid, COLOR_YELLOW2, "Sorry, the Killer or Dieer ain't Online.");
    			    return 1;
    			}
			}
			else if(strcmp(x_nr,"delete",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cks delete [cknumber]");
					return 1;
				}
				ck = strval(tmp);
				if(ck < 1 || ck > 10) { SendClientMessage(playerid, COLOR_GREY, "   CK Number can't be below 1 or above 10 !"); return 1; }
				ck -= 1;
				ClearCK(ck);
				ck += 1;
				format(string, sizeof(string), "* You've cleared Character Kill nr: %d", ck);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid CK command name !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/ck", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLevel] < 5)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You must be Level 5 in order to request a Character Kill !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /ck [playerid/PartOfName]");
				return 1;
			}
	        giveplayerid = ReturnUser(tmp);
	        if(IsPlayerConnected(giveplayerid))
	        {
	            if(giveplayerid != INVALID_PLAYER_ID)
	            {
	                if(PlayerInfo[giveplayerid][pAdmin] >= 1)
	                {
	                    SendClientMessage(playerid, COLOR_GREY, "   Can't perform Character Kills on Admins !");
	                    return 1;
	                }
	                else if(PlayerInfo[giveplayerid][pLevel] < 5)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   The Player you want to Character Kill must be Level 5 !");
			            return 1;
			        }
					ABroadCast(COLOR_YELLOW, "* A New Character Kill request has come in, use /cks.", 3);
					new found = 0;
					for(new i = 0; i < sizeof(CKInfo); i++)
			    	{
			    	    if(found != 1)
			    	    {
							if(CKInfo[i][cUsed] != 1)
							{
							    found = 1;
							    GetPlayerName(playerid, sendername, sizeof(sendername));
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							    format(string, sizeof(string), "%s", sendername);
							    strmid(CKInfo[i][cSendername], string, 0, strlen(string), 255);
							    format(string, sizeof(string), "%s", giveplayer);
								strmid(CKInfo[i][cGiveplayer], string, 0, strlen(string), 255);
								CKInfo[i][cUsed] = 1;
								SaveCK();
							}
						}
			    	}
			    	if(found != 1)
			    	{
			    	    SendClientMessage(playerid, COLOR_YELLOW2, "Sorry, all the Character Kill Slots are used, try again later.");
			    	}
			    	else
			    	{
			    	    SendClientMessage(playerid, COLOR_YELLOW2, "Your Character Kill Request has been added to the list, you'll hear from an Admin soon.");
			    	}
			    	return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/givelicense", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAnInstructor(playerid))
	        {
	            if(PlayerInfo[playerid][pRank] < 3)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Only Rank 3 or higher can give away a License !");
	                return 1;
	            }
	            new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense [name] [playerid/PartOfName]");
				    SendClientMessage(playerid, COLOR_WHITE, "Available names: Driving, Flying, Sailing, Fishing, Weapon");
					return 1;
				}
			    if(strcmp(x_nr,"driving",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense driving [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* คุณได้ไห้ใบขับขี่ %s",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* นายทะเบียน %s ได้ไห้ใบขับขี่คุณ",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pCarLic] = 1;
					        return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"flying",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense flying [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* คุณได้ไห้ใบบิน %s",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* นายทะเบียน %s ได้ไห้ใบบินคุณ",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFlyLic] = 1;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"sailing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense sailing [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* คุณได้ไห้ใบขับเรือ %s",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* นายทะเบียน %s ได้ไห้ใบขับเรือคุณ",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pBoatLic] = 1;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"fishing",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense fishing [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* คุณได้ไห้ใบอณุญาติตกปลา %s",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* นายทะเบียน %s ได้ไห้ใบอณุญาติตกปลาคุณ",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFishLic] = 1;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"weapon",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /givelicense weapon [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            format(string, sizeof(string), "* คุณได้ไห้ใบอณุญาติพกปืนและขายอาวุธ %s",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* นายทะเบียน %s ได้ไห้ใบอณุญาติพกปืนและขายอาวุธคุณ",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pGunLic] = 1;
					        return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช้กรมการขนส่ง !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/startlesson", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAnInstructor(playerid))
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /startlesson [playerid/PartOfName]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* คุณได้เริ่มให้บทเรียนแก่ %s",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* นายทะเบียน %s ได้เริ่มให้บทเรียนแก่คุณ",sendername);
				        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        TakingLesson[giveplayerid] = 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not a School Instructor !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/stoplesson", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAnInstructor(playerid))
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /stoplesson [playerid/PartOfName]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(TakingLesson[giveplayerid] != 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   That player is not taking a Lesson !");
				            return 1;
				        }
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* คุณได้อยุดให้บทเรียนแก่ %s",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* นายทะเบียน %s ได้อยุดบทเรียนแก่คุณ",sendername);
				        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        TakingLesson[giveplayerid] = 0;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not a School Instructor !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/families", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    new number = 0;
		        for(new i = 0; i < sizeof(FamilyInfo); i++)
		        {
		            number ++;
		            format(string, sizeof(string), "Family %d| Name: %s | Leader: %s | Members: %d.",number,FamilyInfo[i][FamilyName],FamilyInfo[i][FamilyLeader],FamilyInfo[i][FamilyMembers]);
		            SendClientMessage(playerid, COLOR_WHITE, string);
		        }
		        return 1;
	        }
	        new family = strval(tmp);
	        if(family < 1 || family > 20) { SendClientMessage(playerid, COLOR_GREY, "   FamilyNr can't be below 1 or above 10 !"); return 1; }
			family -= 1;
			if(FamilyInfo[family][FamilyTaken] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That FamilyNr hasn't been Taken yet !");
			    return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(PlayerInfo[i][pFMember] == family)
			        {
			            GetPlayerName(i, giveplayer, sizeof(giveplayer));
			            format(string, sizeof(string), "* Family %d: %s | Rank: %d.",family,giveplayer,PlayerInfo[i][pRank]);
			            SendClientMessage(playerid, COLOR_GREY, string);
			        }
			    }
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/adjust", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFMember] == 255)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not in a Family !");
	            return 1;
	        }
	        new family = PlayerInfo[playerid][pFMember];
	        new wstring[128];
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s", sendername);
			strmid(wstring, string, 0, strlen(string), 255);
	        if(strcmp(FamilyInfo[family][FamilyLeader],wstring, true ) == 0 )
			{
			    new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /adjust [name]");
					SendClientMessage(playerid, COLOR_WHITE, "Available Names: Name, MOTD, Color, Spawn, Invite, Uninvite, Rank");
					return 1;
				}
			    if(strcmp(x_nr,"name",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /adjust Name [Family Name]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyName], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "You've adjusted your Family's Name.");
				}
				else if(strcmp(x_nr,"motd",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /adjust MOTD [Family MOTD Text]");
						return 1;
					}
					strmid(FamilyInfo[family][FamilyMOTD], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "You've adjusted your Family's MOTD.");
				}
				else if(strcmp(x_nr,"color",true) == 0)
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /adjust color [Family Color Sample: 0xFFFFFFAA]");
						return 1;
					}
					if(offset < 10)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Wrong Color number, take a look at the Sample ! (0xFFFFFFAA)");
					    return 1;
					}
					strmid(FamilyInfo[family][FamilyMOTD], result, 0, strlen(result), 255);
					SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "You've adjusted your Family's Color.");
				}
				else if(strcmp(x_nr,"spawn",true) == 0)
				{
				    GetPlayerPos(playerid, FamilyInfo[family][FamilySpawn][0],FamilyInfo[family][FamilySpawn][1],FamilyInfo[family][FamilySpawn][2]);
				    GetPlayerFacingAngle(playerid, FamilyInfo[family][FamilySpawn][3]);
				    FamilyInfo[family][FamilyInterior] = GetPlayerInterior(playerid);
				    SaveFamilies();
				    SendClientMessage(playerid, COLOR_WHITE, "You've adjusted your Family's Spawnplace.");
				}
				else if(strcmp(x_nr,"invite",true) == 0)
				{
				    if(FamilyInfo[family][FamilyMembers] >= 10)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Your Family has reached the Maximum of 10 Family Members, can't invite more !");
				        return 1;
				    }
					tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /adjust invite [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != 255)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   That player is already in a Family !");
					            return 1;
					        }
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* You've invited %s to join '%s'.",giveplayer, FamilyInfo[family][FamilyName]);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* %s has invited you to join '%s', you are now a Member of it.",sendername, FamilyInfo[family][FamilyName]);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFMember] = family;
					        PlayerInfo[giveplayerid][pRank] = 1;
					        FamilyInfo[family][FamilyMembers] ++;
					        SaveFamilies();
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"uninvite",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /adjust uninvite [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != family)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   That player is not in your Family !");
					            return 1;
					        }
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* You've kicked %s out of your Family.",giveplayer);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Family Leader %s has kicked your out of the Family.",sendername);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pFMember] = 255;
					        PlayerInfo[giveplayerid][pRank] = 0;
					        FamilyInfo[family][FamilyMembers] --;
					        SaveFamilies();
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"rank",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /adjust rank [RankNr] [playerid/PartOfName]");
					    return 1;
					}
					new rank = strval(tmp);
					if(rank < 1 || rank > 6) { SendClientMessage(playerid, COLOR_GREY, "   RankNr can't be below 1 or above 6 !"); return 1; }
					tmp = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /adjust rank [RankNr] [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayerInfo[giveplayerid][pFMember] != family)
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   That player is not in your Family !");
					            return 1;
					        }
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					        format(string, sizeof(string), "* You've given %s Rank %d.",giveplayer,rank);
					        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					        format(string, sizeof(string), "* Family Leader %s has given you Rank %d.",sendername,rank);
					        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        PlayerInfo[giveplayerid][pRank] = rank;
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Invalid Adjust name !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are not the Leader of your Family !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/giveturf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /giveturf [FamilyNr]");
					return 1;
				}
				new family = strval(tmp);
				if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   FamilyNr can't be below 1 or above 10 !"); return 1; }
				if(PlayerInfo[playerid][pLeader] == 5 && family > 5) { SendClientMessage(playerid, COLOR_GREY, "   La Cosa Nostra Leader can only take FamilyNr 1 till 5 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 6 && family < 6) { SendClientMessage(playerid, COLOR_GREY, "   Yakuza Leader can only take FamilyNr 6 till 10 !"); return 1; }
				family -= 1;
				if(FamilyInfo[family][FamilyTaken] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   That FamilyNr hasn't been Taken yet !");
				    return 1;
				}
				new Found = 0;
				for(new j=0; j<sizeof(TurfInfo);j++)
				{
					if(IsPlayerInTurf(playerid,j))
					{
					    Found = 1;
         				format(string, sizeof(string), "%s", FamilyInfo[family][FamilyName]);
						strmid(TurfInfo[j][zOwner], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", FamilyInfo[family][FamilyColor]);
						strmid(TurfInfo[j][zColor], string, 0, strlen(string), 255);
					}
				}
				if(Found)
				{
				    SaveTurfs();
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Turf adjusted.");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not in a Turf !");
				}
			}
			else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not the Leader of one of the Organisations !");
	            return 1;
	        }
		}
		return 1;
	}
	if(strcmp(cmd, "/allowcreation", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /allowcreation [FamilyNr] [playerid/PartOfName]");
					return 1;
				}
				new family = strval(tmp);
				if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   FamilyNr can't be below 1 or above 10 !"); return 1; }
				if(PlayerInfo[playerid][pLeader] == 5 && family > 5) { SendClientMessage(playerid, COLOR_GREY, "   La Cosa Nostra Leader can only take FamilyNr 1 till 5 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 6 && family < 6) { SendClientMessage(playerid, COLOR_GREY, "   Yakuza Leader can only take FamilyNr 6 till 10 !"); return 1; }
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /allowcreation [FamilyNr] [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        family -= 1;
				        if(FamilyInfo[family][FamilyTaken] == 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   That FamilyNr is already taken !" );
				            return 1;
				        }
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* You've made %s the Leader of FamilyNr %d.",giveplayer,family);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        if(PlayerInfo[playerid][pLeader] == 5)
				        {
				            format(string, sizeof(string), "* La Cosa Nostra Leader %s has made you a Family Leader of FamilyNr %d.",sendername,family);
				        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        }
				        else if(PlayerInfo[playerid][pLeader] == 6)
				        {
				            format(string, sizeof(string), "* Yakuza Leader %s has made you a Family Leader of FamilyNr %d.",sendername,family);
				        	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        }
				        format(string, sizeof(string), "%s",giveplayer);
				        strmid(FamilyInfo[family][FamilyLeader], string, 0, strlen(string), 255);
				        FamilyInfo[family][FamilyMembers] ++;
				        FamilyInfo[family][FamilyTaken] = 1;
				        PlayerInfo[giveplayerid][pFMember] = family;
				        SaveFamilies();
				    }
				}
				else
				{
                    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
                    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not the Leader of one of the Organisations !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/deletecreation", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] == 5 || PlayerInfo[playerid][pLeader] == 6)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /deletecreation [FamilyNr]");
					return 1;
				}
				new family = strval(tmp);
				if(family < 1 || family > 10) { SendClientMessage(playerid, COLOR_GREY, "   FamilyNr can't be below 1 or above 10 !"); return 1; }
				if(PlayerInfo[playerid][pLeader] == 5 && family > 5) { SendClientMessage(playerid, COLOR_GREY, "   La Cosa Nostra Leader can only take FamilyNr 1 till 5 !"); return 1; }
				else if(PlayerInfo[playerid][pLeader] == 6 && family < 6) { SendClientMessage(playerid, COLOR_GREY, "   Yakuza Leader can only take FamilyNr 6 till 10 !"); return 1; }
				family -= 1;
				if(FamilyInfo[family][FamilyTaken] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   That FamilyNr isn't taken !");
				    return 1;
				}
				ClearFamily(family);
				SaveFamilies();
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not the Leader of one of the Organisations !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/ram", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2|| PlayerInfo[playerid][pLeader] == 3||PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pMember] == 2|| PlayerInfo[playerid][pMember] == 3|| PlayerInfo[playerid][pMember] == 19|| PlayerInfo[playerid][pLeader] == 19)
            {
                for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
					    SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~r~Breached the door", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช้ ตำรวจ / FBI / นาวิกโยธิน !");
			    return 1;
            }
		}
		return 1;
	}
	if(strcmp(cmd, "/camera", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
            {
                if(!PlayerToPoint(8.0,playerid,211.6222,1811.9565,21.8594))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   คุณต้องอยู่ที่ห้องควบคุบ Area 51 เท่านั้นl !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /camera [number 1 - 6]  (6 = OFF)");
					return 1;
				}
				new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   Camera Number can't be below 1 or above 6 !"); return 1; }
				TogglePlayerControllable(playerid, 0);
				PlayerFrozened[playerid] = 1;
				GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
				if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
				else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
				else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
				else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
				else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
				else if(number == 6)
				{
				    MedicBill[playerid] = 0;
					TogglePlayerControllable(playerid, 1);
					PlayerFrozened[playerid] = 1;
					SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(playerid);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are not a Cop / Soldier !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/divorce",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMarried] < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You aren't Married !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /divorce [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
					    new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s", giveplayer);
						strmid(wstring, string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
						strmid(dstring, string, 0, strlen(string), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "* You've sent Divorce Papers to %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s just sent you his Divorce Papers (type /accept divorce) to accept.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        DivorceOffer[giveplayerid] = playerid;
					        return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   That player is not Married to you !");
						    return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/propose",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(ScriptMoney[playerid] < 100000)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   The Marriage & Reception costs $100000 !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMarried] > 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are already Married !");
				return 1;
	        }
	        if(PlayerInfo[playerid][pPhousekey] == 255)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You don't have a House to let your Wife / Husband live somewhere !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /propose [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pMarried] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   That player is already Married !");
			            return 1;
			        }
			        if(PlayerInfo[giveplayerid][pPhousekey] != 255)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   That player has a House, can't be Married !");
			            return 1;
			        }
			        if(PlayerInfo[giveplayerid][pPbiskey] != 255)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   That player has a Business, can't be Married !");
			            return 1;
			        }
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* You proposed to %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s just proposed to you (type /accept marriage) to accept.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        ProposeOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/witness",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /witness [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Propose to yourself!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* You requested %s to be your Marriage Witness.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s just requested you to be his Marriage Witness (type /accept witness) to accept.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        MarryWitnessOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/irc",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: (/irc join [channelnr] or /irc join [channelnr] [password])  (/irc Leave)  (/irc Admins)");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /irc [name] [channelnr]");
				SendClientMessage(playerid, COLOR_WHITE, "Available names: MOTD, Password, NeedPass, Lock, Kick, Status");
				return 1;
			}
		    if(strcmp(x_nr,"join",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /irc join [channelnr] or /irc join [channelnr] [password]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
			    if(IRCInfo[channel][iLock] == 0)
			    {
			        if(IRCInfo[channel][iNeedPass] == 0)
			        {
			            JoinChannelNr(playerid, channel);
				    }
				    else
				    {
				        tmp = strtok(cmdtext, idx);
				        if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_WHITE, "There's a password required to join this Channel.");
							SendClientMessage(playerid, COLOR_WHITE, "USAGE: /irc join [channelnr] [password]");
							return 1;
						}
						JoinChannel(playerid,channel,tmp);
				    }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   That Channel is Locked, please choose a different one !");
				    return 1;
			    }
			}
			else if(strcmp(x_nr,"status",true) == 0)
			{
			    for(new i = 0; i < sizeof(IRCInfo); i++)
			    {
			        format(string, sizeof(string), "Channel %d: %d Players Connected.",i + 1, IRCInfo[i][iPlayers]);
				    SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"password",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /irc password [channelnr] [password]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /irc password [channelnr] [password]");
					    return 1;
					}
					strmid(IRCInfo[channel][iPassword], tmp, 0, strlen(tmp), 255);
					format(string, sizeof(string), "You've changed the IRC Channel's Password to: %s.",IRCInfo[channel][iPassword]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of that Channel !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"needpass",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /irc needpass [channelnr]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    if(IRCInfo[channel][iNeedPass] != 0)
				    {
				        IRCInfo[channel][iNeedPass] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, "Players won't have to fill in a password in order to join the IRC Channel now.");
				    }
					else
					{
					    IRCInfo[channel][iNeedPass] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "Players must fill in a password in order to join the IRC Channel now.");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of that Channel !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"lock",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /irc lock [channelnr]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    if(IRCInfo[channel][iLock] != 0)
				    {
				        IRCInfo[channel][iLock] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, "You've unlocked the IRC Channel.");
				    }
					else
					{
					    IRCInfo[channel][iLock] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "You've locked the IRC Channel.");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of that Channel !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"motd",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /irc motd [channelnr] [motdtext]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   Channel Number can't be below 1 or above 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /irc motd [motdtext]");
						return 1;
					}
					strmid(IRCInfo[channel][iMOTD], result, 0, strlen(result), 255);
					SendClientMessage(playerid, COLOR_YELLOW, "You've adjusted the IRC Channel's MOTD Text.");
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of that Channel !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"leave",true) == 0)
			{
			    if(PlayersChannel[playerid] < 999)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        format(string, sizeof(string), "* %s has left the Channel.", sendername);
			        SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
			        IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
			        PlayersChannel[playerid] = 999;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You are not in an IRC Channel !");
			        return 1;
			    }
			}
			else if(strcmp(x_nr,"admins",true) == 0)
			{
				for(new i = 0; i < sizeof(IRCInfo); i++)
			    {
				    format(string, sizeof(string), "Channel %d: %s.", i + 1, IRCInfo[i][iAdmin]);
				    SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"kick",true) == 0)
			{
			    if(PlayersChannel[playerid] == 999)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You are not in an IRC Channel !");
			        return 1;
			    }
			    new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[PlayersChannel[playerid]][iAdmin],wstring, true ) == 0 )
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /irc kick [playerid/PartOfName]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayersChannel[giveplayerid] == PlayersChannel[playerid])
					        {
					            GetPlayerName(playerid, sendername, sizeof(sendername));
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "* You've kicked %s out of your IRC Channel.",giveplayer);
					            SendClientMessage(playerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* You've been kicked out of the IRC Channel by Channel Admin: %s.",sendername);
					            SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* %s has left the Channel (Kicked).", sendername);
						        SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
					            IRCInfo[PlayersChannel[giveplayerid]][iPlayers] -= 1;
					            PlayersChannel[giveplayerid] = 999;
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   That player is not in your IRC Channel !");
							    return 1;
					        }
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
                }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not the Admin of the Channel !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid IRC Channel Number ! ");
			    return 1;
			}
		}
		return 1;
 	}
 	if(strcmp(cmd,"/i",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayersChannel[playerid] == 999)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not in an IRC Channel !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /i [irc chat]");
				return 1;
			}
			format(string, sizeof(string), "** IRC %s: %s. **", sendername, result);
			SendIRCMessage(PlayersChannel[playerid], COLOR_YELLOW2, string);
	    }
	    return 1;
	}
	if(strcmp(cmd,"/mission",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
			if(!PlayerToPoint(3.0,playerid,1381.0413,-1088.8511,27.3906))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are not at the Bill Board !");
			    return 1;
			}
			if(MissionPlayable == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   No Mission has been Activated !");
			    return 1;
			}
			if(PlayerInfo[playerid][pMissionNr] == MissionPlayable)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You've already completed the Active Mission !");
			    return 1;
			}
			RingTone[playerid] = 20;
			PlayerOnMission[playerid] = PlayMission[kNumber];
			MissionCheckpoint[playerid] = 1;
			format(string, sizeof(string), "~w~Mission started: ~n~~r~%s", PlayMission[kTitle]);
			GameTextForPlayer(playerid, string, 5000, 3);
			format(string, sizeof(string), "%s", PlayMission[kText1]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string, sizeof(string), "%s", PlayMission[kText2]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string, sizeof(string), "%s", PlayMission[kText3]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			if(PlayMission[kToggle] == 1)
			{
				SetPlayerCheckpoint(playerid, PlayMission[kCP1][0], PlayMission[kCP1][1], PlayMission[kCP1][2], 8);
			}
        }
        return 1;
    }
	if(strcmp(cmd, "/buylicense", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!PlayerToPoint(100, playerid,-2032.7687,-117.4139,1035.1719))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ โรงเรียน สอนขับรถ!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /buylicense [numbers]");
				SendClientMessage(playerid, COLOR_GRAD2, "| 1 ใบอณุญาติขับขี่รถยนต์ $1000 (ต้องสอบก่อน)");
				SendClientMessage(playerid, COLOR_GRAD2, "| 2 ใบอณุญาติขับขี่เครื่องบิน $10000");
				SendClientMessage(playerid, COLOR_GRAD2, "| 3 ใบอณุญาติขับขี่เรือ $7000");
				SendClientMessage(playerid, COLOR_GRAD2, "| 4 ใบอณุญาติตกปลา $5000");
				SendClientMessage(playerid, COLOR_GRAD2, "| 5 ใบอณุญาติพกปืน $20000");
				return 1;
			}
 		}
		new Licenses = strval(tmp);
		if (Licenses == 1 && ScriptMoney[playerid] > 999)
			{
		    	if(PlayerInfo[playerid][pCarLic] != 0)
		    	{
				SendClientMessage(playerid, COLOR_LIGHTRED, " คุณใบอณุญาติขับขี่เครื่องบินอยู่แล้ว ไม่สามารถซื้อได้อีก !");
				return 1;
		    	}
				SetPlayerInterior(playerid,3);
				SetPlayerPos(playerid,-2022.5515,-116.7832,1035.1719);
				SetPlayerFacingAngle(playerid, 271.3357);
				ClearChatbox(playerid, 8);
				IO1(playerid);
				TogglePlayerControllable(playerid, 0);
				PlayerFrozened[playerid] = 1;
				SetTimerEx("IO2", 20000, 0, "d", playerid);
				SetTimerEx("IO3", 40000, 0, "d", playerid);
				SetTimerEx("IO4", 60000, 0, "d", playerid);
				SetTimerEx("IO5", 80000, 0, "d", playerid);
				SetTimerEx("IO6", 100000, 0, "d", playerid);
			    return 1;
			}
		if (Licenses == 2 && ScriptMoney[playerid] > 9999)
		{
		    if(PlayerInfo[playerid][pFlyLic] != 0)
		    {
				SendClientMessage(playerid, COLOR_LIGHTRED, " คุณใบอณุญาติขับขี่เครื่องบินอยู่แล้ว ไม่สามารถซื้อได้อีก !");
				return 1;
		    }
		    else
		    {
				SendClientMessage(playerid, COLOR_OOC, " คุณได้รับใบอณุญาติขับขี่เครื่องบินแล้ว !");
				SafeGivePlayerMoney(playerid,-10000);
   		 	}
			PlayerInfo[playerid][pFlyLic] = 1;
			SendClientMessage(playerid, COLOR_WHITE, " โปรดพิม /licenses เพื่อเช็ค");
		    return 1;
		}
		if (Licenses == 3 && ScriptMoney[playerid] > 6999)
		{
		    if(PlayerInfo[playerid][pBoatLic] != 0)
		    {
				SendClientMessage(playerid, COLOR_LIGHTRED, " คุณใบอณุญาติขับขี่เรืออยู่แล้ว ไม่สามารถซื้อได้อีก !");
				return 1;
		    }
		    else
		    {
				SendClientMessage(playerid, COLOR_OOC, " คุณได้รับใบอณุญาติขับขี่เรือปลาแล้ว !");
				SafeGivePlayerMoney(playerid,-7000);
   		 	}
			PlayerInfo[playerid][pBoatLic] = 1;
			SendClientMessage(playerid, COLOR_WHITE, " โปรดพิม /licenses เพื่อเช็ค");
		    return 1;
		}
		if (Licenses == 4 && ScriptMoney[playerid] > 4999)
		{
		    if(PlayerInfo[playerid][pFishLic] != 0)
		    {
				SendClientMessage(playerid, COLOR_LIGHTRED, " คุณมีใบอณุญาติตกปลาอยู่แล้ว ไม่สามารถซื้อได้อีก !");
				return 1;
		    }
		    else
		    {
				SendClientMessage(playerid, COLOR_OOC, " คุณได้รับใบอณุญาติตกปลาแล้ว !");
				SafeGivePlayerMoney(playerid,-5000);
   		 	}
			PlayerInfo[playerid][pFishLic] = 1;
			SendClientMessage(playerid, COLOR_WHITE, " โปรดพิม /licenses เพื่อเช็ค");
		    return 1;
		}
		if (Licenses == 5 && ScriptMoney[playerid] > 19999)
		{
		    if(PlayerInfo[playerid][pGunLic] != 0)
		    {
				SendClientMessage(playerid, COLOR_LIGHTRED, " คุณมีใบอณุญาติพกปืนอยู่แล้ว ไม่สามารถซื้อได้อีก !");
				return 1;
		    }
		    else
		    {
				SendClientMessage(playerid, COLOR_OOC, " คุณได้รับใบอณุญาติพกปืนแล้ว !");
				SafeGivePlayerMoney(playerid,-20000);
   		 	}
			PlayerInfo[playerid][pGunLic] = 1;
			SendClientMessage(playerid, COLOR_WHITE, " โปรดพิม /licenses เพื่อเช็ค");
		    return 1;
		}
		if (Licenses != 1 && Licenses != 2 && Licenses != 3 && Licenses != 4 && Licenses != 5)
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, " ID ใบขับขี่ผิดพลาด");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, " คุณมีเงินไม่พอที่จะซื้อใบอณุญาติต่างๆได้!");
			return 1;
		}
    	}
	if(strcmp(cmd,"/settax",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   You are not the Mayor !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /settax [ammount]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   Tax may not be below 1 or above 5000 !"); return 1; }
			Tax = moneys;
			SaveStuff();
			format(string, sizeof(string), "* The Tax is $%d per player, from now on.", Tax);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    }
	    return 1;
	}
	if(strcmp(cmd, "/bc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 0)
			{
            SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   ขอบคุณที่ช่วยเซิบเวอร์");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
            DestroyVehicle(GetPlayerVehicleID(playerid));
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่ Admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/vid", true) == 0)
{
new vid;
vid = GetPlayerVehicleID(playerid);
if(PlayerInfo[playerid][pAdmin] >= 1)
{
format(string, sizeof(string), "Vehicle ID: %d",vid);
SendClientMessage(playerid,COLOR_RED,string);
}
return 1;
}
	if(strcmp(cmd,"/givetax",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLeader] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   You are not the Mayor !");
				return 1;
	        }
	        if(Tax < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   There is no Money left in the Tax Fault !");
				return 1;
			}
			new Cops = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(gTeam[i] == 2 && PlayerInfo[i][pMember] == 1)
			        {
			            Cops += 1;
			        }
			    }
			}
			if(Cops >= 1)
			{
			    new value = Tax / 2;
			    new price = value / Cops;
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(gTeam[i] == 2 && PlayerInfo[i][pMember] == 1)
				        {
				            format(string, sizeof(string), "* You received $%d from the Tax Fault from the Mayor.",price);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
							SafeGivePlayerMoney(i, price);
							Tax -= price;
				        }
				    }
				}
				SaveStuff();
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   There are no Cops Online at the moment !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/read",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /read [name]");
				SendClientMessage(playerid, COLOR_GREY, "Available names: Paper, TestPaper");
				return 1;
			}
	        if(strcmp(x_job,"paper",true) == 0)
			{
			    if(GotPaper[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "|_______________[Agency] : Newspaper _______________|");
			        format(string, sizeof(string), "| %s  |  By News Reporter: %s.",Paper[playerid][pTitle],Paper[playerid][pMaker]);
			        SendClientMessage(playerid, COLOR_GREEN, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine1]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine2]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine3]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine4]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine5]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine6]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",Paper[playerid][pLine7]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You don't have a Newspaper !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"testpaper",true) == 0)
			{
			    if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			    {
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /read testpaper [papernr]");
						return 1;
					}
					new paper = strval(tmp);
					if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   Paper Number can't be below 1 or above 10 !"); return 1; }
					paper -= 1;
					if(PaperInfo[paper][PaperUsed] == 0)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   There is no Newspaper written on that number !");
					    return 1;
					}
			        SendClientMessage(playerid, COLOR_WHITE, "|_______________ [Agency] : Newspaper _______________|");
			        format(string, sizeof(string), "| %s  |  By News Reporter: %s.",PaperInfo[paper][PaperTitle],PaperInfo[paper][PaperMaker]);
			        SendClientMessage(playerid, COLOR_GREEN, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText1]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText2]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText3]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText4]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText5]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText6]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        format(string, sizeof(string), "%s",PaperInfo[paper][PaperText7]);
			        SendClientMessage(playerid, COLOR_GREY, string);
			        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________________________|");
			        return 1;
				}
				else
				{
        			SendClientMessage(playerid, COLOR_GREY, "   You are not a News Reporter !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /read testpaper [papernr]");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/deliver", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] == 15 || PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	        {
	            if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3)
	            {
	                if(!PlayerToPoint(8.0,playerid,96.9123,1920.5088,18.1473))
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You are not at the Area51 Delivery Gate !");
					    return 1;
					}
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /deliver [playerid/PartOfName]");
						return 1;
					}
			        giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Can't throw yourself into Fort DeMorgan !"); return 1; }
					        if(WantedLevel[giveplayerid] < 1) { SendClientMessage(playerid, COLOR_GREY, "   The player needs at least Wanted Level 1 to be thrown into Fort DeMorgan !"); return 1; }
					        if(gTeam[giveplayerid] == 2 || PlayerInfo[giveplayerid][pLeader] == 6 || PlayerInfo[giveplayerid][pLeader] == 10) { return 1; }
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* You've brought %s to Fort DeMorgan.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s brought you to Fort DeMorgan.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~w~Welcome to ~n~~r~Fort DeMorgan", 5000, 3);
								WantedPoints[giveplayerid] = 0;
								WantedLevel[giveplayerid] = 0;
								SetPlayerStar(giveplayerid);
								PlayerInfo[giveplayerid][pJailed] = 2;
								PlayerInfo[giveplayerid][pJailTime] = 3600;
								SetPlayerPos(giveplayerid, 107.2300,1920.6311,18.5208);
								SetPlayerWorldBounds(giveplayerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
					    	return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}

	            }
	            else if(PlayerInfo[playerid][pJob] == 15)
	            {
			        if(BringingPaper[playerid] != 1)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   You haven't picked up a Newspaper from the News Reporters Building yet !");
			            return 1;
			        }
			        tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /deliver [playerid/PartOfName]");
						return 1;
					}
			        giveplayerid = ReturnUser(tmp);
					if (IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
							if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
								GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* You offerd one of your Newspapers to %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Paper Boy %s wants to give you a Newspaper (use /accept paper, to accept).", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								PaperOffer[giveplayerid] = playerid;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
					    	return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are not a Paper Boy !");
	            return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bring", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 15)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not a Paper Boy !");
	            return 1;
	        }
			if(PlayerToPoint(3.0,playerid,-2050.8962,460.0262,35.1719))
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /bring [papernr]");
					return 1;
				}
		        new paper = strval(tmp);
		        if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   Paper Number can't be below 1 or above 10 !"); return 1; }
				paper -= 1;
				if(PaperInfo[paper][PaperUsed] == 0)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   There is no written Newspaper on that number !");
				    return 1;
				}
		        GetPlayerName(playerid, sendername, sizeof(sendername));
		        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		        format(string, sizeof(string), "* You can now deliver Newspapers to people, Newspaper: %s, By: %s.",PaperInfo[paper][PaperTitle],PaperInfo[paper][PaperMaker]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperTitle]);
				strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperMaker]);
				strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText1]);
				strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText2]);
				strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText3]);
				strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText4]);
				strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText5]);
				strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText6]);
				strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s", PaperInfo[paper][PaperText7]);
				strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
				BringingPaper[playerid] = 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are not at the News Reporter Building !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/papers", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pJob] == 15)
	        {
				if(PlayerToPoint(3.0,playerid,-2050.8962,460.0262,35.1719))
				{
				    new number = 0;
				    for(new i = 0; i < sizeof(PaperInfo); i++)
				    {
				        number ++;
				        if(PaperInfo[i][PaperUsed] == 1)
				    	{
				        	format(string, sizeof(string), "|%d| Newspaper: %s, By: %s",number,PaperInfo[i][PaperTitle],PaperInfo[i][PaperMaker]);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not at the News Reporter Building !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are not a Paper Boy / News Reporter !");
	            return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/paper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
	        {
	            if(!PlayerToPoint(3.0,playerid,-2050.8962,460.0262,35.1719))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not at the News Reporter Building !");
				    return 1;
				}
				new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /paper write [papernr] or /paper delete [papernr]");
				    return 1;
				}
			    if(strcmp(x_nr,"write",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /paper write [papernr]");
					    return 1;
					}
					new paper = strval(tmp);
					if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   Paper Number can't be below 1 or above 10 !"); return 1; }
					paper -= 1;
					if(PaperInfo[paper][PaperUsed] == 1)
					{
					    SendClientMessage(playerid, COLOR_GREY, "   There is already a Newspaper on that number !");
					    return 1;
					}
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You are producing a new Newspaper.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* Everything you type now will be added to the Newspaper, you have 7 lines available.");
					SendClientMessage(playerid, COLOR_LIGHTRED, "* Please type in the Title of your Newspaper.");
					WritingPaper[playerid] = 1;
					WritingPaperNumber[playerid] = paper;
					WritingLine[playerid] = 1;
				}
				else if(strcmp(x_nr,"delete",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] >= 4)
				    {
				        tmp = strtok(cmdtext, idx);
					    if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /paper delete [papernr]");
						    return 1;
						}
						new paper = strval(tmp);
						if(paper < 1 || paper > 10) { SendClientMessage(playerid, COLOR_GREY, "   Paper Number can't be below 1 or above 10 !"); return 1; }
						paper -= 1;
						ClearPaper(paper);
						new number = paper; number += 1;
						format(string, sizeof(string), "You've deleted Newspaper %d.",number);
						SendClientMessage(playerid, COLOR_YELLOW, string);
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   You need Rank 4 in order to Delete Newspapers !");
				        return 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USAGE: /paper write [papernr] or /paper delete [papernr]");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You are not a News Reporter !");
	            return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/spawnchange", true) == 0 || strcmp(cmd, "/sc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pPhousekey] != 255)
	        {
	            if(Spectate[playerid] != 255 && PlayerInfo[playerid][pAdmin] < 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You are Spectating, can't change the Spawn right now !");
	                return 1;
	            }
	            if(SpawnChange[playerid])
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   คุณได้เปลี่ยนจุดเกิดเป็นที่ทำงาน ของคุณ !");
	                SpawnChange[playerid] = 0;
	                if(IsAnInstructor(playerid))
		            {
		                if(SchoolSpawn[playerid] == 0)
		                {
		                    SchoolSpawn[playerid] = 1;
		                    SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Flying School !");
		                }
		                else if(SchoolSpawn[playerid] == 1)
		                {
		                    SchoolSpawn[playerid] = 0;
		                    SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Driving School !");
		                }
		            }
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   คุณได้เปลี่ยนจุดเกิดเป็นที่บ้าน/บ้านเช่า ของคุณ !");
	                SpawnChange[playerid] = 1;
	            }
	        }
	        else
	        {
	            if(IsAnInstructor(playerid))
	            {
	                if(SchoolSpawn[playerid] == 0)
	                {
	                    SchoolSpawn[playerid] = 1;
	                    SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Flying School !");
	                }
	                else if(SchoolSpawn[playerid] == 1)
	                {
	                    SchoolSpawn[playerid] = 0;
	                    SendClientMessage(playerid, COLOR_GREY, "   You will now spawn at the Driving School !");
	                }
	            }
	            else
	            {
		            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่มีบ้าน/บ้านเช่า !");
		            return 1;
	            }
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/report", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /report [text]");
				return 1;
			}
			format(string, sizeof(string), " รายงานจาก %s: %s", sendername, (result));
			ABroadCast(COLOR_YELLOW,string,1);
			SendClientMessage(playerid, COLOR_YELLOW, " รายงานของคุณได้ถูกส่งไปให้ ADMIN ที่ Online รับรู้เรียบร้อยแล้ว");
	    }
	    return 1;
	}
	if(strcmp(cmd, "/clothes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] >= 1)
	        {
	            if(IsAtClothShop(playerid))
				{
				    if(PlayerInfo[playerid][pMember] == 1) { ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 280); }
					else if(PlayerInfo[playerid][pMember] == 2) { ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }
					else if(PlayerInfo[playerid][pMember] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
					else if(PlayerInfo[playerid][pMember] == 4) { ChosenSkin[playerid] = 70; SetPlayerSkin(playerid, 70); }
					else if(PlayerInfo[playerid][pMember] == 5) { ChosenSkin[playerid] = 258; SetPlayerSkin(playerid, 120); }
					else if(PlayerInfo[playerid][pMember] == 6) { ChosenSkin[playerid] = 120; SetPlayerSkin(playerid, 258); }
					else if(PlayerInfo[playerid][pMember] == 7) { ChosenSkin[playerid] = 66; SetPlayerSkin(playerid, 66); }
					else if(PlayerInfo[playerid][pMember] == 8) { ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
					else if(PlayerInfo[playerid][pMember] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
					else if(PlayerInfo[playerid][pMember] == 10) { ChosenSkin[playerid] = 255; SetPlayerSkin(playerid, 255); }
					else if(PlayerInfo[playerid][pMember] == 11) { ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }
					else if(PlayerInfo[playerid][pMember] == 12) { ChosenSkin[playerid] = 105; SetPlayerSkin(playerid, 105); }
					else if(PlayerInfo[playerid][pMember] == 13) { ChosenSkin[playerid] = 102; SetPlayerSkin(playerid, 102); }
					else if(PlayerInfo[playerid][pMember] == 14) { ChosenSkin[playerid] = 108; SetPlayerSkin(playerid, 108); }
					else if(PlayerInfo[playerid][pMember] == 15) { ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 114); }
					else if(PlayerInfo[playerid][pMember] == 16) { ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
					else if(PlayerInfo[playerid][pMember] == 17) { ChosenSkin[playerid] = 124; SetPlayerSkin(playerid, 124); }
					else { return 1; }
					GetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
					ChangePos2[playerid][0] = GetPlayerInterior(playerid);
					ChangePos2[playerid][1] = 1;
				    SetPlayerInterior(playerid,0);
					new rand = random(sizeof(gInviteSpawns));
					SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
					SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
					SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
					SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
					TogglePlayerControllable(playerid, 0);
					PlayerFrozened[playerid] = 1;
					SelectChar[playerid] = 255;
					SelectCharID[playerid] = PlayerInfo[playerid][pMember];
					SelectCharPlace[playerid] = 1;
					PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
			    	PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
				    SendClientMessage(playerid, COLOR_LIGHTRED, "* พิมพ์ 'next' เพื่อที่จะดูตัวละครถัดไป");
				    SendClientMessage(playerid, COLOR_LIGHTRED, "* ถ้าคุณต้องการใช้ตัวละครตัวนั้น, พิมพ์ 'done 2 ครั้ง");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   คุณไม่ได้อยู่ที่ร้านเปลี่ยนเสื้อผ้า !");
					return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid,COLOR_GREY, "   คุณไม่ได้อยู่ในองค์กรใดๆทั้งสิ้น !");
	            return 1;
	        }
	    }
	    return 1;
	}
//spy//
	if(strcmp(cmd, "/spy",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
				SendClientMessage(playerid, COLOR_RED, "|คำสั่งเปลี่ยนชุดเป็นสายลับ|");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy1 ชุดนักออกกำลังกาย");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy2 ชุดคนไม่ใส่เสื้อ");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy3 ชุดพนักงานผู้หญิง");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy4 ชุดคนแก่");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy5 ชุดสวาท");
	        }
		return 1;
	}
	if(strcmp(cmd, "/spy1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 99); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}
	if(strcmp(cmd, "/spy2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 45); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}
	if(strcmp(cmd, "/spy3", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 150); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}
	if(strcmp(cmd, "/spy4", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 133); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}
	if(strcmp(cmd, "/spy5", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 285); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}
	//ciaspy
/*	if(strcmp(cmd, "/spy",true)==0)
    {
        if(IsPlayerConnected(playerid))
        {
				SendClientMessage(playerid, COLOR_RED, "|คำสั่งเปลี่ยนชุดเป็นสายลับ|");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy1 ชุดนักออกกำลังกาย");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy2 ชุดคนไม่ใส่เสื้อ");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy3 ชุดพนักงานผู้หญิง");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy4 ชุดคนแก่");
		  		SendClientMessage(playerid, COLOR_GREY, "| /spy5 ชุดสวาท");
	        }
		return 1;
	}
	if(strcmp(cmd, "/spy1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 99); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}
	if(strcmp(cmd, "/spy2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 45); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}
	if(strcmp(cmd, "/spy3", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 150); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}
	if(strcmp(cmd, "/spy4", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 133); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}
	if(strcmp(cmd, "/spy5", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2)
	        {
				    SetPlayerSkin(playerid, 285); }
            }
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ FBI !");
	        }
	    return 1;
	}*/
	

//---------------------[SWAT]-----------------------//
	if(strcmp(cmd, "/aswat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)
			{
				if(PlayerInfo[playerid][pRank] < 5)
				{
					SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมี ยศ 5 ขึ้นไป ถึงจะใช้คำสั่งนี้ได้ !");
					SendClientMessage(playerid, COLOR_GREY, "   สำหรับปฏิบัติการเคอฟิวล์เท่านั้น!");
					return 1;
				}
				aswat = 1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "** เจ้าหน้าที่ %s ได้ออกคำสั่งให้สวมชุดปฎิบัติการ S.W.A.T ได้แล้ว **", sendername);
				SendRadioMessage(1, TEAM_BLUE_COLOR, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่ตำรวจ!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/dswat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 1)
			{
				if(PlayerInfo[playerid][pRank] < 5)
				{
					SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมี ยศ 5 ขึ้นไป ถึงจะใช้คำสั่งนี้ได้ !");
					return 1;
				}
				aswat = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "** เจ้าหน้าที่ %s ได้ยกเลิกคำสั่งให้สวมชุดปฎิบัติการ S.W.A.T **", sendername);
				SendRadioMessage(1, TEAM_BLUE_COLOR, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ใช่ตำรวจ!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/swat", true) == 0)
	{
        if(PlayerInfo[playerid][pMember]==1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if(swat[playerid] == 0)
            {
				if(aswat == 1&& curfew==1)
				{
					if (PlayerToPoint(3, playerid,-1616.2903,683.4705,7.1875)||PlayerToPoint(3, playerid,1579.7631,-1636.1940,13.5595))
					{
    	 				ResetPlayerWeapons(playerid);
						swat[playerid] = 1;
						SetPlayerSkin(playerid, 285);
						GivePlayerWeapon(playerid, 31, 500);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 29, 600);
						GivePlayerWeapon(playerid, 27, 307);
						GivePlayerWeapon(playerid, 24, 307);
						GivePlayerWeapon(playerid, 16, 5);
						GivePlayerWeapon(playerid, 44, 1);
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string,sizeof(string), "* %s ได้ใส่ชุดเกราะหนักและปืนพร้อมลูกกะสุนจำนวนหนึ่งออกจากล็อกเกอร์", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
				else { SendClientMessage(playerid, COLOR_GREY, " คำสั่งนี้ยังไม่อณุญาติให้ใช้ได้ในตอนนี้ !"); }
			}
			else
			{
				if(PlayerInfo[playerid][pLeader] == 1) { SetPlayerSkin(playerid, 281); }
				if(PlayerInfo[playerid][pRank]==5) { SetPlayerSkin(playerid, 281); }
				if(PlayerInfo[playerid][pRank]==4) { SetPlayerSkin(playerid, 280); }
				if(PlayerInfo[playerid][pRank]==3) { SetPlayerSkin(playerid, 265); }
				if(PlayerInfo[playerid][pRank]==2) { SetPlayerSkin(playerid, 267); }
				if(PlayerInfo[playerid][pRank]==1) { SetPlayerSkin(playerid, 266); }
				swat[playerid] = 0;
				ResetPlayerWeapons(playerid);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string,sizeof(string), "* %s ได้ถอดชุดเกราะหนักและปืนพร้อมลูกกะสุนจำนวนหนึ่งเก็บเข้าล็อกเกอร์", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		if(PlayerInfo[playerid][pLeader] >= 2 || PlayerInfo[playerid][pMember] >= 2)
 		{
	       	SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช้ ตำรวจ !");
		}
		return 1;
	}
	if(strcmp(cmd, "/lotto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pLottoNr] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณได้ซื้อล๊อตตารี่ไปแล้ว !");
	            return 1;
	        }
	        if(!PlayerToPoint(5, playerid, -2034.7958,-100.9361,35.1641) && !PlayerToPoint(5, playerid, -2657.3792,1341.9497,7.0430))
			{
			    SendClientMessage(playerid, COLOR_GREY, " กรุณาไปที่จุดขายตัวล๊อตเตอรี่ที่ตู้ATM");
	            return 1;
	        }
	        if(ScriptMoney[playerid] < 1500)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมีเงิน $1500 ถึงจะซื้อล๊อตตารี่ได้ !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE,"USAGE: /lotto [number]");
				return 1;
			}
			new lottonr = strval(tmp);
			if(lottonr < 1 || lottonr > 50) { SendClientMessage(playerid, COLOR_GREY, "   มีล๊อตตารี่เลข 1 - 50 เท่านั้น !"); return 1; }
			format(string, sizeof(string), "* You bought a Lottery Ticket with number: %d.", lottonr);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			SafeGivePlayerMoney(playerid, - 1500);
			PlayerInfo[playerid][pLottoNr] = lottonr;
	    }
	    return 1;
	}

	if(strcmp(cmd, "/take", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19|| PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
	        {
	            if(PlayerInfo[playerid][pRank] < 2)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   คุณต้องมี ยศ 2 ขึ้นไป ถึงจะใช้คำสั่งนี้ได้ !");
	                return 1;
	            }
	            new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ คำสั่งยึดของ __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take [สิ่งของที่ยึด] [playerid/PartOfName]");
			  		SendClientMessage(playerid, COLOR_GREY, "สิ่งของที่ยึดได้: ใบขับขี่, ใบบิน, ใบขับเรือ");
			  		SendClientMessage(playerid, COLOR_GREY, "สิ่งของที่ยึดได้: ใบขายอาวุธ, อาวุธ, สารเสพติด, ดินปืน");
					SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________________|");
					return 1;
				}
			    if(strcmp(x_nr,"ใบขับขี่",true) == 0||strcmp(cmd, "dl", true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take ใบขับขี่ [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						        GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* คุณได้ยึดใบขับขี่ %s", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้ยึดใบขับขี่ ของคุณ", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pCarLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่ได้ออนไลน์ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"ใบบิน",true) == 0||strcmp(cmd, "fl", true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take ใบบิน [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						        GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* คุณได้ยึดใบบิน %s", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้ยึดใบบิน ของคุณ ", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่ได้ออนไลน์ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"ใบขายอาวุธ",true) == 0||strcmp(cmd, "gl", true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take ใบขายอาวุธ [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						        GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* คุณได้ยึดใบขายอาวุธ %s", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้ยึดใบขายอาวุธ ของคุณ", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pGunLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่ได้ออนไลน์ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"ใบขับเรือ",true) == 0||strcmp(cmd, "bl", true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take ใบขับเรือ [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						        GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* คุณได้ยึดใบขับเรือ %s", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้ยึบใบขับเรือ ของคุณ", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pBoatLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่ได้ออนไลน์ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"อาวุธ",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take อาวุธ [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						        GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* คุณได้ยึดอาวุธของ %s", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้ยึดอาวุธที่อยู่ในตัวทั้งหมด ของคุณ", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        ResetPlayerWeapons(giveplayerid);
						        PlayerInfo[giveplayerid][pGun1] = 0; PlayerInfo[giveplayerid][pAmmo1] = 0;
						        PlayerInfo[giveplayerid][pGun2] = 0; PlayerInfo[giveplayerid][pAmmo2] = 0;
						        PlayerInfo[giveplayerid][pGun3] = 0; PlayerInfo[giveplayerid][pAmmo3] = 0;
						        PlayerInfo[giveplayerid][pGun4] = 0; PlayerInfo[giveplayerid][pAmmo4] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่ได้ออนไลน์ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"สารเสพติด",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take สารเสพติด [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						        GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* คุณได้ยึดสารเสพติด %s", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้ยึดสารเสพติดที่อยู่ในตัวทั้งหมด ของคุณ", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pDrugs] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่ได้ออนไลน์ !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"ดินปืน",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /take ดินปืน [playerid/PartOfName]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						        GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* คุณได้ยึดดินปืน %s", giveplayer);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* เจ้าหน้าที่ %s ได้ยึดดินปืนที่อยู่ในตัวทั้งหมด ของคุณ", sendername);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pMats] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่ได้ออนไลน์ !");
					    return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   ชื่อสิ่งที่จะยึด ผิดพลาด !");
					return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช้ตำรวจ !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/drink", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAtBar(playerid))
	        {
	            if(PlayerDrunk[playerid] < 10)
	            {
	                new Float:health;
	                new x_nr[256];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SendClientMessage(playerid, COLOR_WHITE, "|__________________ เครื่องดื่ม __________________|");
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /drink [ชื่อเครื่องดื่ม]");
				  		SendClientMessage(playerid, COLOR_GREY,  "names: Jhonny ($150)");
				  		SendClientMessage(playerid, COLOR_GREY,  "names: Heineken ($49)");
				  		SendClientMessage(playerid, COLOR_GREY,  "names: SangSom ($100)");
				  		SendClientMessage(playerid, COLOR_GREY,  "names: Water ($12) Soda($20)");
						SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
						return 1;
					}
				    if(strcmp(x_nr,"heineken",true) == 0)
					{
						if(PlayerInfo[playerid][pAge] < 16)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Bartender: ขอโทดครับคุณยังมีอายุไม่ถึง16ปี.");
						    return 1;
						}
					    SafeGivePlayerMoney(playerid, - 49);
					    PlayerDrunk[playerid] += 1;
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 50)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 0 * PlayerInfo[playerid][pAlcoholPerk]; hp += 0; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 8.0); }
						}
					}
					else if(strcmp(x_nr,"Jhonny",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 16)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Bartender: ขอโทดครับคุณยังมีอายุไม่ถึง16ป.");
						    return 1;
						}
					    SafeGivePlayerMoney(playerid, - 150);
					    PlayerDrunk[playerid] += 3;
						if(PlayerDrunk[playerid] >= 6) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 45)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 0 * PlayerInfo[playerid][pAlcoholPerk]; hp += 0; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 15.0); }
						}
					}
					else if(strcmp(x_nr,"sangsom",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 16)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Bartender: ขอโทดครับคุณยังมีอายุไม่ถึง16ป.");
						    return 1;
						}
					    SafeGivePlayerMoney(playerid, - 100);
					    PlayerDrunk[playerid] += 2;
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~You are~n~~p~Drunk", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 60)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 0 * PlayerInfo[playerid][pAlcoholPerk]; hp += 0; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 10.0); }
						}
					}
					else if(strcmp(x_nr,"water",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 12);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 0 * PlayerInfo[playerid][pAlcoholPerk]; hp += 0; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
						}
					}
					else if(strcmp(x_nr,"soda",true) == 0)
					{
					    SafeGivePlayerMoney(playerid, - 20);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 0 * PlayerInfo[playerid][pAlcoholPerk]; hp += 0; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "Bartender: ไม่มีเครื่องดื่มชื่อนั้น.");
					    return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",4.1,1,1,1,1,1);
					format(string, sizeof(string), "* %s ดื่ม %s", sendername ,x_nr);
					ProxDetector(3.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You can't drink anymore, you will throw up !");
	                return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ที่บา !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/setchamp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /setchamp [playerid/PartOfName]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
		        if(IsPlayerConnected(giveplayerid))
		        {
		            if(giveplayerid != INVALID_PLAYER_ID)
		            {
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		                new nstring[MAX_PLAYER_NAME];
						format(nstring, sizeof(nstring), "%s", giveplayer);
						strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
						Titel[TitelWins] = PlayerInfo[giveplayerid][pWins];
						Titel[TitelLoses] = PlayerInfo[giveplayerid][pLoses];
						SaveBoxer();
						format(string, sizeof(string), "* You have made %s the new Boxing Champion.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
		            return 1;
		        }
	        }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   you are not authorized to use that command!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/boxstats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 12)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not a Boxer !");
	            return 1;
	        }
	        new ttext[20];//Title
	        new clevel = PlayerInfo[playerid][pBoxSkill];
			if(clevel >= 0 && clevel <= 50) { ttext = "Beginner"; }
			else if(clevel >= 51 && clevel <= 200) { ttext = "Amateur"; }
			else if(clevel >= 201 && clevel <= 400) { ttext = "Professional"; }
	        new ntext[20];//NickName
	        new level = PlayerInfo[playerid][pWins];
	        if(level > 0 && PlayerInfo[playerid][pLoses] == 0)
	        {
	            ntext = "Undefeated";
	        }
	        else
	        {
	            if(level >= 0 && level <= 10) { ntext = "Newcomer"; }
	            else if(level >= 11 && level <= 20) { ntext = "Touchy Fist"; }
	            else if(level >= 21 && level <= 30) { ntext = "Nut Cracker"; }
	            else if(level >= 31 && level <= 40) { ntext = "Tommygun"; }
	            else if(level >= 41 && level <= 50) { ntext = "Skull Breaker"; }
	            else if(level >= 51 && level <= 60) { ntext = "Light Speed"; }
	            else if(level >= 61 && level <= 70) { ntext = "Unbroken Warrior"; }
	            else if(level >= 71) { ntext = "Itallion Stallion"; }
	        }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Boxing Records __________________|");
	        format(string, sizeof(string), "| Current Champion: %s, with [%d] Winnings and [%d] Losses.", Titel[TitelName],Titel[TitelWins],Titel[TitelLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Current Title: %s.", ttext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Current NickName: %s.", ntext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total Wins: %d.", PlayerInfo[playerid][pWins]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total Losses: %d.", PlayerInfo[playerid][pLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
	        SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________|");
		}
		return 1;
	}
	if(strcmp(cmd, "/fight", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 12)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not a Boxer !");
	            return 1;
	        }
	        if(InRing > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   There is already a Fight going on, wait for it to Finish !");
	            return 1;
	        }
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are already Fighting !");
	            return 1;
	        }
	        if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not at the Grove Street Gym !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /fight [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Box with yourself!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* You offerd a Boxing Challenge to %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Boxer %s wants to Fight with you (type /accept boxing) to accept.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        BoxOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/music", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pCDPlayer])
	        {
		        new x_nr[256];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ Music __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /music [name]");
			  		SendClientMessage(playerid, COLOR_GREY, "Available names: On, Off, Next");
					SendClientMessage(playerid, COLOR_WHITE, "|___________________________________________|");
					return 1;
				}
			    if(strcmp(x_nr,"on",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
	            else if(strcmp(x_nr,"off",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
				    PlayerFixRadio(playerid);
				}
				else if(strcmp(x_nr,"next",true) == 0)
				{
				    if(Music[playerid] == 0) { Music[playerid] = 1; }
				    else if(Music[playerid] == 1) { Music[playerid] = 2; }
				    else if(Music[playerid] == 2) { Music[playerid] = 3; }
				    else if(Music[playerid] == 3) { Music[playerid] = 4; }
				    else if(Music[playerid] == 4) { Music[playerid] = 5; }
				    else if(Music[playerid] == 5) { Music[playerid] = 6; }
				    else if(Music[playerid] == 6) { Music[playerid] = 0; }
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Unknown music command !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You don't have a CD-Player !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/service", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Service Names __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /service [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Bus, Medic, Mechanic");
				SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   There are no Taxi Drivers On Duty at the moment, try again later !");
		            return 1;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   You can't call for a Taxi now !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s is in need of a Taxi Driver. (use /accept taxi to accept the call)", sendername);
		    	SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Taxi Driver, wait for a reply.");
		    	TaxiCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"bus",true) == 0)
			{
			    if(BusDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   There are no Bus Drivers On Duty at the moment, try again later !");
		            return 1;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   You can't call for a Bus now !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s is in need of a Bus Driver. (use /accept bus to accept the call)", sendername);
		    	SendJobMessage(14, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Bus Driver, wait for a reply.");
		    	BusCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"medic",true) == 0)
			{
			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   There are no Medics On Duty at the moment, try again later !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s is in need of a Medic. (use /accept medic to accept the call)", sendername);
		    	SendRadioMessage(4, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Medic, wait for a reply.");
		    	MedicCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"mechanic",true) == 0)
			{
			    if(Mechanics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   There are no Car Mechanics On Duty at the moment, try again later !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s is in need of a Car Mechanic. (use /accept mechanic to accept the call)", sendername);
		    	SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You have called for a Car Mechanic, wait for a reply.");
		    	MechanicCall = playerid;
		    	return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Unknown service name !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gRope[playerid] >= 1)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /tie [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = strval(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    if(PlayerTied[giveplayerid])
					    {
					        SendClientMessage(playerid, COLOR_GREY, " ผู้เล่นนั้นถูกมัดด้วยเชือกแล้ว!");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(PlayerInfo[playerid][pLevel] >= 2)
						    {
						    	new car = GetPlayerVehicleID(playerid);
						    	if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถมัดตัวเองได้!"); return 1; }
						    	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    	{
						    	gRope[playerid] -= 1;
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* คุณถูกมัดโดย %s", sendername);
								SendClientMessage(giveplayerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* คุณมัด %s, คุณเหลือเชือกอีก %d เส้น", giveplayer,gRope[playerid]);
								SendClientMessage(playerid, COLOR_WHITE, string);
								format(string, sizeof(string), "* %s หยิบเชือกออกมาและมัด %s ", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Tied", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerFrozened[giveplayerid] = 1;
								PlayerTied[giveplayerid] = 1;
						    	}
						    	else
						    	{
						        	SendClientMessage(playerid, COLOR_GREY, " ผู้เล่นนั้นไม่ได้อยู่ในรถ หรือว่าคุณไม่ใช่คนขับ!");
			        				return 1;
						    	}
							}
							else
							{
								SendClientMessage(playerid,COLOR_GREY," ผู้เล่นที่มีเลเวล 2 ขึ้นไปสามารถใช้คำสั่งนี้ได้!!");
								return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, " ผู้เล่นนั้นไม่ได้อยู่ไกล้คุณ !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, " That player is Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถมัดคนได้ถ้าคุณไม่มีเชือก!!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/untie", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /untie [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = strval(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถปลดเชือกตัวเอง!"); return 1; }
						if(PlayerTied[giveplayerid])
						{
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
						    format(string, sizeof(string), "* ~w~You were Untied by %s.", sendername);
							GameTextForPlayer(giveplayerid,string, 2500, 3);
							format(string, sizeof(string), "* คุณปลดเชือกให้ %s", giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							TogglePlayerControllable(giveplayerid, 1);
							PlayerTied[giveplayerid] = 0;
							format(string, sizeof(string), "* %s ปลดเชื่อก %s ด้วยมือของเขา", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, " ผู้เล่นนั้นไม่ได้ถูกมัด !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, " ผู้เล่นนั้นไม่ได้อยู่ไกล้คุณ !");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, " ผู้เล่นนั้นออฟไลน์อยู่ !");
			    return 1;
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/sell", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Selling __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sell [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "Available names: Fish, Cooked");
				SendClientMessage(playerid, COLOR_WHITE, "|_____________________________________________|");
				return 1;
			}
		    if(strcmp(x_nr,"fish",true) == 0)
			{
			    if (!PlayerToPoint(100, playerid,-1983.4200,83.1155,27.6875))//centerpoint 24-7
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   You are not in a 24-7 !");
					return 1;
				}
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sell fish [fish]");
					return 1;
				}
				new price;
				new fishid = strval(tmp);
				if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Fish number cant be below 1 or above 5 !"); return 1; }
				else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(1) !"); return 1; }
				else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(2) !"); return 1; }
				else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(3) !"); return 1; }
				else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(4) !"); return 1; }
				else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(5) !"); return 1; }
				ConsumingMoney[playerid] = 1;
				switch (fishid)
				{
				    case 1:
				    {
				        if(Fishes[playerid][pWeight1] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
                        price = FishCost(playerid, Fishes[playerid][pFid1]);
                        price = price * Fishes[playerid][pWeight1];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 1);
				    }
				    case 2:
				    {
				        if(Fishes[playerid][pWeight2] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid2]);
                        price = price * Fishes[playerid][pWeight2];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 2);
				    }
				    case 3:
				    {
				        if(Fishes[playerid][pWeight3] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid3]);
                        price = price * Fishes[playerid][pWeight3];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 3);
				    }
				    case 4:
				    {
				        if(Fishes[playerid][pWeight4] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid4]);
                        price = price * Fishes[playerid][pWeight4];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 4);
				    }
				    case 5:
				    {
				        if(Fishes[playerid][pWeight5] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "We are only interested in Fishes weighting 20 LBS or more.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid5]);
                        price = price * Fishes[playerid][pWeight5];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 100;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Fish~n~~r~Sold", 3000, 1);
                        format(string, sizeof(string), "* You have sold your %s that weights %d, for $%d.", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SafeGivePlayerMoney(playerid, price);
						ClearFishID(playerid, 5);
				    }
				}
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				return 1;
			}
			else if(strcmp(x_nr,"cooked",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sell cooked [cooknumber] [playerid/PartOfName]");
					return 1;
				}
				new cookid = strval(tmp);
				if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Cook number cant be below 1 or above 5 !"); return 1; }
				else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(1) !"); return 1; }
				else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(2) !"); return 1; }
				else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(3) !"); return 1; }
				else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(4) !"); return 1; }
				else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(5) !"); return 1; }
				tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sell cooked [cooknumber] [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				        switch(cookid)
				        {
							case 1:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
							case 2:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
							case 3:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
							case 4:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
							case 5:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "* %s has given you %s weighting %d (use /cooked to see it).",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* You gave %s weighting %d to %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   That player has no space left in his Cooking List !");
							        return 1;
							    }
							}
				        }//switch
				        ClearCookingID(playerid, cookid);
				    }//invalid giveplayerid
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Unknown Selling Name !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/fare",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] == 10||PlayerInfo[playerid][pLeader] == 10|| PlayerInfo[playerid][pJob] == 14)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 1)
				    {
				        TaxiDrivers -= 1;
				    }
				    else if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* คุณได้เลิกรับงาน และได้เงิน $%d", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					SafeGivePlayerMoney(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return 1;
				}
				new Veh = GetPlayerVehicleID(playerid);
				if(Veh == 76 || Veh == 77 || Veh == 78 || Veh == 79 || Veh == 80 || Veh == 81|| Veh == 253|| Veh == 254 || Veh == 255)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "USAGE: /fare [price]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 100) { SendClientMessage(playerid, COLOR_GREY, "   Fare price must be between $1 and $100 !"); return 1; }
					    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), " พนักงานขับ Taxi %s กำลังรับงานอยู่, ค่าโดยสาร: $%d (พิมพ์ /service taxi เพื่อเรียก)", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่คนขับรถคันนี้ !");
					    return 1;
					}
				}
				else if(Veh == 122 || Veh == 123)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "USAGE: /fare [price]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 100) { SendClientMessage(playerid, COLOR_GREY, "   Fare price must be between $1 and $100 !"); return 1; }
					    BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), " พนักงานขับรถ Bus %s กำลังรับงานอยู่, ค่าโดยสาร: $%d (พิมพ์ /service bus เพื่อเรียก)", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่คนขับรถคันนี้ !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่บนแท็กซี่, รถบัส !");
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"   คุณไม่ใช่พนักงานขับรถแท็กซี่, รถบัส !");
			    return 1;
			}
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/eat",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Cant eat a Fish while you are fighting !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /eat [cook number]");
				return 1;
			}
			new cookid = strval(tmp);
			if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Cook number cant be below 1 or above 5 !"); return 1; }
			else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(1) !"); return 1; }
			else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(2) !"); return 1; }
			else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(3) !"); return 1; }
			else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(4) !"); return 1; }
			else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even Cook something at that number(5) !"); return 1; }
            GetPlayerName(playerid, sendername, sizeof(sendername));
			new Float:health;
			if(GetPlayerHealth(playerid, health) < 40)
			{
			    new hp = 0;
			    switch (cookid)
			    {
					case 1:
					{
					    if(Cooking[playerid][pCookID1] == 16 || Cooking[playerid][pCookID1] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "บริโภคทำให้เกิดอันตราย");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight1] / 3));
					    hp = Cooking[playerid][pCWeight1];
					    format(string, sizeof(string), "* %s ได้กิน %s", sendername, Cooking[playerid][pCook1]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* คุณได้กิน %s น้ำหนัก %d, และมันได้เพิ่มเลือดของคุณ",Cooking[playerid][pCook1], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 2:
					{
					    if(Cooking[playerid][pCookID2] == 16 || Cooking[playerid][pCookID2] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "บริโภคทำให้เกิดอันตราย");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight2] / 3));
					    hp = Cooking[playerid][pCWeight2];
					    format(string, sizeof(string), "* %s ได้กิน %s", sendername, Cooking[playerid][pCook2]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* คุณได้กิน %s น้ำหนัก %d, และมันได้เพิ่มเลือดของคุณ",Cooking[playerid][pCook2], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 3:
					{
					    if(Cooking[playerid][pCookID3] == 16 || Cooking[playerid][pCookID3] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "บริโภคทำให้เกิดอันตราย");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight3] / 3));
					    hp = Cooking[playerid][pCWeight3];
					    format(string, sizeof(string), "* %s ได้กิน %s", sendername, Cooking[playerid][pCook3]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* คุณได้กิน %s น้ำหนัก %d, และมันได้เพิ่มเลือดของคุณ",Cooking[playerid][pCook3], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 4:
					{
					    if(Cooking[playerid][pCookID4] == 16 || Cooking[playerid][pCookID4] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "บริโภคทำให้เกิดอันตราย");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight4] / 3));
					    hp = Cooking[playerid][pCWeight4];
					    format(string, sizeof(string), "* %s ได้กิน %s", sendername, Cooking[playerid][pCook4]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* คุณได้กิน %s น้ำหนัก %d, และมันได้เพิ่มเลือดของคุณ",Cooking[playerid][pCook4], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 5:
					{
					    if(Cooking[playerid][pCookID5] == 16 || Cooking[playerid][pCookID5] == 18)
						{//Dolphin or Turtle
						    WantedPoints[playerid] += 2;
							SetPlayerCriminal(playerid,255, "บริโภคทำให้เกิดอันตราย");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight5] / 3));
					    hp = Cooking[playerid][pCWeight5];
					    format(string, sizeof(string), "* %s ได้กิน %s", sendername, Cooking[playerid][pCook5]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* คุณได้กิน %s น้ำหนัก %d, และมันได้เพิ่มเลือดของคุณ",Cooking[playerid][pCook5], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
			    }
				ClearCookingID(playerid, cookid);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Your health is high enough, can only eat at 40 Health !");
			    return 1;
			}
	    }
	    return 1;
	}
 	if(strcmp(cmd,"/cook",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(IsAtCookPlace(playerid))
	        {
	            new x_nr[256];
	            x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cook [name]");
					SendClientMessage(playerid, COLOR_WHITE, "Available names: Lastfish, Fish, Chicken, Hamburger, Pizza.");
					return 1;
				}
				if(strcmp(x_nr,"lastfish",true) == 0)
				{
				    if(Fishes[playerid][pLastFish] > 0)
	        		{
					    new found = 0;
					    if(Cooking[playerid][pCWeight1] == 0)
					    {
						    format(string, sizeof(string), "คุณทำอาหาร %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* คุณเคยทำ %s, น้ำหนัก %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight2] == 0)
					    {
						    format(string, sizeof(string), "คุณทำอาหาร %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* คุณเคยทำ %s, น้ำหนัก %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight3] == 0)
					    {
						    format(string, sizeof(string), "คุณทำอาหาร %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight3] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID3] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* คุณเคยทำ %s, น้ำหนัก %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight4] == 0)
					    {
						    format(string, sizeof(string), "คุณทำอาหาร %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight4] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID4] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* คุณเคยทำ %s, น้ำหนัก %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else if(Cooking[playerid][pCWeight5] == 0)
					    {
						    format(string, sizeof(string), "คุณทำอาหาร %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight5] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID5] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* คุณเคยทำ %s, น้ำหนัก %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    found = 1;
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
					        return 1;
					    }
					    if(found)
					    {
					        ClearFishID(playerid, Fishes[playerid][pLastFish]);
				            Fishes[playerid][pLastFish] = 0;
				            Fishes[playerid][pFishID] = 0;
					    }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   You haven't even catched a Fish yet !");
				        return 1;
				    }
				}
				else if(strcmp(x_nr,"fish",true) == 0)
				{
				    new found = 0;
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cook fish [fishnumber]");
						return 1;
					}
					new fishid = strval(tmp);
					if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Fish number cant be below 1 or above 5 !"); return 1; }
					else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(1) !"); return 1; }
					else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(2) !"); return 1; }
					else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(3) !"); return 1; }
					else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(4) !"); return 1; }
					else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(5) !"); return 1; }
					if(Cooking[playerid][pCWeight1] == 0)
					{
					    if(fishid == 1)
					    {
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight1];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid1];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
					    	SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
					    }
						else if(fishid == 2)
					 	{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight2] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight3] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						found = 1;
   					}
					else if(Cooking[playerid][pCWeight4] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						found = 1;
		    		}
					else if(Cooking[playerid][pCWeight5] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "A Cooked %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						found = 1;
   					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
					    return 1;
		    		}
					if(found)
					{
					    ClearFishID(playerid, fishid);
						Fishes[playerid][pLastFish] = 0;
			   			Fishes[playerid][pFishID] = 0;
					}
				}
				else if(strcmp(x_nr,"chicken",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
				    {//Cluckin Bell
				        if(Groceries[playerid][pChicken] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "A Cooked Chicken");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   You don't have any Chickens with you !");
				            return 1;
				        }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   You need to be at Cluckin Bell to Cook this !");
					    return 1;
				    }
				}
				else if(strcmp(x_nr,"hamburger",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
					{//Burgershot
					    if(Groceries[playerid][pHamburger] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "A Baken Hamburger");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   You don't have any Hamburgers with you !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You need to be at Burger Shot to Cook this !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"pizza",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
					{//Well Stacked Pizza
					    if(Groceries[playerid][pPizza] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "A Baken Pizza");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* You've made %s, weighting %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   You don't have any space in your Cooking List !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   You don't have any Pizzas with you !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You need to be at Well Stacked Pizza to Cook this !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Invalid Cooking Name !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not at one of the Cooking Places (Cluckin Bell / Burger Shot / Well Stacked Pizza).");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd,"/cooked",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cooking __________________|");
	        format(string, sizeof(string), "** (1) Made: %s.   Weight: %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) Made: %s.   Weight: %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) Made: %s.   Weight: %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) Made: %s.   Weight: %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) Made: %s.   Weight: %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		}
	    return 1;
 	}
	if(strcmp(cmd,"/fish",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFishes] > 5)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Caught to many fish, wait till its reduced !");
	            return 1;
	        }
	        if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You already caught 5 Fishes, sell / eat / release them first !");
	            return 1;
	        }
	        new Veh = GetPlayerVehicleID(playerid);
	        if((IsAtFishPlace(playerid)) || IsABoat(Veh))
	        {
	            new Caught;
	            new rand;
	            new fstring[MAX_PLAYER_NAME];
	            new Level = PlayerInfo[playerid][pFishSkill];
	            if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
	            else if(Level >= 51 && Level <= 250) { Caught = random(50)-20; }
	            else if(Level >= 251 && Level <= 500) { Caught = random(100)-50; }
	            else if(Level >= 501 && Level <= 999) { Caught = random(160)-60; }
	            else if(Level >= 1000) { Caught = random(180)-70; }
	            rand = random(FishNamesNumber);
	            if(Caught <= 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Line snapped !");
	                return 1;
	            }
	            else if(rand == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught a Jacket and threw it away !");
	                return 1;
	            }
	            else if(rand == 4)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught a Pants and threw it away !");
	                return 1;
	            }
	            else if(rand == 7)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught a Can and threw it away !");
	                return 1;
	            }
	            else if(rand == 10)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught a pair of Shoes and threw it away !");
	                return 1;
	            }
	            else if(rand == 13)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You caught some Garbage and threw it away !");
	                return 1;
	            }
	            else if(rand == 20)
	            {
	                new mrand = random(500);
	                format(string, sizeof(string), "* You caught a Money Bag, containing $%d.", mrand);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	                SafeGivePlayerMoney(playerid, mrand);
	                return 1;
	            }
		        if(PlayerInfo[playerid][pFishLic] < 1)
		        {
	            	WantedPoints[playerid] += 1;
					SetPlayerCriminal(playerid,255, "Illegal Fishing");
				}
		        if(Fishes[playerid][pWeight1] == 0)
		        {
		        	PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight1] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish1], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 1;
					Fishes[playerid][pFid1] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
     			}
		        else if(Fishes[playerid][pWeight2] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight2] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish2], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 2;
					Fishes[playerid][pFid2] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight3] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight3] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish3], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 3;
					Fishes[playerid][pFid3] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight4] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight4] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish4], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 4;
					Fishes[playerid][pFid4] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight5] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight5] = Caught;
					format(string, sizeof(string), "* You have caught a %s, which weights %d Lbs.", Fishes[playerid][pFish5], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 5;
					Fishes[playerid][pFid5] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Your old record of %d Lbs has been passed, your new Biggest Fish is: %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   You dont have any space for your Fish !");
		            return 1;
		        }
	            if(PlayerInfo[playerid][pFishSkill] == 50)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Fishing Skill is now Level 2, you can now catch Heavier Fishes."); }
				else if(PlayerInfo[playerid][pFishSkill] == 250)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Fishing Skill is now Level 3, you can now catch Heavier Fishes."); }
				else if(PlayerInfo[playerid][pFishSkill] == 500)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Fishing Skill is now Level 4, you can now catch Heavier Fishes."); }
				else if(PlayerInfo[playerid][pFishSkill] == 1000)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Fishing Skill is now Level 5, you can now catch Heavier Fishes."); }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You are not at a Fishing Place (Big Wheel Rods) or on a Fishing Boat !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/fishes",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Fishes __________________|");
	        format(string, sizeof(string), "** (1) Fish: %s.   Weight: %d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) Fish: %s.   Weight: %d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) Fish: %s.   Weight: %d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) Fish: %s.   Weight: %d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) Fish: %s.   Weight: %d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/releasefish",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /releasefish [fish]");
				return 1;
			}
			new fishid = strval(tmp);
			if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Fish number cant be below 1 or above 5 !"); return 1; }
			else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(1) !"); return 1; }
			else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(2) !"); return 1; }
			else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(3) !"); return 1; }
			else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(4) !"); return 1; }
			else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   You didnt even catch a Fish at that number(5) !"); return 1; }
			ClearFishID(playerid, fishid);
			Fishes[playerid][pLastFish] = 0;
   			Fishes[playerid][pFishID] = 0;
		}
		return 1;
	}
 	if(strcmp(cmd,"/throwback",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pLastFish] > 0)
	        {
	            ClearFishID(playerid, Fishes[playerid][pLastFish]);
	            Fishes[playerid][pLastFish] = 0;
	            Fishes[playerid][pFishID] = 0;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You haven't even catched a Fish yet !");
	            return 1;
	        }
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/throwbackall",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0)
	        {
	            ClearFishes(playerid);
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   You haven't even catched a Fish yet !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/licenses",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text3[20];
	        new text4[20];
	        new text5[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = " มี"; } else { text1 = " ไม่มี"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = " มี"; } else { text4 = " ไม่มี"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = " มี"; } else { text2 = " ไม่มี"; }
	        if(PlayerInfo[playerid][pFishLic]) { text3 = " มี"; } else { text3 = " ไม่มี"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = " มี"; } else { text5 = " ไม่มี"; }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ ใบอณุญาติของคุณ __________________|");
	        format(string, sizeof(string), "** ใบอณุญาติขับขี่รถยนต์:%s", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** ใบอณุญาติขับขี่เครื่องบิน:%s", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** ใบอณุญาติขับขี่เรือ:%s", text2);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** ใบอณุญาติตกปลา:%s", text3);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** ใบอณุญาติพกปืน:%s", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
			SendClientMessage(playerid, COLOR_WHITE, "|______________________________________________|");
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/showlicenses",true)==0||strcmp(cmd, "/sl", true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /showlicenses [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถเอาโชว์ใบอณุญาติต่างๆให้ตัวเองดูได้ ถ้าอยากดูโปรดกด /licenses เพื่อดู !"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[20];
				        new text2[20];
				        new text3[20];
				        new text4[20];
				        new text5[20];
						if(PlayerInfo[playerid][pCarLic]) { text1 = " มี"; } else { text1 = " ไม่มี"; }
                        if(PlayerInfo[playerid][pFlyLic]) { text4 = " มี"; } else { text4 = " ไม่มี"; }
						if(PlayerInfo[playerid][pBoatLic]) { text2 = " มี"; } else { text2 = " ไม่มี"; }
				        if(PlayerInfo[playerid][pFishLic]) { text3 = " มี"; } else { text3 = " ไม่มี"; }
				        if(PlayerInfo[playerid][pGunLic]) { text5 = " มี"; } else { text5 = " ไม่มี"; }
				        format(string, sizeof(string), "|__________ ใบอณุญาติของ %s __________|", sendername);
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "** ใบอณุญาติขับขี่รถยนต์:%s", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** ใบอณุญาติขับขี่เครื่องบิน:%s", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** ใบอณุญาติขับขี่เรือ:%s", text2);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** ใบอณุญาติตกปลา:%s", text3);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** ใบอณุญาติพกปืน:%s", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s ได้เอาเอาใบอณุญาติต่างๆทั้งหมดที่เขามีให้คุณดู", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* คุณได้เอาใบอณุญาติต่างๆทั้งหมดที่คุณมีให้ %s ดู", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   That player is Offline !");
	            return 1;
	        }
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/frisk",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /frisk [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "คุณไม่สามารถ ค้นตัวตัวเองได้ !"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[20], text2[20], text3[20], text4[20], text5[20];
					    if(PlayerInfo[giveplayerid][pDrugs] > 0) { text1 = "| ยา."; } else { text1 = "| Empty Pocket."; }
					    if(PlayerInfo[giveplayerid][pMats] > 0) { text2 = "| ดินปืน."; } else { text2 = "| Empty Pocket."; }
					    if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0) { text3 = "| ปลา."; } else { text3 = "| Empty Pocket."; }
					    if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text4 = "| สมุดโทรศัพท์."; } else { text4 = "| Empty Pocket."; }
					    if(PlayerInfo[giveplayerid][pCDPlayer] > 0) { text5 = "| ซีดีเพลง."; } else { text5 = "| Empty Pocket."; }
					    format(string, sizeof(string), "|__________ Items with %s __________|", giveplayer);
				        SendClientMessage(playerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "%s.", text1);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text2);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text3);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text4);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text5);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s ได้ค้นตัว %s เพื่อค้นหาสิ่งของที่ผิดกฏหมาย", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่ได้อยู่ใกล้คุณ !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่ได้อยู่ในเกม !");
	            return 1;
	        }
		}
	    return 1;
 	}
	if(strcmp(cmd,"/sellcar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJob] != 10)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   You are not a Car Dealer !");
			    return 1;
			}
			if(!IsPlayerInAnyVehicle(playerid))
			{
			    SendClientMessage(playerid,COLOR_GREY,"   You are not in a Car !");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sellcar [playerid/PartOfName] [price]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /sellcar [playerid/PartOfName] [price]");
				return 1;
			}
			new money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not below $1 or above $99999 !"); return 1; }
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Cant sell to yourself!");
					        return 1;
					    }
					    if(CarCalls[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   That player has already bought a car, has to use /callcar first !");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* You offerd %s to buy your Car for $%d .", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Car Dealer %s wants to sell you his Car for $%d, (type /accept car) to buy.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						CarOffer[giveplayerid] = playerid;
						CarPrice[giveplayerid] = money;
						CarID[giveplayerid] = GetPlayerVehicleID(playerid);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid ID/Name !");
			    return 1;
			}
	    }
		return 1;
	}
	if(strcmp(cmd,"/portable",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMember] == 8 || PlayerInfo[playerid][pLeader] == 8)
		    {
			    if(ConnectedToPC[playerid] == 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ปิดโน๊ตบุ๊ค, และ ตัดการเชื่อมต่อจากฐานข้อมูล.");
			        ConnectedToPC[playerid] = 0;
			        return 1;
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "*เปิดโน๊ตบุ๊ค, และ เชื่อมต่อไปยังฐานข้อมูล.");
			    SendClientMessage(playerid, COLOR_WHITE, "|___ ฐานข้อมูลนักล่าค่าหัว ___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - News");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contracts");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Givehit");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Order");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Ranks");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Logout");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
				ConnectedToPC[playerid] = 255;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่สมาชิกนักล่าค่าหัว !");
		        return 1;
		    }
		}
	    return 1;
	}
	if(strcmp(cmd,"/materials",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pJob] != 9)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   คุณไม่ใช้คนขายอาวุธ !");
			    return 1;
			}
			new x_nr[256];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /materials [name]");
				SendClientMessage(playerid, COLOR_WHITE, "Available names: Get, Deliver.");
				return 1;
			}
			if(strcmp(x_nr,"get",true) == 0)
			{
			    if(PlayerToPoint(3.0,playerid,-2542.5137,1216.1669,37.5286))
			    {
			        if(MatsHolding[playerid] >= 10)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   คุณมีวัตถุดิบเต็มแล้วไม่สามารถเอาได้อีก !");
				        return 1;
			        }
			        tmp = strtok(cmdtext, idx);
			        if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USAGE: /materials get [ammount]");
						return 1;
					}
					moneys = strval(tmp);
					if(moneys < 1 || moneys > 10) { SendClientMessage(playerid, COLOR_GREY, "   Package Number can't be below 1 or higher then 10 !"); return 1; }
					new price = moneys * 100;
					if(ScriptMoney[playerid] > price)
					{
					    format(string, sizeof(string), "* คุณได้ซื้อวัตถุดิบ %d อัน ราคา $%d", moneys, price);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					    SafeGivePlayerMoney(playerid, - price);
					    MatsHolding[playerid] = moneys;
					}
					else
					{
					    format(string, sizeof(string), "   คุณไม่เงินไม่พอสำหรั $%d !", price);
					    SendClientMessage(playerid, COLOR_GREY, string);
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่หน้าร้านวัตถุดิบในเมือง San Fierro !");
			        return 1;
			    }
			}
			else if(strcmp(x_nr,"deliver",true) == 0)
			{
			    if(PlayerToPoint(3.0,playerid,-2119.4863,-178.3242,35.3203))
			    {
			        if(MatsHolding[playerid] > 0)
			        {
			            new payout = (50)*(MatsHolding[playerid]);
			            format(string, sizeof(string), "* คุณเอาส่งวัตถุดิบ %d อัน และได้ดินปืนจำนวน  %d อัน", payout, MatsHolding[playerid]);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			            PlayerInfo[playerid][pMats] += payout;
			            MatsHolding[playerid] = 0;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่มีวัตถุดิบเหลืออยู่เลย !");
				        return 1;
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ที่ส่งของในเมือง San Fierro !");
			        return 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid Materials Name !");
			    return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd,"/sellgun",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pJob] != 9)
			{
			    SendClientMessage(playerid,COLOR_GREY,"   คุณไม่ใช่นักขายอาวุธ !");
			    return 1;
			}
			new x_weapon[256],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /sellgun [playerid/PartOfName] [weaponname]");
				SendClientMessage(playerid, COLOR_GREY, "Weapons: knife(2000) sdpistol(100) eagle(200) mp5(250) shotgun(200)");
				SendClientMessage(playerid, COLOR_GREY, "Weapons: grenades(500) ak47(800) m4(900) sniper1000)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					x_weapon = strtok(cmdtext, idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
						SendClientMessage(playerid, COLOR_WHITE, "*** Sell Guns ***");
						SendClientMessage(playerid, COLOR_GREY, "USAGE: /sellgun [playerid/PartOfName] [weaponname]");
						SendClientMessage(playerid, COLOR_GREY, "Weapons: knife(2000) spistol(100) eagle(200) mp5(250) shotgun(200)");
						SendClientMessage(playerid, COLOR_GREY, "Weapons: grenades(500) ak47(800) m4(900) sniper(1000)");
						SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
						return 1;
					}
				}
				if(strcmp(x_weapon,"knife",true) == 0) { if(PlayerInfo[playerid][pMats] > 1999) { weapon[playerid] = 4; price[playerid] = 100; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 4; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				else if(strcmp(x_weapon,"spistol",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 23; price[playerid] = 100; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 23; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				//else if(strcmp(x_weapon,"flowers",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 14; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				else if(strcmp(x_weapon,"eagle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 150; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 24; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 249) { weapon[playerid] = 29; price[playerid] = 200; ammo[playerid] = 200; PlayerInfo[giveplayerid][pGun2] = 29; PlayerInfo[giveplayerid][pAmmo2] = 200; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 25; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				//else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 27; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 799) { weapon[playerid] = 30; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 30; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 899) { weapon[playerid] = 31; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 31; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				else if(strcmp(x_weapon,"sniper",true) == 0) { if(PlayerInfo[playerid][pMats] > 999) { weapon[playerid] = 34; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 34; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				else if(strcmp(x_weapon,"grenades",true) == 0) { if(PlayerInfo[playerid][pMats] > 499) { weapon[playerid] = 16; price[playerid] = 600; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun2] = 16; PlayerInfo[giveplayerid][pAmmo2] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"  คุณไม่ดินปืนไม่เพียงพอที่จะสร้างอาวุธนี้!"); return 1; } }
				else { SendClientMessage(playerid,COLOR_GREY,"   ชื่ออาวุธผิดพลาด!"); return 1; }
				if (ProxDetectorS(5.0, playerid, giveplayerid))
				{
				    if(giveplayerid == playerid)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่สามารถขายปืนให้ตนเองได้!");
						return 1;
					}
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "   คุณได้ขายปืน %s จำนวน %d นัด แก่ %s, และใช้ดินปืนจำนวน %d", x_weapon, ammo[playerid], giveplayer, price[playerid]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "   คุณได้ซื้อปืน %s จำนวน %d นัด, จาก %s", x_weapon, ammo[playerid], sendername);
					SendClientMessage(giveplayerid, COLOR_GRAD1, string);
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "* %s ได้ไห้ขายปืนแก่ %s.", sendername ,giveplayer);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Your too far away.");
					return 1;
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ไม่ได้อยู่ในเกมส์", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/get",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[256];
			x_job = strtok(cmdtext, idx);

			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Get __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /get [name]");
		  		SendClientMessage(playerid, COLOR_GREY, "Available names: Drugs, Fuel");
				SendClientMessage(playerid, COLOR_GREEN, "|_________________________________________|");
				return 1;
			}

		    if(strcmp(x_job,"drugs",true) == 0)
			{
		        if(PlayerInfo[playerid][pDrugs] > 15)
		        {
		            format(string, sizeof(string), " คุณมียาอยู่ %d เม็ด, ขายยาพวกนี้ให้หมดก่อนแล้วค่อยมาเอาใหม่ !", PlayerInfo[playerid][pDrugs]);
					SendClientMessage(playerid, COLOR_GREY, string);
		            return 1;
		        }
		        new tel;
			    new price;
			    new ammount;
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /get drugs [ammount]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrugsSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 50)
				{ tel = 200; if(ammount < 1 || ammount > 6) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 6 at your Skill Level!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ tel = 150; if(ammount < 1 || ammount > 12) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 12 at your Skill Level!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ tel = 100; if(ammount < 1 || ammount > 20) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 20 at your Skill Level!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ tel = 50; if(ammount < 1 || ammount > 30) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 30 at your Skill Level!"); return 1; } }
				else if(level >= 401)
				{ tel = 10; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY, "   You cant go below 1 or above 99 at your Skill Level!"); return 1; } }
			    if (PlayerInfo[playerid][pJob] == 4 && PlayerToPoint(2.0, playerid, -1709.3248,404.6136,7.4190))
				{
				    price = ammount * tel;
				    if(ScriptMoney[playerid] > price)
				    {
				        format(string, sizeof(string), "* คุณซื้อยา %d จำนวน $%d.", ammount, price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        SafeGivePlayerMoney(playerid, -price);
						PlayerInfo[playerid][pDrugs] = ammount;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   คุณมียาเยอะเกินแล้ว !");
				        return 1;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "  คุณไม่ได้อยู่ที่จุดเอายา/คุณไม่ใช่นักขายยา !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"fuel",true) == 0)
			{
			    if(IsAtGasStation(playerid))
				{
				    new price = 20 * SBizzInfo[3][sbEntranceCost];
				    format(string, sizeof(string), "* คุณได้ซื้อกระป๋องน้ำมัน 20 ลิตร, ในราคา $%d",price);
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				    PlayerInfo[playerid][pFuel] = 20;
					SafeGivePlayerMoney(playerid, - price);
					return 1;
				}
				else
				{
					SendClientMessage(playerid,COLOR_GREY,"   คุณไม่ได้อยุ่ที่ปั้ม!");
					return 1;
				}
			}
			else { return 1; }
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/join", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pJob] == 0)
			{
			    if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -1733.365, 1014.3129, 45.2147))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นนักสืบ, และ คุณมีสัญญาในการเป็นนักสืบ 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นนักสืบ 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นนักสืบ, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 1;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -1704.573, 785.6325, 25.2808))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นทนายความ, และ คุณมีสัญญาในการเป็นทนายความ 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นทนายความ 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นทนายความ, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 2;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -2243.462, -88.3423, 35.3203))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นโสเภณี, และ คุณมีสัญญาในการเป็นโสเภณี 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นโสเภณี 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นโสเภณี, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 3;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -2664.1751, 239.2328, 4.3359))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นคนขายยา, และ คุณมีสัญญาในการเป็นคนขายยา 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นคนขายยา 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นคนขายยา, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 4;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -1538.8371, 114.8688, 17.3225))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นคนขโมยรถ, และ คุณมีสัญญาในการเป็นนักขโมยรถ 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นนักขโมยรถ 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นโสเภณี, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 5;
				}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -1932.3859, 276.2117, 41.0391))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นช่างซ่อมรถ, และ คุณมีสัญญาในการเป็นช่างซ่อมรถ 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นช่างซ่อมรถ 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นช่างซ่อมรถ, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 7;
		  		}
				else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -2649.605, 376.0661, 6.1562))
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นบอดิ้กาด, และ คุณมีสัญญาในการเป็นบอดิ้กาด 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นบอดิ้กาด 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นบอดิ้กาด, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 8;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -2620.2071, 209.5256, 4.7696))
		  		{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นคนขายอาวุธ, และ คุณมีสัญญาในการเป็นคนขายอาวุธ 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นคนขายอาวุธ 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นคนขายอาวุธ, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 9;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -1952.164, 277.2182, 35.4687))
		  		{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นพนักงานประกันภัย, และ คุณมีสัญญาในการเป็นพนักงานประกันภัย 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นพนักงานประกันภัย 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นพนักงานประกันภัย, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 10;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, 771.2932, -47.4572, 1000.5859))
		  		{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นนักมวย, และ คุณมีสัญญาในการเป็นนักมวย 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นนักมวย 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นนักมวย, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 12;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -1921.3431,437.5137,35.1719))
		  		{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นคนขับรถบัส, และ คุณมีสัญญาในการเป็นคนขับรถบัส 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นคนขับรถบัส 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นคนขับรถบัส, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 14;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -2040.9437, 456.2395, 35.1719))
		  		{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นเด็กส่งหนังสือพิมพ์, และ คุณมีสัญญาในการเป็นเด็กส่งหนังสือพิมพ์ 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นเด็กส่งหนังสือพิมพ์ 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นเด็กส่งหนังสือพิมพ์, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 15;
		  		}
		  		else if (GetPlayerState(playerid) == 1 && PlayerToPoint(10, playerid, -77.7288, -1136.3897, 1.078))
		  		{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะกำลังกลายเป็นคนขับรถบรรทุก, และ คุณมีสัญญาในการเป็นคนขับรถบรรทุก 5 ชั่วโมง");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณจะต้องเป็นคนขับรถบรรทุก 5 ชั่วโมง คุณถึงจะออกจากงานนี้ได้");
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณแน่ใจหรือที่จะเป็นคนขับรถบรรทุก, พิมพ์ /accept job เพื่อยืนยันที่จะเป็น");
				    GettingJob[playerid] = 16;
				}
		  		else
		  		{
		  		    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ในที่สมัครงาน !");
		  		}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณมีอาชีพเสริมอยู่แล้ว, พิมพ์ /quitjob เพื่อออกงานก่อน !");
			}
		}//not connected
	    return 1;
	}
	if(strcmp(cmd, "/fill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsAtGasStation(playerid))
			{
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Fueling Vehicle, please wait",2000,3);
				SetTimer("Fillup",RefuelWait,0);
				TogglePlayerControllable(playerid, 0);
				Refueling[playerid] = 1;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   คุณไม่ได้อยู่ที่ปั้มน้ำมัน !");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/fillcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pFuel] > 0)
		    {
		        if(Gas[gLastCar[playerid]] < 81)
		        {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "   คุณได้เติมน้ำมันจะกระป๋องให้รถของคุณ 20 ลิตร");
			        Gas[gLastCar[playerid]] += 20;
			        PlayerInfo[playerid][pFuel] = 0;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   รถของคุณยังมีน้ำมันเพียงพอที่จะวิ่งต่อไปได้ !");
				}
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   คุณไม่มีน้ำมันในกระป๋องเหลืออยู่เลย !");
		    }
		}
		return 1;
	}
	if(strcmp(cmd, "/tazer", true) ==0)
	{
		new Float:health;
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1||PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19|| PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถช๊อตคนตอนคุณอยู่ในรถได้!");
			        return 1;
			    }
			    new suspect = GetClosestPlayer(playerid);
			    if(IsPlayerConnected(suspect))
				{
				    if(PlayerCuffed[suspect] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นถูกใส่กุญแจมืออยู่ !");
				        return 1;
				    }
				    if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
					{
					    if(gTeam[suspect] == 2)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถช๊อต ตำรวจ/FBI/นาวิกโยธินได้ !");
					        return 1;
					    }
					    if(IsPlayerInAnyVehicle(suspect))
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นที่คุณจะช๊อตอยู่ในรถ คุณไม่สามารถช๊อตเขาได้ !");
					        return 1;
					    }
					    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* คุณโดนช๊อตด้วยปืนไฟฟ้าจาก %s ", sendername);
						SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* คุณได้ช๊อต %s ด้วยปืนไฟฟ้า", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1); //
						format(string, sizeof(string), "* %s ได้ช๊อต %s ด้วยปืนไฟฟ้า", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(suspect, "~r~Tazed", 2500, 3);
						TogglePlayerControllable(suspect, 0);
						GetPlayerHealth(suspect, health);
						SetPlayerHealth(suspect, health - 25.0);
						ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); // Dieing of Crack
						PlayerCuffed[suspect] = 1;
						PlayerCuffedTime[suspect] = 8;
		            }
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   ไม่มีผู้เล่นอยู่ใกล้คุณ!");
					    return 1;
					}
				}

			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ตำรวจ !");
			}
		}//not connected
	    return 1;
	}
	if(strcmp(cmd, "/cuff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19|| PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cuff [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(gTeam[giveplayerid] == 2 || IsACop(giveplayerid))
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถใส่กุญแจมือ ตำรวจ/FBI/นาวิกโยธิน ได้ !");
					        return 1;
				        }
					    if(PlayerCuffed[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นถูกใส่กุญแจมืออยู่แล้ว !");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถใส่กุญแจมือตัวเองได้!"); return 1; }
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* คุณถูกใส่กุญแจมือโดย %s", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* คุณได้ใส่กุญแจมือ %s", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s ได้ใส่กุญแจมือ %s, และเขาก็จะหนีไปไหนไม่ได้อีก", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Cuffed", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								ApplyAnimation(giveplayerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0); // Taking Cover
								PlayerCuffed[giveplayerid] = 2;
								PlayerCuffedTime[giveplayerid] = 180;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้อยู่ใกล้คุณ !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้ Online !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช้ ตำรวจ");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/uncuff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2|| PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19|| PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: /uncuff [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(PlayerFrozened[giveplayerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "อย่าแม้แต่จะคิด..."); return 1; }
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Uncuff yourself!"); return 1; }
							if(PlayerCuffed[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* คุณได้ถูกปลดกุญแจมือ %s และคุณก็กลับมาเป็นอิสระ", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* คุณปลดกุญแจมือให้ %s", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Uncuffed", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerCuffed[giveplayerid] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   That player isn't Tied up !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  ผู้เล่นนั้นไม่ได้อยู่ใกล้คุณ !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นคนนั้นไม่อยู่ในเกม !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ ตำรวจ");
			}
		}//not connected
		return 1;
	}
    if(strcmp(cmd, "/find", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 1)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่นักสืบ !");
				return 1;
		    }
		    if(PlayerOnMission[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   ทำภารกิจของคุณก่อน !");
			    return 1;
			}
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   โปรดรออีก 2 นาทีเพื่อหาใหม่ !");
			    return 1;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /find [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถหาตัวเองได้!"); return 1; }
			        new points;
			        new level = PlayerInfo[playerid][pDetSkill];
					if(level >= 0 && level <= 50)
					{ points = 4; }
					else if(level >= 51 && level <= 100)
					{ points = 6; }
					else if(level >= 101 && level <= 200)
					{ points = 8; }
					else if(level >= 201 && level <= 400)
					{ points = 10; }
					else if(level >= 401)
					{ points = 12; }
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(giveplayerid, X,Y,Z);
					SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					FindTime[playerid] = 1;
					FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Detective Skill is now Level 2, soon you are able to find Faction Members."); }
					else if(PlayerInfo[playerid][pDetSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Detective Skill is now Level 3, soon you are able to find Faction Members."); }
					else if(PlayerInfo[playerid][pDetSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Detective Skill is now Level 4, you are now able to find Faction Members."); }
					else if(PlayerInfo[playerid][pDetSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Detective Skill is now Level 5, you are now able to find Faction Members."); }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้ Online !");
			}
		}
	    return 1;
	}
	if(strcmp(cmd, "/cleargps", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			DisablePlayerCheckpoint(playerid);
			PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			GameTextForPlayer(playerid, "~w~Gps is clear", 5000, 1);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s ได้ปิดเครื่อง GPS", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	if(strcmp(cmd, "/gps", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /gps [numbers]");
			SendClientMessage(playerid, COLOR_GRAD2, "| 1 นักสืบ                7 คนขายรถ");
			SendClientMessage(playerid, COLOR_GRAD2, "| 2 คนขโมยรถ        8 โสเภณี");
			SendClientMessage(playerid, COLOR_GRAD2, "| 3 คนขายปืน          9 บอดี้กาด");
			SendClientMessage(playerid, COLOR_GRAD2, "| 4 ช่างซ่อมรถ        10 คนขายยา");
			SendClientMessage(playerid, COLOR_GRAD2, "| 5 คนขับรถบัส        11 นักมวย");
			SendClientMessage(playerid, COLOR_GRAD2, "| 6 ทนายความ        12 คนขับรถบรรทุก");
			SendClientMessage(playerid, COLOR_GRAD2, "| GPS สถานที่อื่นๆ /gps 13");
			SendClientMessage(playerid, COLOR_GRAD2, "| หยุดระบบ GPS /cleargps");
			return 1;
			}
 		}
		new gps = strval(tmp);
		if (gps == 1)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to Detective job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1733.365,1014.313,45.21478,8.0);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 2)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to carjacker job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1538.837,114.8689,17.32259,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 3)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to arms dealer job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -2620.207,209.5256,4.769653,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 4)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to car mechanic job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1932.3859,276.2117,41.0391,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 5)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to bus driver job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1921.3431,437.5137,35.1719,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 6)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to lawyer job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1704.573,785.6325,25.28087,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 7)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to car dealer job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1952.164,277.2183,35.46875,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 8)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to whore job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -2243.462,-88.34222,35.32031,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 9)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to bodyguard job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -2649.605,376.0662,6.15625,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 10)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to DrugDealer job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -2664.175,239.2328,4.335938,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 11)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to boxer job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -2269.466,-155.7197,35.32031,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 12)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to trucker job", 5000, 1);
		            SetPlayerCheckpoint(playerid, -77.7288,-1136.3896,1.0781,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 13)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /gps [numbers]");
			SendClientMessage(playerid, COLOR_GRAD2, "| 14 ร้านขายของ24/7      20 ธนาคาร");
			SendClientMessage(playerid, COLOR_GRAD2, "| 15 จุดเอายา      21 โรงเรียน");
			SendClientMessage(playerid, COLOR_GRAD2, "| 16 จุดเอาดินปืน      22 สถานีตำรวจ");
			SendClientMessage(playerid, COLOR_GRAD2, "| 17 จุดส่งดินปืน      23 พับชานเมือง");
			SendClientMessage(playerid, COLOR_GRAD2, "| 18 จุด AFK      24 พับหน้าอู่");
			SendClientMessage(playerid, COLOR_GRAD2, "| 19 จุด ATM      25 จุดATMชานเมือง");
			SendClientMessage(playerid, COLOR_GRAD2, "| 26 ร้านขายรถ");
			SendClientMessage(playerid, COLOR_GRAD2, "| หยุดระบบ GPS /cleargps");
			return 1;
		}
		if (gps == 14)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to 24-7", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1983.4200,83.1155,27.6875,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 15)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to get drug", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1709.3248,404.6136,7.4190,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 16)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to get materials", 5000, 1);
		            SetPlayerCheckpoint(playerid, -2542.5137,1216.1669,37.5286,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 17)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to deliver materials", 5000, 1);
		            SetPlayerCheckpoint(playerid, -2119.5469,-178.5679,35.3203,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 18)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to AFK PARK", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1969.3550,137.9173,27.6875,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 19)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to ATM", 5000, 1);
		            SetPlayerCheckpoint(playerid, -2034.6356,-100.6438,35.1641,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 20)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to Bank", 5000, 1);
		            SetPlayerCheckpoint(playerid, -1618.9828,866.7359,7.6953,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 21)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to School License", 5000, 1);
		            SetPlayerCheckpoint(playerid,-2029.5083,-96.1286,35.1641,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 22)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to Police station", 5000, 1);
		            SetPlayerCheckpoint(playerid,-1605.4944,711.7495,13.2964,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 23)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to Red Bidge Bar", 5000, 1);
		            SetPlayerCheckpoint(playerid,-2624.2356,1410.5706,7.0938,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 24)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to bar", 5000, 1);
		            SetPlayerCheckpoint(playerid,-1984.8771,4.5660,34.5249,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 25)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to ATM", 5000, 1);
		            SetPlayerCheckpoint(playerid,-2657.3792,1341.9497,7.0430,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps == 26)
		{
		            GameTextForPlayer(playerid, "~w~Gps is set to Car shop", 5000, 1);
		            SetPlayerCheckpoint(playerid,-2236.3728,292.0458,35.6449,8.0);
		            GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s ได้เปิดเครื่อง GPS", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					CP[playerid] = 99;
		}
		if (gps != 1 && gps != 2 && gps != 3 && gps != 4 && gps != 5 && gps != 6 && gps != 7 && gps != 8 && gps != 9 && gps != 10 && gps != 11 && gps != 12 && gps != 13 && gps != 14 && gps != 15)
		{
			SendClientMessage(playerid, COLOR_GREY, "   เลขระบบ GPS ผิดพลาด !");
			return 1;
		}
		if (gps != 16 && gps != 17 && gps != 18 && gps != 19 && gps != 20 && gps != 21 && gps != 22 && gps != 23 && gps != 24 && gps != 25 && gps != 26)
		{
			SendClientMessage(playerid, COLOR_GREY, "   เลขระบบ GPS ผิดพลาด !");
			return 1;
		}
    	}
    if(strcmp(cmd, "/cgps", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gTeam[playerid] != 2)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ตำรวจ !");
				return 1;
		    }
		    if(PlayerOnMission[playerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   On a mission right now, can't use this command !");
			    return 1;
			}
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   You've already searched for someone, wait 2 minutes !");
			    return 1;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /cgps [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "คุณไม่สามารถตามหาตน!"); return 1; }
			        new points;
			        new level = PlayerInfo[playerid][pDetSkill];
					if(level >= 0 && level <= 50)
					{ points = 4; }
					else if(level >= 51 && level <= 100)
					{ points = 6; }
					else if(level >= 101 && level <= 200)
					{ points = 8; }
					else if(level >= 201 && level <= 400)
					{ points = 10; }
					else if(level >= 401)
					{ points = 12; }
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(giveplayerid, X,Y,Z);
					SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					FindTime[playerid] = 1;
					FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Detective Skill is now Level 2, soon you are able to find Faction Members."); }
					else if(PlayerInfo[playerid][pDetSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Detective Skill is now Level 3, soon you are able to find Faction Members."); }
					else if(PlayerInfo[playerid][pDetSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Detective Skill is now Level 4, you are now able to find Faction Members."); }
					else if(PlayerInfo[playerid][pDetSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Detective Skill is now Level 5, you are now able to find Faction Members."); }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Invalid Name/ID !");
			}
		}
	    return 1;
	}
	if(strcmp(cmd, "/guard", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 8)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   You are not a Bodyguard!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /guard [playerid/PartOfName] [price]");
				return 1;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 1, or above 99999!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Cant offer protection to yourself !");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* You offerd protection to %s for $%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Bodyguard %s wants to protect you for $%d, (type /accept bodyguard) to accept.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						GuardOffer[giveplayerid] = playerid;
						GuardPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is offline!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/free", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   You are not a Lawyer!");
		        return 1;
		    }
		    if(PlayerInfo[playerid][pLawSkill] >= 401)
		    {
		        ApprovedLawyer[playerid] = 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /free [playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "You cannot Free yourself!"); return 1; }
					if(PlayerInfo[giveplayerid][pJailed] == 1 && ApprovedLawyer[playerid] == 1)
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* You freed %s out of jail.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* You were freed out of jail, by Lawyer %s.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						ApprovedLawyer[playerid] = 0;
						WantLawyer[giveplayerid] = 0;
						CallLawyer[giveplayerid] = 0;
						JailPrice[giveplayerid] = 0;
						PlayerInfo[giveplayerid][pJailTime] = 1;
						PlayerInfo[playerid][pLawSkill] ++;
						if(PlayerInfo[playerid][pLawSkill] == 50)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Lawyer Skill is now Level 2, you will earn more Money and quicker Reload Time."); }
						else if(PlayerInfo[playerid][pLawSkill] == 100)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Lawyer Skill is now Level 3, you will earn more Money and quicker Reload Time."); }
						else if(PlayerInfo[playerid][pLawSkill] == 200)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Lawyer Skill is now Level 4, you will earn more Money and quicker Reload Time."); }
						else if(PlayerInfo[playerid][pLawSkill] == 400)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Your Lawyer Skill is now Level 5, you will earn more Money and quicker Reload Time."); }
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Player didnt need a Lawyer / Player aint Jailed !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is offline!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd,"/cancel",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cancel __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: /cancel [name]");
				SendClientMessage(playerid, COLOR_GREY, "Available names: Sex, Drugs, Repair, Lawyer, Bodyguard, Live, Refill, Car, Boxing");
				SendClientMessage(playerid, COLOR_GREY, "Available names: Taxi, Bus, Medic, Mechanic, Paper, Ticket, Witness, Marriage, Divorce");
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
				return 1;
			}
			if(strcmp(x_job,"sex",true) == 0) {	SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
			else if(strcmp(x_job,"drugs",true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
			else if(strcmp(x_job,"repair",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
			else if(strcmp(x_job,"lawyer",true) == 0) { WantLawyer[playerid] = 0; CallLawyer[playerid] = 0; }
			else if(strcmp(x_job,"bodyguard",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
			else if(strcmp(x_job,"live",true) == 0) { LiveOffer[playerid] = 999; }
			else if(strcmp(x_job,"refill",true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; }
			else if(strcmp(x_job,"car",true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
			else if(strcmp(x_job,"boxing",true) == 0) { BoxOffer[playerid] = 999; }
			else if(strcmp(x_job,"paper",true) == 0) { PaperOffer[playerid] = 999; }
			else if(strcmp(x_job,"witness",true) == 0) { MarryWitnessOffer[playerid] = 999; }
			else if(strcmp(x_job,"marriage",true) == 0) { ProposeOffer[playerid] = 999; }
			else if(strcmp(x_job,"divorce",true) == 0) { DivorceOffer[playerid] = 999; }
			else if(strcmp(x_job,"ticket",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
			else if(strcmp(x_job,"medic",true) == 0) { if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   You are not the current Caller !"); return 1; } } }
			else if(strcmp(x_job,"mechanic",true) == 0) { if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   You are not the current Caller !"); return 1; } } }
			else if(strcmp(x_job,"taxi",true) == 0)
			{
			    if(TaxiCall < 999)
			    {
			        if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			        {
			            TaxiAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~You have~n~~r~Canceled the call", 5000, 1);
						TaxiCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						TaxiCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(TaxiAccepted[i] < 999)
						        {
							        if(TaxiAccepted[i] == playerid)
							        {
							            TaxiAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Taxi Caller~n~~r~Canceled the call", 5000, 1);
							            TaxiCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
							        }
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_job,"bus",true) == 0)
			{
			    if(BusCall < 999)
			    {
			        if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
			        {
			            BusAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~You have~n~~r~Canceled the call", 5000, 1);
						BusCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						BusCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(BusAccepted[i] < 999)
						        {
							        if(BusAccepted[i] == playerid)
							        {
							            BusAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Bus Caller~n~~r~Canceled the call", 5000, 1);
							            BusCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
							        }
						        }
						    }
						}
					}
				}
			}
			else { return 1; }
			format(string, sizeof(string), "* You have canceled: %s.", x_job);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}//not connected
		return 1;
	}
//ACCEPT COMMANDS (Cops)
	if(strcmp(cmd,"/accept",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Accept __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USAGE: accept [name]");
				SendClientMessage(playerid, COLOR_GREY, "Available names: Sex, Drugs, Repair, Lawyer, Bodyguard, Job, Live, Refill");
				SendClientMessage(playerid, COLOR_GREY, "Available names: Car, Taxi, Bus, Boxing, Medic, Mechanic, Paper, Ticket");
				SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
				return 1;
			}
	        if(strcmp(x_job,"car",true) == 0)
			{
			    if(CarOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(CarOffer[playerid]))
			        {
			            if(ScriptMoney[playerid] > CarPrice[playerid])
			            {
			                if(IsPlayerInVehicle(CarOffer[playerid], CarID[playerid]))
			                {
				                GetPlayerName(CarOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
				                new points;
				                PlayerInfo[CarOffer[playerid]][pCarSkill] ++;
				                if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 50)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Your Car Dealer Skill is now Level 2, Players that buy Cars from you can call it more often."); }
								else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 100)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Your Car Dealer Skill is now Level 3, Players that buy Cars from you can call it more often."); }
								else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 200)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Your Car Dealer Skill is now Level 4, Players that buy Cars from you can call it more often."); }
								else if(PlayerInfo[CarOffer[playerid]][pCarSkill] == 400)
								{ SendClientMessage(CarOffer[playerid], COLOR_YELLOW, "* Your Car Dealer Skill is now Level 5, Players that buy Cars from you can call it more often."); }
								new level = PlayerInfo[CarOffer[playerid]][pCarSkill];
								if(level >= 0 && level <= 50) { points = 1; }
								else if(level >= 51 && level <= 100) { points = 2; }
								else if(level >= 101 && level <= 200) { points = 3; }
								else if(level >= 201 && level <= 400) { points = 4; }
								else if(level >= 401) { points = 4; }
				                format(string, sizeof(string), "* You bought a Car for $%d, from Car Dealer %s. (You can use /callcar %d times)",CarPrice[playerid],giveplayer,points);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* You sold your Car to %s for $%d, the player can use /callcar %d times.",sendername,CarPrice[playerid],points);
								SendClientMessage(CarOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[CarOffer[playerid]][pPayCheck] += CarPrice[playerid];
								SafeGivePlayerMoney(playerid, -CarPrice[playerid]);
								RemovePlayerFromVehicle(CarOffer[playerid]);
								CarCalls[playerid] = points;
						        CarOffer[playerid] = 999;
								CarPrice[playerid] = 0;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   The Car Dealer is not in the offerd Car !");
						    	return 1;
							}
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You cant afford the Car !");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one offered to buy a Car !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"divorce",true) == 0)
			{
			    if(DivorceOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(DivorceOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
						{
						    GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* You have accepted %s's request to be his Marriage Witness.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s has accepted your request to be your Marriage Witness.", sendername);
							SendClientMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
							ClearMarriage(playerid);
							ClearMarriage(DivorceOffer[playerid]);
							PlayerInfo[playerid][pPhousekey] = 255;
							PlayerInfo[playerid][pPbiskey] = 255;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   The player that sent you the Divorce Papers is not near you !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one sent you any Divorce Papers !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"witness",true) == 0)
			{
			    if(MarryWitnessOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(MarryWitnessOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
						{
						    GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* You have accepted %s's request to be his Marriage Witness.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s has accepted your request to be your Marriage Witness.", sendername);
							SendClientMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
							MarryWitness[MarryWitnessOffer[playerid]] = playerid;
							MarryWitnessOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   The player that requested you to be his Marriage Witness is not near you !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one asked you to be his Marriage Witness !");
				    return 1;
				}
			}
	        else if(strcmp(x_job,"marriage",true) == 0)
			{
			    if(ProposeOffer[playerid] < 999)
			    {
			        if(!PlayerToPoint(10.0, playerid, -1988.6638,1117.8837,54.4726))
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   You are not at the Church in San Fierro !");
			            return 1;
			        }
			        if(IsPlayerConnected(ProposeOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
						{
						    if(MarryWitness[ProposeOffer[playerid]] == 999)
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   The proposer doesn't have a Marriage Witness !");
						        return 1;
						    }
						    if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
						    {
							    if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
								{
								    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "* You have accepted %s's request to be your Husband.", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "* %s has accepted your request to be your Wife.", sendername);
									SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "Priest: %s do you take %s as your lovely Husband? (type 'yes', anything else will reject the Marriage)", sendername, giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									MarriageCeremoney[playerid] = 1;
									ProposedTo[ProposeOffer[playerid]] = playerid;
									GotProposedBy[playerid] = ProposeOffer[playerid];
									MarryWitness[ProposeOffer[playerid]] = 999;
									ProposeOffer[playerid] = 999;
									return 1;
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "   The Marriage Witness is not near your proposer !");
								    return 1;
								}
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   The player that proposed to you is not near you !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one Proposed to you !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"ticket",true) == 0)
			{
			    if(TicketOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(TicketOffer[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
						{
				           	GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* You have paid the Ticket of $%d to Officer %s.", TicketMoney[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s has paid your Ticket of $%d.", sendername, TicketMoney[playerid]);
							SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
							SafeGivePlayerMoney(playerid, - TicketMoney[playerid]);
							SafeGivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
							TicketOffer[playerid] = 999;
							TicketMoney[playerid] = 0;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   The Officer is not near you !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one offered you a Ticket !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"paper",true) == 0)
			{
			    if(PaperOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(PaperOffer[playerid]))
			        {
			            if(BringingPaper[PaperOffer[playerid]] > 0)
			            {
			                if (ProxDetectorS(5.0, playerid, PaperOffer[playerid]))
							{
				            	GetPlayerName(PaperOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* You have accepted a Newspaper from Paper Boy %s (use /read paper, to read).", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s has accepted your Newspaper.", sendername);
								SendClientMessage(PaperOffer[playerid], COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pTitle]);
								strmid(Paper[playerid][pTitle], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pMaker]);
								strmid(Paper[playerid][pMaker], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine1]);
								strmid(Paper[playerid][pLine1], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine2]);
								strmid(Paper[playerid][pLine2], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine3]);
								strmid(Paper[playerid][pLine3], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine4]);
								strmid(Paper[playerid][pLine4], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine5]);
								strmid(Paper[playerid][pLine5], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine6]);
								strmid(Paper[playerid][pLine6], string, 0, strlen(string), 255);
								format(string, sizeof(string), "%s", Paper[PaperOffer[playerid]][pLine7]);
								strmid(Paper[playerid][pLine7], string, 0, strlen(string), 255);
								GotPaper[playerid] = 1;
								PaperOffer[playerid] = 999;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   The Paper Boy is not near you !");
							    return 1;
							}
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one offered you a Newspaper !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"boxing",true) == 0)
			{
			    if(BoxOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(BoxOffer[playerid]))
			        {
			            new points;
			            new mypoints;
			            GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
			            new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
						if(level >= 0 && level <= 50) { points = 40; }
						else if(level >= 51 && level <= 100) { points = 50; }
						else if(level >= 101 && level <= 200) { points = 60; }
						else if(level >= 201 && level <= 400) { points = 70; }
						else if(level >= 401) { points = 80; }
						if(PlayerInfo[playerid][pJob] == 12)
						{
							new clevel = PlayerInfo[playerid][pBoxSkill];
							if(clevel >= 0 && clevel <= 50) { mypoints = 40; }
							else if(clevel >= 51 && clevel <= 100) { mypoints = 50; }
							else if(clevel >= 101 && clevel <= 200) { mypoints = 60; }
							else if(clevel >= 201 && clevel <= 400) { mypoints = 70; }
							else if(clevel >= 401) { mypoints = 80; }
						}
						else
						{
						    mypoints = 30;
						}
						format(string, sizeof(string), "* You have accepted the Boxing Challenge from %s, and will fight with %d Health.",giveplayer,mypoints);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s has accepted your Boxing Challenge Request, you will fight with %d Health.",sendername,points);
						SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, string);
						SetPlayerHealth(playerid, mypoints);
						SetPlayerHealth(BoxOffer[playerid], points);
						SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
						SetPlayerPos(playerid, 762.9852,2.4439,1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
						SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
						TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
						GameTextForPlayer(playerid, "~r~Waiting", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Waiting", 3000, 1);
						new name[MAX_PLAYER_NAME];
						new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(playerid, name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "Boxing News: Boxing Champion %s will fight VS %s, in 60 seconds (Grove Street Gym).",  sendername, giveplayer);
							OOCOff(COLOR_WHITE,string);
							TBoxer = playerid;
							BoxDelay = 60;
						}
						GetPlayerName(BoxOffer[playerid], name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "Boxing News: Boxing Champion %s will fight VS %s, in 60 seconds (Grove Street Gym).",  giveplayer, sendername);
							OOCOff(COLOR_WHITE,string);
							TBoxer = BoxOffer[playerid];
							BoxDelay = 60;
						}
						BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
						if(BoxDelay < 1) { BoxDelay = 20; }
						InRing = 1;
						Boxer1 = BoxOffer[playerid];
						Boxer2 = playerid;
						PlayerBoxing[playerid] = 1;
						PlayerBoxing[BoxOffer[playerid]] = 1;
						BoxOffer[playerid] = 999;
						return 1;
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one offered you a Boxing Challenge !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"taxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You are not a Taxi Driver !");
				    return 1;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Taxi Call !");
				    return 1;
	            }
	            if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   On a mission right now, can't use this command !");
			        return 1;
			    }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* You have accepted the Taxi Call from %s, you will see the marker untill you have reached it.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Taxi Driver %s has accepted your Taxi Call please wait at your current Position.",sendername);
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Taxi Caller~n~~r~Goto redmarker", 5000, 1);
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   No-one called for a Taxi yet !");
			    	return 1;
	            }
			}
			else if(strcmp(x_job,"bus",true) == 0)
			{
			    if(TransportDuty[playerid] != 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You are not a Bus Driver !");
				    return 1;
			    }
	            if(BusCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Bus Call !");
				    return 1;
	            }
	            if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   On a mission right now, can't use this command !");
			        return 1;
			    }
	            if(BusCall < 999)
	            {
	                if(IsPlayerConnected(BusCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* You have accepted the Bus Call from %s, you will see the marker untill you have reached it.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Bus Driver %s has accepted your Bus Call please wait at your current Position.",sendername);
						SendClientMessage(BusCall, COLOR_LIGHTBLUE, string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusCall, X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						GameTextForPlayer(playerid, "~w~Bus Caller~n~~r~Goto redmarker", 5000, 1);
						BusCallTime[playerid] = 1;
						BusAccepted[playerid] = BusCall;
						BusCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   No-one called for a Bus yet !");
			    	return 1;
	            }
			}
			else if(strcmp(x_job,"medic",true) == 0)
			{
			    if(PlayerInfo[playerid][pMember] == 4 || PlayerInfo[playerid][pLeader] == 4)
			    {
		            if(MedicCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Medic Call !");
					    return 1;
		            }
		            if(PlayerOnMission[playerid] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   On a mission right now, can't use this command !");
				        return 1;
				    }
		            if(MedicCall < 999)
		            {
		                if(IsPlayerConnected(MedicCall))
		                {
		                    GetPlayerName(playerid, sendername, sizeof(sendername));
		                	GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
		                	format(string, sizeof(string), "* You have accepted the Medic Call from %s, you have 30 Seconds to get there.",giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "* After the 30 Seconds the Red Marker will dissapear.");
	                        format(string, sizeof(string), "* Medic %s has accepted your Medic Call please wait at your current Position.",sendername);
							SendClientMessage(MedicCall, COLOR_LIGHTBLUE, string);
							new Float:X,Float:Y,Float:Z;
							GetPlayerPos(MedicCall, X, Y, Z);
							SetPlayerCheckpoint(playerid, X, Y, Z, 5);
							GameTextForPlayer(playerid, "~w~Medic Caller~n~~r~Goto redmarker", 5000, 1);
							MedicCallTime[playerid] = 1;
							MedicCall = 999;
							return 1;
						}
		            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   No-one called for a Medic yet !");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You are not a Medic !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"mechanic",true) == 0)
			{
			    if(PlayerInfo[playerid][pJob] != 7)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   You are not a Car Mechanic !");
				    return 1;
			    }
	            if(MechanicCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   You have already accepted a Mechanic Call !");
				    return 1;
	            }
	            if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   On a mission right now, can't use this command !");
			        return 1;
			    }
	            if(MechanicCall < 999)
	            {
	                if(IsPlayerConnected(MechanicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* You have accepted the Mechanic Call from %s, you have 30 Seconds to get there.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* After the 30 Seconds the Red Marker will dissapear.");
                        format(string, sizeof(string), "* Car Mechanic %s has accepted your Mechanic Call please wait at your current Position.",sendername);
						SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
						new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MechanicCall, X, Y, Z);
						SetPlayerCheckpoint(playerid, X, Y, Z, 5);
						GameTextForPlayer(playerid, "~w~Mechanic Caller~n~~r~Goto redmarker", 5000, 1);
						MechanicCallTime[playerid] = 1;
						MechanicCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   No-one called for a Car Mechanic yet !");
			    	return 1;
	            }
			}
		    else if(strcmp(x_job,"job",true) == 0)
			{
			    if(GettingJob[playerid] > 0)
			    {
			        if(PlayerInfo[playerid][pMember] > 21)
			        {
			            if(GettingJob[playerid] == 2 || GettingJob[playerid] == 5 || GettingJob[playerid] == 10)
			            {//Allow the 3 jobs for Family Members
			            }
			            else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Cant get a Job, you are in a Family !");
			            	return 1;
						}
			        }
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้ยืนยันว่าจะทำงานแล้ว, คุณจะต้องทำงานนี้ 5 ชั่วโมงจึงจะออกจากงานได้");
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ขอแสดงความยินดีคุณได้เข้าร่วมงานเรียบร้อยแล้ว, พิมพ์ /jobhelp เพื่อดูคำสั่งของงานคุณ");
			        PlayerInfo[playerid][pJob] = GettingJob[playerid];
			        GettingJob[playerid] = 0;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยุ่ที่จุดสมัครงาน!");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"refill",true) == 0)
			{
			    if(RefillOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(RefillOffer[playerid]))
			        {
			            if(ScriptMoney[playerid] > RefillPrice[playerid])
			            {
			                GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
			                new car = gLastCar[playerid];
			                new fuel;
			                PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
			                if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 2, you can add more Fuel to any Players Cars."); }
							else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 3, you can add more Fuel to any Players Cars."); }
							else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 4, you can add more Fuel to any Players Cars."); }
							else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400)
							{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 5, you can add more Fuel to any Players Cars."); }
							new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
							if(level >= 0 && level <= 50)
							{ fuel = 15; }
							else if(level >= 51 && level <= 100)
							{ fuel = 40; }
							else if(level >= 101 && level <= 200)
							{ fuel = 60; }
							else if(level >= 201 && level <= 400)
							{ fuel = 80; }
							else if(level >= 401)
							{ fuel = 100; }
			                format(string, sizeof(string), "* You refilled your car with %d%, for $%d by Car Mechanic %s.",fuel,RefillPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* You refilled %s's car with %d%, the $%d has been added to your PayCheck.",sendername,fuel,RefillPrice[playerid]);
							SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[RefillOffer[playerid]][pPayCheck] += RefillPrice[playerid];
							SafeGivePlayerMoney(playerid, -RefillPrice[playerid]);
							if(Gas[car] < 110) { Gas[car] += fuel; }
					        RefillOffer[playerid] = 999;
							RefillPrice[playerid] = 0;
							return 1;
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You cant afford the Refill !");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one offered to Refill your Car !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"live",true) == 0)
			{
			    if(LiveOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(LiveOffer[playerid]))
			        {
				        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
						{
						    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You are frozen till the Live Conversation ends.");
							SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "* You are frozen till the Live Conversation ends (use /live again).");
							TogglePlayerControllable(playerid, 1);
							TogglePlayerControllable(LiveOffer[playerid], 1);
							TalkingLive[playerid] = LiveOffer[playerid];
							TalkingLive[LiveOffer[playerid]] = playerid;
							LiveOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You are to far away from the News Reporter !");
							return 1;
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one gave you a Live Conversation offer !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"lawyer",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /accept lawyer [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (gTeam[playerid] == 2)
				{
				    if(IsPlayerConnected(giveplayerid))
				    {
				        if(giveplayerid != INVALID_PLAYER_ID)
				        {
				            if(PlayerInfo[giveplayerid][pJob] == 2)
				            {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* You allowed %s to free a Jailed Person.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
								format(string, sizeof(string), "* Officer %s approved (allowed) you to free a Jailed Person. (use /free)", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
								ApprovedLawyer[giveplayerid] = 1;
							    return 1;
							}
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Invalid action! (You are no cop / Player aint a Lawyer / Bad ID)");
				    return 1;
				}
			}
			else if(strcmp(x_job,"bodyguard",true) == 0)
			{
			    if(GuardOffer[playerid] < 999)
			    {
			        if(ScriptMoney[playerid] > GuardPrice[playerid])
				    {
					    if(IsPlayerConnected(GuardOffer[playerid]))
					    {
					        GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* You accepted the Protection for $%d from Bodyguard %s.",GuardPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s accepted your Protection, and the $%d was added to your PayCheck.",sendername,GuardPrice[playerid]);
							SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[GuardOffer[playerid]][pPayCheck] += GuardPrice[playerid];
							SafeGivePlayerMoney(playerid, -GuardPrice[playerid]);
					        GuardOffer[playerid] = 999;
							GuardPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You can't afford the Protection !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   No-one offerd you any Protection !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"drugs",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(ScriptMoney[playerid] > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrugs] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* คุณซื้อยาจำนวน %d กรัม ในราคา $%d จากคนขายยา %s.",DrugGram[playerid],DrugPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s ได้ซื้อยาของคุณ %d กรัม, เงินจำนวน $%d จะได้ตอนเพเดนะครับ.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pPayCheck] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrugsSkill] ++;
								SafeGivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrugs] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrugs] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 2, you can buy more Grams and Cheaper."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 3, you can buy more Grams and Cheaper."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 4, you can buy more Grams and Cheaper."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrugsSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Your Drug Dealer Skill is now Level 5, you can buy more Grams and Cheaper."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   You are fully loaded with Drugs, use them first !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You can't afford those Drugs !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   No-one offerd you any Drugs !");
			        return 1;
			    }
			}
			else if(strcmp(x_job,"sex",true) == 0)
			{
			    if(SexOffer[playerid] < 999)
				{
					if(ScriptMoney[playerid] > SexPrice[playerid])
			  		{
						if (IsPlayerConnected(SexOffer[playerid]))
						{
						    new Car = GetPlayerVehicleID(playerid);
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
						    {
								GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* You had sex with Whore %s, for $%d.", giveplayer, SexPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s had sex with you, the $%d was added to your PayCheck.", sendername, SexPrice[playerid]);
								SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[SexOffer[playerid]][pPayCheck] += SexPrice[playerid];
								SafeGivePlayerMoney(playerid, -SexPrice[playerid]);
								PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
								if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 2, you offer better Sex (health) and less chance on STD."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 3, you offer better Sex (health) and less chance on STD."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 4, you offer better Sex (health) and less chance on STD."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Your Sex Skill is now Level 5, you offer better Sex (health) and less chance on STD."); }
								if(STDPlayer[playerid] == 0)
								{
								    if(Condom[playerid] < 1)
									{
									    new Float:health;
									    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
									    if(level >= 0 && level <= 50)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 30.0); }
											new rand = random(sizeof(STD1));
											STDPlayer[playerid] = STD1[rand];
											STDPlayer[SexOffer[playerid]] = STD1[rand];
											if(STD1[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 30 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STD while having Sex."); }
											else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 30 Health + a Chlamydia because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Chlamydia because of the Sex."); }
											else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 30 Health + a Gonorrhea because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Gonorrhea because of the Sex."); }
											else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 30 Health + a Syphilis because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Syphilis because of the Sex."); }
										}
										else if(level >= 51 && level <= 100)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 60.0); }
											new rand = random(sizeof(STD2));
											STDPlayer[playerid] = STD2[rand];
											STDPlayer[SexOffer[playerid]] = STD2[rand];
											if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 60 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STD while having Sex."); }
											else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 60 Health + a Chlamydia because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Chlamydia because of the Sex."); }
											else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 60 Health + a Gonorrhea because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Gonorrhea because of the Sex."); }
											else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 60 Health + a Syphilis because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Syphilis because of the Sex."); }
										}
										else if(level >= 101 && level <= 200)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 90.0); }
											new rand = random(sizeof(STD3));
											STDPlayer[playerid] = STD3[rand];
											STDPlayer[SexOffer[playerid]] = STD3[rand];
											if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 90 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STD while having Sex."); }
											else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 90 Health + a Chlamydia because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Chlamydia because of the Sex."); }
											else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 90 Health + a Gonorrhea because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Gonorrhea because of the Sex."); }
											else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 90 Health + a Syphilis because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Syphilis because of the Sex."); }
										}
										else if(level >= 201 && level <= 400)
									    {
									        if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 120.0); }
											new rand = random(sizeof(STD4));
											STDPlayer[playerid] = STD4[rand];
											STDPlayer[SexOffer[playerid]] = STD4[rand];
											if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 120 Health + no STD while having Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You haven't got a STD while having Sex."); }
											else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 120 Health + a Chlamydia because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Chlamydia because of the Sex."); }
											else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 120 Health + a Gonorrhea because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Gonorrhea because of the Sex."); }
											else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You got 120 Health + a Syphilis because of the Sex."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* You got a Syphilis because of the Sex."); }
										}
										else if(level >= 401)
										{
										    if(GetPlayerHealth(playerid, health) < 150) {
											SetPlayerHealth(playerid, health + 150.0); }
											SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Your Sex Skill Level is so high you gave high health and No STD.");
											SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* The Whore's Sex Skill Level is so high you got high health and No STD.");
										}
				      				}
									else
									{
									    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* The player used a Condom.");
									    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You used a Condom.");
									    Condom[playerid] --;
									}
								}
								else
								{
								    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* That player was already infected with a STD, can't get another one.");
								    return 1;
								}
								SexOffer[playerid] = 999;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   You or the Whore are not both in a Car !");
							    return 1;
							}
						}//Connected or not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You can't afford the Sex!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   You dont have any Sex offerd by a Whore !");
				    return 1;
				}
			}
			else if(strcmp(x_job,"repair",true) == 0)
			{
			    if(RepairOffer[playerid] < 999)
			    {
			        if(ScriptMoney[playerid] > RepairPrice[playerid])
				    {
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        if(IsPlayerConnected(RepairOffer[playerid]))
					        {
						        GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        RepairCar[playerid] = GetPlayerVehicleID(playerid);
						        SetVehicleHealth(RepairCar[playerid], 1000.0);
								format(string, sizeof(string), "* You repaired your car for $%d by Car Mechanic %s.",RepairPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* You fixed %s's car, the $%d has been added to your PayCheck.",sendername,RepairPrice[playerid]);
								SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
				                if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 2, you can add more Fuel to any Players Cars."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 3, you can add more Fuel to any Players Cars."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 4, you can add more Fuel to any Players Cars."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Your Car Mechanic Skill is now Level 5, you can add more Fuel to any Players Cars."); }
								PlayerInfo[RepairOffer[playerid]][pPayCheck] += RepairPrice[playerid];
								SafeGivePlayerMoney(playerid, -RepairPrice[playerid]);
						        RepairOffer[playerid] = 999;
								RepairPrice[playerid] = 0;
								return 1;
							}
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   You can't afford the Repair !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   No-one offerd you to Repair your Car !");
			        return 1;
			    }
			}
			else { return 1; }
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/refill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 7)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   You are not a Car Mechanic!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /refill [playerid/PartOfName] [price]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 1, or above 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Can't do that!"); return 1; }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* You offerd %s to refill his car for $%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Car Mechanic %s wants to refill your car for $%d, (type /accept refill) to accept.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you / not in a car.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is offline.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/repair", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 7)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   You are not a Car Mechanic!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /repair [playerid/PartOfName] [price]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Price not lower then 1, or above 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Can't do that!"); return 1; }
				    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* You offerd %s to fix his car for $%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Car Mechanic %s wants to repair your car for $%d, (type /accept repair) to accept.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   That player is not near you / not in a car.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   That player is offline.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/callcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(CarCalls[playerid] > 0)
		    {
		        new Float:plocx,Float:plocy,Float:plocz;
	            GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(CarID[playerid],plocx,plocy+4, plocz);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Bought Car has arrived.");
				CarCalls[playerid] -= 1;
				format(string, sizeof(string), "* You can call your Bought Car for %d times more.", CarCalls[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Invalid action !");
		    }
		}
	    return 1;
	}
	if(strcmp(cmd, "/family", true) == 0 || strcmp(cmd, "/f", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/f)amily [family chat]");
				return 1;
			}
			if (gTeam[playerid] >= 5 || PlayerInfo[playerid][pFMember] < 255)
			{
			    new member = PlayerInfo[playerid][pMember];
			    new leader = PlayerInfo[playerid][pLeader];
			    if(member==6)
			    {
			        if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** เจ้าพ่อ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองเจ้าพ่อ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** มือขวา %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** นักเลง %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** สมาชิกใหม่ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** คนเฝ้าประตู %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** คนเฝ้าประตู %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
			    if(member==5)
			    {
			        if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** เจ้าพ่อ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองเจ้าพ่อ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** มือขวา %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** นักเลง %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** สมาชิกใหม่ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** คนเฝ้าประตู %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** คนเฝ้าประตู %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==8)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** หัวหน้านักล่าค่าหัว %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองหัวหน้านักล่าค่าหัว %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** เอเยนพิเศษ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** เอเยน %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** นักแม่นปืน %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** มือปืนอิสระ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** มือปืนอิสระ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==9)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ผู้ควบคุมสายข่าว %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ผู้ทำข่าวระดับภาค %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** นักข่าวระดับภาค %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ผู้ทำข่าวท้องถิ่น %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** นักข่าวท้องถิ่น %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ผู้รายงานข่าว %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ผู้รายงานข่าว %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==10)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** เจ้าของบริษัทแท็กซี่ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** ผู้ตรวจการบริษัทแท็กซี่ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** มือโปร %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** มืออาชีพ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** มือสมัครเล่น %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** มือใหม่หัดขับ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** มือใหม่หัดขับ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==11)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** หัวหน้านายทะเบียน %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองหัวหน้านายทะเบียน %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** ผู้จัดการ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** ผู้ฝึกสอน %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** ผู้ทำใบขับขี่ %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ผู้ฝึกหัด %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ผู้ฝึกหัด %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==12)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** หัวหน้าแก๊งค์ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองหัวหน้าแก๊งค์ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** มือขวา %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** นักเลง %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** คนดูแลหัวหน้า %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** เด็กใหม่ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** เด็กใหม่ %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==13)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** หัวหน้าแก๊งค์ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองหัวหน้าแก๊งค์ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** มือขวา %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** นักเลง %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** คนดูแลหัวหน้า %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** เด็กใหม่ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** เด็กใหม่ %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==14)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** หัวหน้าแก๊งค์ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองหัวหน้าแก๊งค์ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** มือขวา %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** นักเลง %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** คนดูแลหัวหน้า %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** เด็กใหม่ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** เด็กใหม่ %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==15)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** หัวหน้าแก๊งค์ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองหัวหน้าแก๊งค์ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** มือขวา %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** นักเลง %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** คนดูแลหัวหน้า %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** เด็กใหม่ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** เด็กใหม่ %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember],  0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
                else if(member==16)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** หัวหน้าแว็นบอย %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองหัวหน้าแว็นบอย %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** แว็นบอยปี3 %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** แว็นบอยปี2 %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** แว็นบอยปี1 %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** หัดแว็น %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** หัดแว็น %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==17)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** ประทานแก๊งปรตูผี %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองประทานแก๊งปรตูผ %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** แก๊งประตูผีขั้น 3 %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** แก๊งประตูผีขั้น 2 %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** แก๊งประตูผีขั้น 1 %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ผีเฝ้าประต %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ผีเฝ้าประต %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==18)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** เจ้าของตึก %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** รองทีมงานใต้ตึก %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** นักเลงใต้ตึกขั้นสูง %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** นักเลงใต้ตึก %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** คนเฝ้าตึก %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** ผีเฝ้าประต %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** ทีมงานใหม่ %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(member==20)
				{
				    if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** เจ้าพ่อRed blood %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** มือขวา %s: %s )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** สมาชิกRed blood ปี3 %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** สมาชิกRed blood ปี2 %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** สมาชิกRed blood ปี1 %s: %s ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** สมาชิกหน้าใหม่ %s: %s ))  **", sendername, result); }
					else { format(string, sizeof(string), "** สมาชิกหน้าใหม่่ %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMember], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==20)
				{
				    format(string, sizeof(string), "** เจ้าพ่อRed blood %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==5)
				{
				    format(string, sizeof(string), "** เจ้าพ่อ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==6)
				{
				    format(string, sizeof(string), "** เจ้าพ่อ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==8)
				{
				    format(string, sizeof(string), "** หัวหน้านักล่าค่าหัว %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==9)
				{
				    format(string, sizeof(string), "** ผู้ควบคุมสายข่าว %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==10)
				{
				    format(string, sizeof(string), "** เจ้าของบริษัทแท็กซี่ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==11)
				{
				    format(string, sizeof(string), "** หัวหน้านายทะเบียน %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==12)
				{
				    format(string, sizeof(string), "** หัวหน้าแก๊งค์ %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==13)
				{
				    format(string, sizeof(string), "** หัวหน้าแก๊งค์ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==14)
				{
				    format(string, sizeof(string), "** หัวหน้าแก๊งค์ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==15)
				{
				    format(string, sizeof(string), "** หัวหน้าแก๊งค์ %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==16)
				{
				    format(string, sizeof(string), "** หัวหน้าแว็นบอย %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==17)
				{
				    format(string, sizeof(string), "** ประทานแก๊งปรตูผี  %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(leader==18)
				{
				    format(string, sizeof(string), "** เจ้าของตึก  %s: %s )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLeader], 0x00F6F6AA, string);
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "%s(พูดคุยทางวิทยุ): %s", sendername, result);
					ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else if(PlayerInfo[playerid][pFMember] < 255)
			    {
			        if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** Godfather %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** Underboss %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** Capo %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** Soldier %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** Associate %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** Outsider %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Outsider %s: %s. )) **", sendername, result); }
					SendNewFamilyMessage(PlayerInfo[playerid][pFMember], 0x00F6F6AA, string);
				}
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   you are not part of a Family!");
				return 1;
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/news", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
			    new newcar = GetPlayerVehicleID(playerid);
			    if(PlayerInfo[playerid][pMuted] == 1)
			    {
					SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
					return 1;
			    }
				if(newcar == 73 || newcar == 74 || newcar == 75)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /news [newstext]");
						return 1;
					}
					format(string, sizeof(string), " สำนักงานข่าว Agency %s: %s", sendername, result);
					OOCNews(COLOR_NEWS,string);
					PlayerInfo[playerid][pNewsSkill] ++;
					if(PlayerInfo[playerid][pNewsSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your News Reporter Skill is now Level 2, soon you are able to Fly the News Chopper and talk Live."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your News Reporter Skill is now Level 3, soon you are able to Fly the News Chopper and talk Live."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your News Reporter Skill is now Level 4, you can fly the News Chopper now."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Your News Reporter Skill is now Level 5, you can now talk Live with any person you want."); }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ในรถที่จะประกาศข่าว !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่นักข่าว !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/live", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Live Conversation ended.");
			        SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* จบการสัมภาษณ์");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return 1;
			    }
			    if(PlayerInfo[playerid][pNewsSkill] < 400)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   คุณยังมีสกิลนักข่าวไม่พอที่จะสัมภาษณ์ได้ !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /live [playerid/PartOfName]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถช่วยตัวเองสัมภาษณ์ได้!"); return 1; }
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* คุณชวน %s สัมภาษณ์", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s ต้องการสัมภาษณ์คุณ (พิมพ์ /accept live)", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้อยู่ใกล้คุณ !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้ออนไลน์อยู่ !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่นักข่าว !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/selldrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pJob] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่นักขายยา!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /selldrugs [playerid/PartOfName] [ammount] [price]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   ห้ามต่ำกว่า 1, และห้ามเกิน 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   ราคาห้ามต่ำกว่า $1, และห้ามเกิน $99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrugs]) { SendClientMessage(playerid, COLOR_GREY, "   คุณไม่มียามากขนาดนั้น !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถขายยาให้กันตนเองได้!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* คุณได้ขายยาให้ %s จำนวน %d เม็ด, ในราคา $%d ", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* นักขายยา %s ได้ขายยาจำนวน %d เม็ดให้กับคุณ, ในราคา $%d, (พิมพ์ /accept drugs) เพื่อยอมรับ", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "  ผู้เล่นนั้นไม่ได้อยู่ใกล้คุณ !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้ออนไลน์อยู่");
			}
		}
		return 1;
	}
    if(strcmp(cmdtext, "/usedrugs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถกินยาในขณะที่คุณชกมวยอยู่ได้ !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pDrugs] > 1)
			{
			    PlayerStoned[playerid] += 1;
			    if(PlayerStoned[playerid] >= 2) { GameTextForPlayer(playerid, "~w~You are~n~~p~Stoned", 4000, 1); }
			    new Float:health;
			    GetPlayerHealth(playerid, health);
			    if(PlayerInfo[playerid][pDrugPerk] > 0)
			    {
			        new hp = 2 * PlayerInfo[playerid][pDrugPerk]; hp += 20;
					SetPlayerHealth(playerid, health + hp);
			    }
			    else
			    {
			        SetPlayerHealth(playerid, health + 20.0);
			    }
			    SendClientMessage(playerid, COLOR_GREY, "  คุณได้กินยาไป 2 เม็ด!");
			    PlayerInfo[playerid][pDrugs] -= 2;
			    if(STDPlayer[playerid]==1)
				{
				     STDPlayer[playerid] = 0;
				     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You are no longer infected with a STD anymore because of the Drugs !");
				}
				else if(STDPlayer[playerid]==2)
				{
				     STDPlayer[playerid] = 1;
				     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You lowered the STD to Chlamydia because of the Drugs !");
				}
				else if(STDPlayer[playerid]==3)
				{
				     STDPlayer[playerid] = 2;
				     SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You lowered the STD to Gonorrhea because of the Drugs !");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่มียาเสพติด !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/healme", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if (PlayerToPoint(6, playerid,-2656.0393,635.0596,14.4531))
			{
	            if(STDPlayer[playerid] > 0)
	            {
					STDPlayer[playerid] = 0;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณไม่ติดโรค STD โรงพยาบาลจึงไม่สามารถรักษาคุณได้ !");
					SafeGivePlayerMoney(playerid, -1000);
					SendClientMessage(playerid, TEAM_CYAN_COLOR, " แพทย์: ได้รักษาโรคของคุณให้หายปกติในราคา $1000");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่ได้เป็นโรคใดๆทั้งสิ้น !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ที่โรงพยาบาล !");
	        }
        }
		return 1;
	}
	if(strcmp(cmd, "/eject", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	SendClientMessage(playerid,COLOR_GREY,"   คุณสามารถไล่ผู้เล่นลงจากรถของคุณได้ต่อเมื่อคุณอยู่ในรถและเป็นคนขับเท่านั้น !");
		            return 1;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /eject [playerid/PartOfName]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถไล่ตัวเองลงจากรถได้!"); return 1; }
				        if(IsPlayerInVehicle(playa,test))
				        {
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* คุณได้ไล่ %s ลงจากรถของคุณ!", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* คุณได้ถูกไล่ลงจากรถโดย %s !", PName);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							RemovePlayerFromVehicle(playa);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  ผู้เล่นนั้นไม่ได้อยู่ในรถของคุณ !");
						    return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " ผู้เล่นนั้นไม่ได้ Online!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณจะต้องเป็นคนขับรถเท่านั้นจึงจะไล่ผู้เล่นที่อยู่ในรถได้ !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sex", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerInfo[playerid][pJob] == 3)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
					SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ในรถ !");
					return 1;
			    }
			    new Car = GetPlayerVehicleID(playerid);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /sex [playerid/PartOfName] [price]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new money;
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   ห้ามต่ำกว่า $1, และห้ามเกิม $99999!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถมีเพศสัมพันธ์กับตนเองได้!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
						    {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* คุณได้ชวน %s เพศสัมพันธ์ด้วยกันในราคา $%d.", giveplayer, money);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* โสเภณี %s ได้ชวนคุณมีเพศสัมพันธ์กันในราคา $%d (พิมพ์ /accept sex) เพื่อยอมรับ", sendername, money);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					            SexOffer[giveplayerid] = playerid;
					            SexPrice[giveplayerid] = money;
				            }
				            else
				            {
				                SendClientMessage(playerid, COLOR_GREY, "   คุณและผู้เล่นนั้นต้องอยู่ในรถด้วยกัน !");
				                return 1;
				            }
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้อยู่ใกล้คุณ !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นนั้นไม่ได้ Online !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่โสเภณี !");
			}
		}//not connected
		return 1;
		}
	if(strcmp(cmd, "/wanted", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pMember] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pMember] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pMember] == 3 || PlayerInfo[playerid][pLeader] == 3|| PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19|| PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21|| PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
			{
				new x;
				SendClientMessage(playerid, COLOR_GREEN, "รายชื่อผู้มีความต้องการตัว");
			    for(new i=0; i < MAX_PLAYERS; i++) {
					if(IsPlayerConnected(i))
					{
					    if(WantedLevel[i] >= 1)
					    {
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "%s%s: %d", string,giveplayer,WantedLevel[i]);
							x++;
							if(x > 3) {
							    SendClientMessage(playerid, COLOR_YELLOW, string);
							    x = 0;
								format(string, sizeof(string), "");
							} else {
								format(string, sizeof(string), "%s, ", string);
							}
						}
					}
				}
				if(x <= 3 && x > 0) {
					string[strlen(string)-2] = '.';
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช้ ตำรวจ/FBI/นาวิกโยธิน !");
			}
		}//not connected
		return 1;
	}
//jaillist--
    if(strcmp(cmd, "/jaillist", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
            if(IsACop(playerid) || PlayerInfo[playerid][pJob] == 2)
			{
				new x;
				SendClientMessage(playerid, COLOR_DBLUE, "-= รายชื่อนักโทษ =-");
			    for(new i=0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
					    if(PlayerInfo[i][pJailTime] > 0)
					    {
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "%s%s(%d): %d", string,giveplayer,i,PlayerInfo[i][pJailTime]);
							x++;
							if(x > 3)
							{
							    SendClientMessage(playerid, COLOR_YELLOW, string);
							    x = 0;
								format(string, sizeof(string), "");
							}
							else
							{
								format(string, sizeof(string), "%s, ", string);
							}
						}
					}
				}
				if(x <= 3 && x > 0) {
					string[strlen(string)-2] = '.';
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ ตำรวจ / FBI / ทหาร !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/dropcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerInfo[playerid][pJob] == 5)
			{
			    if(PlayerOnMission[playerid] > 0)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   โปรดดรอปรถของคุณก่อน !");
			        return 1;
			    }
		        if(PlayerInfo[playerid][pCarTime] == 0)
		        {
		            GameTextForPlayer(playerid, "~w~Car Selling ~n~~r~Drop the car at the Crane", 5000, 1);
		            CP[playerid] = 1;
		            SetPlayerCheckpoint(playerid, -1548.3618,123.6438,3.2966,8.0);
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   คุณได้ขโมยรถไปส่งแล้ว, โปรดรออีกซักครู่เพื่อที่จะส่งอีก !");
		        }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่นักขโมยรถ !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/quitjob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		    if(PlayerInfo[playerid][pJob] > 0)
		    {
		        if(PlayerInfo[playerid][pDonateRank] > 0)
		        {
		            if(PlayerInfo[playerid][pContractTime] >= 2)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณใช้เวลา 1 ชั่วโมงในการออกอาชีพ สำเร็จแล้ว");
					    PlayerInfo[playerid][pJob] = 0;
					    PlayerInfo[playerid][pChar] = 0;
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 2 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* คุณยังเหลือเวลา %d ชั่วโมงในการออกจากอาชีพ", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
		        }
		        else
		        {
					if(PlayerInfo[playerid][pContractTime] >= 10)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณใช้เวลา 5 ชั่วโมงในการออกอาชีพ สำเร็จแล้ว");
					    PlayerInfo[playerid][pJob] = 0;
					    PlayerInfo[playerid][pChar] = 0;
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 10 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* คุณยังเหลือเวลา %d ชั่วโมงในการออกจากอาชีพ", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่ได้ประกอบอาชีพ !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/bail", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pJailed]==1)
			{
			    if(JailPrice[playerid] > 0)
			    {
			        if(ScriptMoney[playerid] > JailPrice[playerid])
			        {
			            format(string, sizeof(string), " ค่าประกันตัวของคุณคือ: $%d /bail เพื่อประกันตัวออกมาจากคุก", JailPrice[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SafeGivePlayerMoney(playerid, -JailPrice[playerid]);
						JailPrice[playerid] = 0;
						WantLawyer[playerid] = 0; CallLawyer[playerid] = 0;
						PlayerInfo[playerid][pJailTime] = 1;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GRAD1, "   คุณมีเงินไม่พอที่จะประกันตัวได้ !");
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "   ตำรวจไม่อณุญาติให้คุณประกันตัวได้ !");
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   คุณไม่ได้อยู่ในคุก !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/clear", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	 		if(PlayerInfo[playerid][pAdmin] >= 2||PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1||PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2||PlayerInfo[playerid][pMember] == 3||PlayerInfo[playerid][pLeader] == 3|| PlayerInfo[playerid][pMember] == 19 || PlayerInfo[playerid][pLeader] == 19|| PlayerInfo[playerid][pMember] == 21 || PlayerInfo[playerid][pLeader] == 21|| PlayerInfo[playerid][pMember] == 22 || PlayerInfo[playerid][pLeader] == 22)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /clear [playerid/PartOfName]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "คุณไม่สามารถ ลบล้างความผิดให้กับตนเองได้"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "** คุณได้ลบล้างความผิดทั้งหมดให้กับคุณ %s เรียบร้อยแล้ว", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "** เจ้าหน้าที่ %s ได้ลบล้างความผิดทั้งหมดให้กับคุณเรียบร้อยแล้ว", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "** เจ้าหน้าที่ %s ได้ลบล้างความผิดให้ %s", sendername, giveplayer);
						SendTeamMessage(2, TEAM_BLUE_COLOR, string);
						WantedPoints[giveplayerid] = 0;
						WantedLevel[giveplayerid] = 0;
						SetPlayerStar(giveplayerid);
						ClearCrime(giveplayerid);
						if(gTeam[giveplayerid]==4)
						{
						    gTeam[giveplayerid] = 3;
						    SetPlayerToTeamColor(giveplayerid);
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช้ ตำรวจ/FBI/นาวิกโยธิน !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/ticket", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] != 1 && PlayerInfo[playerid][pLeader] != 1&&PlayerInfo[playerid][pMember] != 21 && PlayerInfo[playerid][pLeader] != 21)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช่ตำรวจ !");
			    return 1;
			}
	        if(OnDuty[playerid] != 1 && PlayerInfo[playerid][pMember] == 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณยังไม่ได้หยิบตราจากล็อคเกอร์ !");
			    return 1;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ticket [playerid/PartOfName] [price] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ticket [playerid/PartOfName] [price] [reason]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   Ticket Money can't be below 1 or higher then 5000!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /ticket [playerid/PartOfName] [price] [reason]");
							return 1;
						}
						format(string, sizeof(string), "* คุณให้ใบสั่ง %s พร้อมทั้งค่าปรับ $%d, ข้อหา: %s", giveplayer, moneys, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* เจ้าหน้าที่ %s ให้เขียนใบสั่งให้คุณ พร้อมทั้งค่าปรับ $%d,ข้อหา: %s", sendername, moneys, (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* พิมพ์ /accept ticket, เพื่อจ่ายใบสั่ง");
						TicketOffer[giveplayerid] = playerid;
						TicketMoney[giveplayerid] = moneys;
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นไม่ได้อยู่ใกล้กับคุณ!");
						return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นไม่ได้อยู่ในเกมส์!");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/arrest", true) == 0 || strcmp(cmd, "/ar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pMember] == 1||PlayerInfo[playerid][pLeader] == 1||PlayerInfo[playerid][pMember] == 2||PlayerInfo[playerid][pLeader] == 2||PlayerInfo[playerid][pMember] == 19||PlayerInfo[playerid][pLeader] == 19||PlayerInfo[playerid][pMember] == 21||PlayerInfo[playerid][pLeader] == 21)
			{
				if(OnDuty[playerid] != 1 && PlayerInfo[playerid][pMember] == 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "    คุณยังไม่ได้หยิบตรา!");
				    return 1;
				}
		        if(!PlayerToPoint(9, playerid, -1606.3864,674.6657,-5.2422) && !PlayerToPoint(9, playerid, 1528.2435,-1677.9092,5.8906))
				{// Jail spot
				    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ได้อยู่ที่คุก,ไม่สามารถจับได้ ! !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/ar)rest [ค่าปรับ] [เวลาจำคุก] [ประกันตัว (ใส่(0=ไม่ให้ 1=ให้)] [ค่าประกัน]");
					return 1;
				}
				moneys = strval(tmp);
				if(moneys < 1 || moneys > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Jail Price can't be below $1 or above $99999 !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/ar)rest [ค่าปรับ] [เวลาจำคุก] [ประกันตัว (ใส่(0=ไม่ให้ 1=ให้)] [ค่าประกัน]");
					return 1;
				}
				new time = strval(tmp);
				if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "   Jail Time Minutes can't be below 1 or above 20 (Take the person to prison then) !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/ar)rest [ค่าปรับ] [เวลาจำคุก] [ประกันตัว (ใส่(0=ไม่ให้ 1=ให้)] [ค่าประกัน]");
					return 1;
				}
				new bail = strval(tmp);
				if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, "   Jail Bailing can't be below 0 or above 1 !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USAGE: (/ar)rest [ค่าปรับ] [เวลาจำคุก] [ประกันตัว (ใส่(0=ไม่ให้ 1=ให้)] [ค่าประกัน]");
					return 1;
				}
				new bailprice = strval(tmp);
				if(bailprice < 0 || bailprice > 3000000) { SendClientMessage(playerid, COLOR_GREY, "   Jail Bailing can't be below $0 or above $3000000 !"); return 1; }
				new suspect = GetClosestPlayer(playerid);
				if(IsPlayerConnected(suspect))
				{
					if(GetDistanceBetweenPlayers(playerid,suspect) < 5)
					{
						GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(WantedLevel[suspect] < 1)
						{
						    SendClientMessage(playerid, COLOR_GREY, "   ผู้เล่นจะต้องมีความต้องการตัวระดับ 1 ขึ้นไป !");
						    return 1;
						}
						format(string, sizeof(string), "* คุณได้จับกุม %s !", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						SafeGivePlayerMoney(suspect, -moneys);
						format(string, sizeof(string), " คุณถูกจับโดย %s ~n~    ค่าปรับ $%d", sendername, moneys);
						GameTextForPlayer(suspect, string, 5000, 5);
						ResetPlayerWeapons(suspect);
						if(PlayerInfo[playerid][pMember]==1||PlayerInfo[playerid][pLeader]==1)
						{
							format(string, sizeof(string), "<< เจ้าหน้าที่เมืองSF %s ได้จับกุมผู้ต้องหา %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
						}
						else if(PlayerInfo[playerid][pMember]==21||PlayerInfo[playerid][pLeader]==21)
						{
							format(string, sizeof(string), "<< เจ้าหน้าที่เมืองLS %s ได้จับกุมผู้ต้องหา %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
						}
                        else if(PlayerInfo[playerid][pMember]==19||PlayerInfo[playerid][pLeader]==19)
						{
							format(string, sizeof(string), "<< เจ้าหน้าที่องกรณ์ลับ%s ได้จับกุมผู้ต้องหา %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
						}
						else if(PlayerInfo[playerid][pMember]==2||PlayerInfo[playerid][pLeader]==2)
						{
							format(string, sizeof(string), "<< เจ้าหน้าที่ FBI %s ได้จับกุม %s >>", sendername, giveplayer);
							OOCNews(COLOR_LIGHTRED, string);
						}
						SetPlayerInterior(suspect, 10);
						SetPlayerPos(suspect,227.4012,110.1810,999.0156);
						ResetPlayerWeapons(suspect);
						PlayerInfo[suspect][pJailTime] = time * 60;
						if(bail == 1)
						{
							JailPrice[suspect] = bailprice;
							format(string, sizeof(string), " คุณติดคุก %d วินาที ค่าประกันตัว: $%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
							SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "** เจ้าหน้าที่ %s ได้จับกุมผู้ต้องหา %s", sendername, giveplayer);
							SendTeamMessage(2, TEAM_BLUE_COLOR, string);
							format(string, sizeof(string), "** เวลา %d วินาที ค่าประกันตัว: $%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
							SendTeamMessage(2, TEAM_BLUE_COLOR, string);
						}
						else
						{
						    JailPrice[suspect] = 0;
							format(string, sizeof(string), " คุณติดคุก %d วินาที ค่าประกันตัว: ประกันตัวไม่ได้", PlayerInfo[suspect][pJailTime]);
							SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "** เจ้าหน้าที่ %s ได้จับกุมผู้ต้องหา %s", sendername, giveplayer);
							SendTeamMessage(2, TEAM_BLUE_COLOR, string);
							format(string, sizeof(string), "** เวลา %d วินาที ค่าประกันตัว: ไม่มีสามารถประกันตัวได้", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
							SendTeamMessage(2, TEAM_BLUE_COLOR, string);
						}
						PlayerInfo[suspect][pJailed] = 1;
				        PlayerInfo[suspect][pArrested] += 1;
						SetPlayerFree(suspect,playerid, " ถูกจับ");
						WantedPoints[suspect] = 0;
						WantedLevel[suspect] = 0;
						WantLawyer[suspect] = 1;
						SetPlayerStar(playerid);
						TogglePlayerControllable(suspect, 1);
						PlayerCuffed[suspect] = 0;
					}//distance
				}//not connected
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   No-one close enough to arrest.");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   คุณไม่ใช้ ตำรวจ !");
			    return 1;
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/contract", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /contract [playerid/PartOfName] [amount]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: /contract [playerid/PartOfName] [amount]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 10000 || moneys > 100000) { SendClientMessage(playerid, COLOR_GREY, "   จำนวนเงินห้ามต่ำกว่า $10000, และห้ามเกิน $100000!"); return 1; }
			if(PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, " คุณต้องมีเลเวล 2 หรือมากกว่า คุณถึงจะจ้างฆ่าได้");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(PlayerInfo[giveplayerid][pMember] == 8 && PlayerInfo[playerid][pMember] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   คุณเป็นนักล่าค่าหัวไม่สามารถจ้างฆ่าได้!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pLeader] == 8 && PlayerInfo[playerid][pMember] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   คุณเป็นนักล่าค่าหัวไม่สามารถจ้างฆ่าได้!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pMember] == 8||PlayerInfo[giveplayerid][pLeader] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   คุณไม่สามารถจ้างฆ่านักล่าค่าหัวได้ !");
				        return 1;
				    }
				    if(gTeam[giveplayerid] == 2 && moneys != 100000)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   คุณจะต้องใช้เงิน $100000 หรือมากกว่าในการจ้างฆ่าตำรวจ !");
				        return 1;
				    }
				    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, " คุณไม่สามารถจ้างฆ่าตนเองได้!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					playermoney = ScriptMoney[playerid];
					if (moneys > 0 && playermoney >= moneys)
					{
						SafeGivePlayerMoney(playerid, (0 - moneys));
						PlayerInfo[giveplayerid][pHeadValue]+=moneys;
						format(string, sizeof(string), " %s ได้จ้างฆ่า %s, ในราคา $%d.",sendername, giveplayer, moneys);
						SendFamilyMessage(8, COLOR_YELLOW, string);
						format(string, sizeof(string), "* คุณได้จ้างฆ่า %s, ในราคา $%d.",giveplayer, moneys);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   คุณมีเงินไม่พอที่จะจ้างฆ่าได้");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   %d ไม่ได้อยู่ในเกมส์", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	return 1;
}
//------------------------------------------------------------------------------------------------------
public HouseLevel(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new h = PlayerInfo[playerid][pPhousekey];
		if(h == 255) { return 0; }
		if(h <= 4) { return 1; }
		if(h >= 5 && h <= 9)  { return 2; }
		if(h >= 10 && h <= 18) { return 3; }
		if(h >= 19 && h <= 22) { return 4; }
		if(h >= 23 && h <= 25) { return 5; }
		if(h == 26) { return 6; }
		if(h == 27) { return 7; }
		if(h >= 28 && h <= 31) { return 7; }
	}
	return 0;
}

public CHouseLevel(houseid)
{
	if(houseid <= 4) { return 3; }
	if(houseid >= 29 && houseid <= 30) { return 4; }
	if(houseid >= 5 && houseid <= 9) { return 5; }
	if(houseid >= 10 && houseid <= 18 || houseid == 28) { return 7; }
	if(houseid >= 19 && houseid <= 22) { return 8; }
	if(houseid >= 23 && houseid <= 25) { return 9; }
	if(houseid == 26) { return 10; }
	if(houseid == 27) { return 11; }
	if(houseid >= 28 && houseid <= 31) { return 12; }
	return 0;
}

public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}

public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

public CustomPickups()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new string[128];
	NameTimer();
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerPos(i, oldposx, oldposy, oldposz);
			new tmpcar = GetPlayerVehicleID(i);
			if(oldposx!=0.0 && oldposy!=0.0 && oldposz!=0.0)
			{
				for(new h = 0; h < sizeof(SBizzInfo); h++)
				{
					if(IsATruck(tmpcar) && PlayerToPoint(10.0, i, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~Products Required~w~: %d~n~~y~Price per Product: ~w~: $%d~n~~g~Funds: ~w~: $%d",SBizzInfo[h][sbMessage],(SBizzInfo[h][sbMaxProducts]-SBizzInfo[h][sbProducts]),SBizzInfo[h][sbPriceProd],SBizzInfo[h][sbTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
					if(PlayerToPoint(2.0, i, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]))
					{
						if(SBizzInfo[h][sbOwned] == 1)
						{
							format(string, sizeof(string), "~w~%s~w~~n~Owner : %s~n~Extortion by : %s~n~Entrance Fee : ~g~$%d ~w~Level : %d ~n~to enter type /enter",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded]);
						}
						else
						{
							format(string, sizeof(string), "~w~%s~w~~n~This Business is for sale~n~Cost: ~g~$%d ~w~Level : %d ~n~to buy this Business type /buybiz",SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
						}
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
				for(new h = 0; h < sizeof(HouseInfo); h++)
				{
					if(PlayerToPoint(2.0, i, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]))
					{
						if(HouseInfo[h][hOwned] == 1)
						{
							if(HouseInfo[h][hRentabil] == 0)
							{
								format(string, sizeof(string), "~w~This House is owned by~n~%s~n~Level : %d",HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
							}
							else
							{
								format(string, sizeof(string), "~w~This House is owned by~n~%s~n~Rent: $%d Level : %d~n~Type /rentroom to rent a room",HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
							}
							GameTextForPlayer(i, string, 5000, 3);
							return 1;
						}
						else
						{
							format(string, sizeof(string), "~w~This House is for sale~n~Discription: %s ~n~Cost: ~g~$%d~n~~w~ Level : %d~n~to buy this house type /buyhouse",HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
						}
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
				for(new h = 0; h < sizeof(BizzInfo); h++)
				{
					if(IsATruck(tmpcar) && PlayerToPoint(10.0, i, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
					{
						format(string, sizeof(string), "~w~%s~n~~r~Products Required~w~: %d~n~~y~Price per Product: ~w~: $%d~n~~g~Funds: ~w~: $%d",BizzInfo[h][bMessage],(BizzInfo[h][bMaxProducts]-BizzInfo[h][bProducts]),BizzInfo[h][bPriceProd],BizzInfo[h][bTill]);
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
					if(PlayerToPoint(2.0, i, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]))
					{
						if(BizzInfo[h][bOwned] == 1)
						{
							format(string, sizeof(string), "~w~%s~w~~n~Owner : %s~n~Extortion by : %s~n~Entrance Fee : ~g~$%d ~w~Level : %d ~n~to enter type /enter",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded]);
						}
						else
						{
							format(string, sizeof(string), "~w~%s~w~~n~This Business is for sale~n~Cost: ~g~$%d ~w~Level : %d ~n~to buy this Business type /buybiz",BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded]);
						}
						GameTextForPlayer(i, string, 5000, 3);
						return 1;
					}
				}
			}//custompickups end
			if (PlayerToPoint(1.0, i, -1709.3248,404.6136,7.4190))
			{//Buyable Drugs for Drug Dealers
			    GameTextForPlayer(i, "~w~Type /get drugs, to get some ~r~Drugs~y~~n~Skill Level matters to price", 5000, 3);
			}
			else if (PlayerToPoint(8.0, i,-1571.713013,665.608154,6.336499))
			{
				if(IsACop(i))
				{
					MoveDynamicObject(pdngate,-1571.828735, 656.457214, 6.354377, 3.5);
     				SetTimer("GateClose", 4000, 0);
 				}
			}
			else if (PlayerToPoint(8.0, i,-1701.770020,679.915344,24.057503))
			{
				if(IsACop(i))
				{
					MoveDynamicObject(pdgate,-1701.773193, 670.980530, 24.041584, 3.5);
     				SetTimer("GateClose", 4000, 0);
 				}
			}
			else if (PlayerToPoint(2.0, i,-1526.1824,485.4718,7.1797))
			{
				if(PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3|| PlayerInfo[i][pLeader] == 19|| PlayerInfo[i][pMember] == 19)
				{
					MoveDynamicObject(agate, -1534.51,482.789,2.96789,2.5);
     				SetTimer("aGateClose", 10000, 0);
 				}
			}
			else if (PlayerToPoint(2.0, i,-1522.0416,480.9301,7.1875))
			{
				if(PlayerInfo[i][pMember] == 3 || PlayerInfo[i][pLeader] == 3|| PlayerInfo[i][pLeader] == 19|| PlayerInfo[i][pMember] == 19)
				{
					MoveDynamicObject(agate, -1534.51,482.789,2.96789,2.5);
     				SetTimer("aGateClose", 10000, 0);
 				}
			}
			else if (PlayerToPoint(2.0, i,-2203.6755,308.7095,35.1230))
			{
				if(PlayerInfo[i][pLevel] >= 1)
				{
					MoveDynamicObject(agencygate, -2202.26, 309.89, 37.6953,2.5);
     				SetTimer("agencyGateClose", 12000, 0);
 				}
			}
			else if (PlayerToPoint(2.0, i,-2190.6836,311.8052,35.3203))
			{
				if(PlayerInfo[i][pLevel] >= 1)
				{
					MoveDynamicObject(agencygate, -2202.26, 309.89, 37.6953,2.5);
     				SetTimer("agencyGateClose", 12000, 0);
 				}
			}
			else if (PlayerToPoint(1.0, i,-2766.2881,375.5615,6.3347))
			{
			    GameTextForPlayer(i, "~y~Welcome to the ~r~City Hall~n~~w~Type /enter to go in", 5000, 5);
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -2243.3049,-88.1410,35.3203))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Whore~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -1733.365, 1014.3129, 45.2147))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Detective~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -1704.573, 785.6325, 25.2808))
			{
			    if(PlayerInfo[i][pJob] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Lawyer~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, 500.9321, -78.2916, 998.7578))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Whore~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -2664.1751, 239.2328, 4.3359))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Drugs Dealer~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -1538.8371, 114.8688, 17.3225))
			{
			    if(PlayerInfo[i][pJob] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Car Jacker~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,-2050.8962,460.0262,35.1719))
			{
			    if(PlayerInfo[i][pMember] == 9 || PlayerInfo[i][pLeader] == 9) { GameTextForPlayer(i, "~w~Type ~r~/paper ~w~to create a newspaper",5000,3); }
			    else if(PlayerInfo[i][pJob] == 15) { GameTextForPlayer(i, "~w~Type ~r~/papers ~w~to see all the made newspapers",5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -1932.3859, 276.2117, 41.0391))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Car Mechanic~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -2649.605, 376.0661, 6.1562))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Bodyguard~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -2620.2071, 209.5256, 4.7696))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Arms Dealer~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -1952.164, 277.2182, 35.4687))
			{
			    if(PlayerInfo[i][pJob] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Car Dealer~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, 771.2932, -47.4572, 1000.5859))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Boxer~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i, -1962.1926,437.5759,35.1719))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Bus Driver~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,-77.7288,-1136.3896,1.0781))
			{
			    if(PlayerInfo[i][pJob] > 0 || PlayerInfo[i][pMember] > 0) {}
			    else { GameTextForPlayer(i, "~g~Welcome,~n~~y~you can become a ~r~Trucker~y~ here ~n~~w~Type /join if you wish to become one", 5000, 3); }
			}
			else if (GetPlayerState(i) == 1 && PlayerToPoint(1.0, i,1381.0413,-1088.8511,27.3906))
			{
			    GameTextForPlayer(i, "~g~Welcome,~n~~y~Use /mission to take on a Mission", 5000, 3);
			}
			else if (PlayerToPoint(1.0, i, -2032.7687,-117.4139,1035.1719))
			{
				GameTextForPlayer(i, "~w~Type /Buylicense", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, -2034.7958,-100.9361,35.1641) || PlayerToPoint(2.0, i, -2657.3792,1341.9497,7.0430))
			{
				GameTextForPlayer(i, "~g~ ATM ~n~ ~w~/atmhelp ~n~/balance ~n~/withdraw ~n~/transfer ~n~/lotto", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, -1615.2969,684.1339,7.1875))
			{
				GameTextForPlayer(i, "~w~Police Type /duty ~n~ ~w~On Curfew Type /swat", 5000, 5);
			}
            else if (PlayerToPoint(1.0, i, 1579.7631,-1636.1940,13.5595))
			{
				GameTextForPlayer(i, "~w~Type /duty /swat", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, -2656.0801,634.7403,14.4531))
			{
				GameTextForPlayer(i, "~w~Type /healme", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, -690.0998,941.1647,13.6328))
			{
				GameTextForPlayer(i, "~w~Type /duty", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, 2744.9077,-2453.8093,13.8623))
			{
				GameTextForPlayer(i, "~w~Type /duty", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, -1968.3264,308.4835,35.1719))
			{
				GameTextForPlayer(i, "~w~Type /rentcar", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, -2236.3728,292.0458,35.6449))
			{
				GameTextForPlayer(i, "~b~Type /buycar ~y~To buy car", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, -1983.4200,83.1155,27.6875))
			{
				GameTextForPlayer(i, "~y~Type /buy ~g~To buy some thing ~n~ /rob24 to rob 24/7", 5000, 5);
			}
			else if (PlayerToPoint(1.0, i, -1983.4200,83.1155,27.6875))
			{
				GameTextForPlayer(i, "~y~ Type /bankhelp ~n~ /robbank to robbank", 5000, 5);
			}
			else if(PlayerToPoint(1.0, i,-2446.9963,516.8070,30.3026))
			{
			    if(OrderReady[i] > 0)
			    {
			        switch (OrderReady[i])
			        {
			            case 1:
			            {
			                ResetPlayerWeapons(i);
			                GivePlayerWeapon(i, 23, 317); GivePlayerWeapon(i, 29, 600); GivePlayerWeapon(i, 25, 200); GivePlayerWeapon(i, 4, 1);
			                SafeGivePlayerMoney(i,- 0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* คุณได้หยิบอาวุธออกจากกระเป๋า.");
			            }
			            case 2:
			            {
			                ResetPlayerWeapons(i);
			                GivePlayerWeapon(i, 23, 317); GivePlayerWeapon(i, 29, 600); GivePlayerWeapon(i, 25, 20); GivePlayerWeapon(i, 31, 500); GivePlayerWeapon(i, 4, 1);
			                SafeGivePlayerMoney(i, - 1000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* คุณได้หยิบอาวุธออกจากกระเป๋า.");
			            }
			            case 3:
			            {
			                ResetPlayerWeapons(i);
			                GivePlayerWeapon(i, 23, 317); GivePlayerWeapon(i, 29, 600); GivePlayerWeapon(i, 25, 200); GivePlayerWeapon(i, 30, 600); GivePlayerWeapon(i, 4, 1);
			                SafeGivePlayerMoney(i, - 2000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* คุณได้หยิบอาวุธออกจากกระเป๋า.");
			            }
			            case 4:
			            {
			                ResetPlayerWeapons(i);
			                GivePlayerWeapon(i, 23, 317); GivePlayerWeapon(i, 29, 600); GivePlayerWeapon(i, 25, 200); GivePlayerWeapon(i, 31, 600); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 34, 200);
			                SafeGivePlayerMoney(i, - 8000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* คุณได้หยิบอาวุธออกจากกระเป๋า.");
			            }
			            case 5:
			            {
			                ResetPlayerWeapons(i);
			                GivePlayerWeapon(i, 23, 317); GivePlayerWeapon(i, 29, 600); GivePlayerWeapon(i, 25, 200); GivePlayerWeapon(i, 30, 600); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 34, 200);
			                SafeGivePlayerMoney(i, - 8500);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* คุณได้หยิบอาวุธออกจากกระเป๋า.");
			            }
			            case 6:
			            {
			                ResetPlayerWeapons(i);
			                GivePlayerWeapon(i, 23, 317); GivePlayerWeapon(i, 29, 600); GivePlayerWeapon(i, 25, 200); GivePlayerWeapon(i, 31, 600); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 34, 200);
			                SafeGivePlayerMoney(i, - 9500);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* คุณได้หยิบอาวุธออกจากกระเป๋า.");
			            }
			            case 7:
			            {
			                ResetPlayerWeapons(i);
			                GivePlayerWeapon(i, 23, 317); GivePlayerWeapon(i, 29, 600); GivePlayerWeapon(i, 25, 200); GivePlayerWeapon(i, 30, 600); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 34, 200);
			                SafeGivePlayerMoney(i, - 10000);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* คุณได้หยิบอาวุธออกจากกระเป๋า.");
			            }
			        }
			        OrderReady[i] = 0;
			    }
			}//Hitman delivery stuff
			else if(PlayerOnMission[i] > 0 && PlayMission[kToggle] == 0)
			{
			    if(MissionCheckpoint[i] == 1 && PlayerToPoint(10.0, i,PlayMission[kCP1][0],PlayMission[kCP1][1],PlayMission[kCP1][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText1]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText4]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText5]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText6]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 2;
				}
				else if(MissionCheckpoint[i] == 2 && PlayerToPoint(10.0, i,PlayMission[kCP2][0],PlayMission[kCP2][1],PlayMission[kCP2][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText2]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText7]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText8]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText9]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 3;
				}
				else if(MissionCheckpoint[i] == 3 && PlayerToPoint(10.0, i,PlayMission[kCP3][0],PlayMission[kCP3][1],PlayMission[kCP3][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText3]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText10]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText11]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText12]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 4;
				}
				else if(MissionCheckpoint[i] == 4 && PlayerToPoint(10.0, i,PlayMission[kCP4][0],PlayMission[kCP4][1],PlayMission[kCP4][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText4]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText13]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText14]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText15]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 5;
				}
				else if(MissionCheckpoint[i] == 5 && PlayerToPoint(10.0, i,PlayMission[kCP5][0],PlayMission[kCP5][1],PlayMission[kCP5][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText5]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "%s", PlayMission[kText16]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText17]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					format(string, sizeof(string), "%s", PlayMission[kText18]);
					SendClientMessage(i, COLOR_YELLOW2, string);
					MissionCheckpoint[i] = 6;
				}
				else if(MissionCheckpoint[i] == 6 && PlayerToPoint(10.0, i,PlayMission[kCP6][0],PlayMission[kCP6][1],PlayMission[kCP6][2]))
				{
				    RingTone[i] = 20;
				    format(string, sizeof(string), "%s", PlayMission[kGText6]);
					GameTextForPlayer(i, string, 8000, 3);
					format(string, sizeof(string), "..:: Mission Passed : %s | Reward received: $%d ::..", PlayMission[kTitle], PlayMission[kReward]);
					SendClientMessage(i, COLOR_GREEN, string);
					SafeGivePlayerMoney(i, PlayMission[kReward]);
					PlayerInfo[i][pMissionNr] = PlayerOnMission[i];
					MissionCheckpoint[i] = 0;
					PlayerOnMission[i] = 0;
				}
			}
		}
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
	new giver[MAX_PLAYER_NAME];
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[256];
	new string[256];
	new giveplayerid;
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		SendClientMessage(playerid, 0x33CCFFAA, "   คุณไม่สามารถพูดคุยได้, เพราะคุณเป็นใบ้ !");
		return 0;
	}
	if(SelectChar[playerid] == 255)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("next", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("next")))
		{
		    switch (SelectCharID[playerid])
			{
				case 1: //Police Force
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[0][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[0][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[1][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[1][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[2][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[2][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[3][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[3][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[4][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[4][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[5][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[5][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[6][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = JoinPed[6][0]; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[7][0]); SelectCharPlace[playerid] = 9; ChosenSkin[playerid] = JoinPed[7][0]; }
				    else if(SelectCharPlace[playerid] == 9) { SetPlayerSkin(playerid, JoinPed[8][0]); SelectCharPlace[playerid] = 10; ChosenSkin[playerid] = JoinPed[8][0]; }
				    else if(SelectCharPlace[playerid] == 10) { SetPlayerSkin(playerid, JoinPed[9][0]); SelectCharPlace[playerid] = 11; ChosenSkin[playerid] = JoinPed[9][0]; }
				    else if(SelectCharPlace[playerid] == 11) { SetPlayerSkin(playerid, JoinPed[10][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[10][0]; }
				}
				case 2: //FBI/ATF
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[11][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[11][0]; }
    			}
				case 3: //National Guard
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[14][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[14][0]; }
				}
				case 4: //Fire&Ambulance
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[16][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[16][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[17][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[17][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[18][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[18][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[19][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[19][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[20][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[20][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[21][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[21][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[22][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[22][0]; }
				}
				case 5: //La Cosa Nostra
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[23][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[23][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[24][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[24][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[25][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[25][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[26][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[26][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[27][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[27][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[28][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[28][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[29][0]); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = JoinPed[29][0]; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, JoinPed[30][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[30][0]; }
				}
				case 6: //Yakuza
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[31][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[31][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[32][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[32][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[33][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[33][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[34][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[34][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[35][0]); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = JoinPed[35][0]; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, JoinPed[36][0]); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = JoinPed[36][0]; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, JoinPed[37][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[37][0]; }
				}
				case 7: //President
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 66); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 66; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 163); SelectCharPlace[playerid] = 3;ChosenSkin[playerid] = 163; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 164); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 164; }
				}
				case 8: //Hitman Agency
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[38][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[38][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[39][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[39][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[41][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[41][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[42][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[42][0]; }
				}
				case 9: //News Reporters
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[43][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[43][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[44][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[44][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[45][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[45][0]; }
				}
				case 10: //Taxi Cab Company
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[46][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[46][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[47][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[47][0]; }
				}
				case 11: //Driving/Flying School
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[48][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[48][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[49][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[49][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[50][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[50][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[51][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[51][0]; }
				}
				case 12: //GROVE STREET
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[52][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[52][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[53][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[53][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[54][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[54][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[55][0]); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = JoinPed[55][0]; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, JoinPed[56][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[56][0]; }
				}
				case 13: //BALLAS
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[57][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[57][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[58][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[58][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[59][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[59][0]; }
				}
				case 14: //VAGOS
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[60][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[60][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[61][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[61][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[62][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[62][0]; }
				}
				case 15: //AZTECAS
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[63][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[63][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[64][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[64][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[65][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[65][0]; }
				}
				case 16: //Vance
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, JoinPed[66][0]); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = JoinPed[66][0]; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, JoinPed[67][0]); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = JoinPed[67][0]; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, JoinPed[68][0]); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = JoinPed[68][0]; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, JoinPed[69][0]); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = JoinPed[69][0]; }
				}
				
            }
		    return 0;
		}
		else if ((strcmp("done", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("done")))
		{
		    if(ChangePos2[playerid][1] == 1)
		    {
		        SetPlayerInterior(playerid, ChangePos2[playerid][0]);
		        SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
		        ChangePos2[playerid][1] = 0;
		        return 0;
		    }
		    PlayerInfo[playerid][pModel] = ChosenSkin[playerid];
		    PlayerInfo[playerid][pChar] = ChosenSkin[playerid];
		    SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pModel],0.0,0.0,0.0,0,0,0,0,0,0,0);
		    gTeam[playerid] = PlayerInfo[playerid][pTeam];
			SetPlayerToTeamColor(playerid);
			MedicBill[playerid] = 0;
			SpawnPlayer(playerid);
		    SelectCharPlace[playerid] = 0;
		    SelectCharID[playerid] = 0;
		    SelectChar[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Use 'next', or 'done'.");
		    return 0;
		}
	}
	if(RegistrationStep[playerid] > 0)
	{
	    if(RegistrationStep[playerid] == 1)
	    {
	        new idx;
	    	tmp = strtok(text, idx);
		    if((strcmp("ชาย", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("ชาย")))
			{
			    PlayerInfo[playerid][pSex] = 1;
			    SendClientMessage(playerid, COLOR_YELLOW2, "Ok, คุณเป็นผู้ชาย");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณเกิดวันที่เท่าไร? (ตอบ: วว/ดด/ปปปป)");
			    RegistrationStep[playerid] = 2;
			    return 0;
			}
			else if((strcmp("หญิง", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("หญิง")))
			{
			    PlayerInfo[playerid][pSex] = 2;
			    SendClientMessage(playerid, COLOR_YELLOW2, "Ok, คุณเป็นผู้หญิง");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณเกิดวันที่เท่าไร? (ตอบ: วว/ดด/ปปปป)");
			    RegistrationStep[playerid] = 2;
			    return 0;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณเป็น ชาย หรือ หญิง ? (ตอบ: ชาย หรือ หญิง)");
			}
			return 0;
		}
		else if(RegistrationStep[playerid] == 2)
	    {
	        new year, month,day;
			getdate(year, month, day);
	        new DateInfo[3][20];
			split(text, DateInfo, '/');
			if(year - strvalEx(DateInfo[2]) > 100 || strvalEx(DateInfo[2]) < 1 || strvalEx(DateInfo[2]) >= year)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณเกิดวันที่เท่าไร? (ตอบ: วว/ดด/ปปปป)");
			    return 0;
			}
			new check = year - strval(DateInfo[2]);
			if(check == year)
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณเกิดวันที่เท่าไร? (ตอบ: วว/ดด/ปปปป)");
			    return 0;
			}
			if(strval(DateInfo[1]) > month)
			{
			    check -= 1;
			}
			else if(strval(DateInfo[1]) == month && strval(DateInfo[0]) > day)
			{
			    check -= 1;
			}
			PlayerInfo[playerid][pAge] = check;
			format(string, sizeof(string), "Ok, คุณมีอายุ %d ปี",PlayerInfo[playerid][pAge]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			RegistrationStep[playerid] = 3;
			SendClientMessage(playerid, COLOR_LIGHTRED, "คุณอยากเกิดเมืองอะไร? (SF)");
			return 0;
	    }
	    else if(RegistrationStep[playerid] == 3)
	    {
	        new idx;
	    	tmp = strtok(text, idx);
		    if((strcmp("sf", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("SF")))
			{
			    PlayerInfo[playerid][pOrigin] = 1;
			    SendClientMessage(playerid, COLOR_YELLOW2, "Ok,คุณเกิดในเมือง SF");
			    SendClientMessage(playerid, COLOR_LIGHTRED, "ขอบคุณที่กรอกข้อมูล, คุณจะเข้าสู่บทเรียนของเรา.");
				RegistrationStep[playerid] = 0;
			    TutTime[playerid] = 1;
			    return 0;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณเกิดอยากเกิดเมืองอะไร? (ตอบ: SF)");
			}
			return 0;
	    }
		return 0;
	}
	if(DKT[playerid] > 0)
	{
	    if(DKT[playerid] == 1)
	    {
	        new idx;
	    	tmp = strtok(text, idx);
		    if((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
			{
			    SendClientMessage(playerid, COLOR_YELLOW2, "ถูกต้อง ข้อต่อไป...");
                SetTimerEx("DKT3", 5000, 0, "d", playerid);
			    return 0;
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณตอบผิด !");
			    TogglePlayerControllable(playerid, 1);
			    DKT[playerid] = 0;
			}
			return 0;
		}
  		else if(DKT[playerid] == 2)
	    {
	        new idx;
	    	tmp = strtok(text, idx);
		    if((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
			    SendClientMessage(playerid, COLOR_YELLOW2, "ถูกต้อง ข้อต่อไป...");
                SetTimerEx("DKT4", 5000, 0, "d", playerid);
			    return 0;
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณตอบผิด !");
			    TogglePlayerControllable(playerid, 1);
			    DKT[playerid] = 0;
			}
			return 0;
		}
		else if(DKT[playerid] == 3)
	    {
	        new idx;
	    	tmp = strtok(text, idx);
		    if((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
			    SendClientMessage(playerid, COLOR_YELLOW2, "ถูกต้อง ข้อต่อไป...");
                SetTimerEx("DKT5", 5000, 0, "d", playerid);
			    return 0;
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณตอบผิด !");
			    TogglePlayerControllable(playerid, 1);
			    DKT[playerid] = 0;
			}
			return 0;
		}
  		else if(DKT[playerid] == 4)
	    {
	        new idx;
	    	tmp = strtok(text, idx);
		    if((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
			    SendClientMessage(playerid, COLOR_YELLOW2, "ถูกต้อง ข้อต่อไป...");
                SetTimerEx("DKT6", 5000, 0, "d", playerid);
			    return 0;
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณตอบผิด !");
			    TogglePlayerControllable(playerid, 1);
			    DKT[playerid] = 0;
			}
			return 0;
		}
  		else if(DKT[playerid] == 5)
	    {
	        new idx;
	    	tmp = strtok(text, idx);
		    if((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
			    TogglePlayerControllable(playerid, 1);
			    SendClientMessage(playerid, COLOR_YELLOW2, "ถูกต้อง นะคร้าบบบบบ !");
    			DKT[playerid] = 0;
 				SendClientMessage(playerid, COLOR_LIGHTRED, "___________________________________");
 				SendClientMessage(playerid, COLOR_YELLOW, " ขอแสดงความยินดีคุณตอบคำถามถูกทั้งหมด !");
 				SendClientMessage(playerid, COLOR_YELLOW, " คุณได้ใบอณุญาติขับขี่รถยนต์แล้ว");
 				SendClientMessage(playerid, COLOR_YELLOW, " โปรดพิมพ์ /licenses เพื่อเช็ค");
				GameTextForPlayer(playerid, "~g~ Passed", 5000, 3);
				PlayerPlayMusic(playerid);
				pTest[playerid] = 0;
				PlayerInfo[playerid][pCarLic] = 1;
				SafeGivePlayerMoney(playerid, -1000);
				TakingLesson[playerid] = 0;
			}
			else
			{
			    GameTextForPlayer(playerid, "~r~ Failed", 5000, 3);
			    SendClientMessage(playerid, COLOR_LIGHTRED, "คุณตอบผิด !");
			    TogglePlayerControllable(playerid, 1);
			    DKT[playerid] = 0;
			}
			return 0;
		}
		return 0;
	}
	if(MarriageCeremoney[playerid] > 0)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
		    if(GotProposedBy[playerid] < 999)
		    {
			    if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
				    format(string, sizeof(string), "Priest: %s do you take %s as your lovely Wife? (type 'yes', anything else will reject the Marriage).", giveplayer,sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
			}
			else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Wife, you may kiss the Bride.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Wife, you may kiss the Groom.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Marriage News: We have a new lovely couple, %s & %s have been married.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
					    format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Husband, you may kiss the Bride.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Husband & Husband, you may kiss the Groom.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Marriage News: We have a new Gay couple, %s & %s have been married.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
					    format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Wife & Wife, you may kiss the Bride.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Priest: %s and %s i pronounce you now...Wife & Wife, you may kiss the Groom.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Marriage News: We have a new Lesbian couple, %s & %s have been married.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", sendername);
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					SafeGivePlayerMoney(playerid, - 100000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPhousekey] = PlayerInfo[playerid][pPhousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
		else
		{
		    if(GotProposedBy[playerid] < 999)
		    {
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* You didn't want to Marry %s, no 'yes' was said.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s did't want to Marry you, no 'yes' was said.",sendername);
				    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
		    }
		    else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* You didn't want to Marry %s, no 'yes' was said.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s did't want to Marry you, no 'yes' was said.",sendername);
				    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
	    return 0;
	}
	if(WritingPaper[playerid] > 0)
	{
	    new line;
        new nstring[256];
        new idx;
        new length = strlen(text);
		while ((idx < length) && (text[idx] <= ' '))
		{
			idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
			result[idx - offset] = text[idx];
			idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
		    if(WritingLine[playerid] == 1) { SendClientMessage(playerid, COLOR_GRAD2, "* Please type in the Title of your Newspaper."); }
		    else { SendClientMessage(playerid, COLOR_LIGHTRED, "* Please type in a Text Line of your Newspaper."); }
			return 0;
		}
		format(nstring, sizeof(nstring), "%s", text);
		switch(WritingLine[playerid])
		{
		    case 1:
		    {
		        new fstring[MAX_PLAYER_NAME];
		        GetPlayerName(playerid, sendername, sizeof(sendername));
				format(fstring, sizeof(fstring), "%s", sendername);
				strmid(PaperInfo[WritingPaperNumber[playerid]][PaperMaker], fstring, 0, strlen(fstring), 255);
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperTitle], nstring, 0, strlen(nstring), 255);
		        line = 0; WritingLine[playerid] = 2;
		        SendClientMessage(playerid, COLOR_LIGHTRED, "* Now you can write down the News Lines, 7 remaining.");
		    }
		    case 2:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText1], nstring, 0, strlen(nstring), 255);
		        line = 1; WritingLine[playerid] = 3;
		    }
		    case 3:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText2], nstring, 0, strlen(nstring), 255);
		        line = 2; WritingLine[playerid] = 4;
		    }
		    case 4:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText3], nstring, 0, strlen(nstring), 255);
		        line = 3; WritingLine[playerid] = 5;
		    }
		    case 5:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText4], nstring, 0, strlen(nstring), 255);
		        line = 4; WritingLine[playerid] = 6;
		    }
		    case 6:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText5], nstring, 0, strlen(nstring), 255);
		        line = 5; WritingLine[playerid] = 7;
		    }
		    case 7:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText6], nstring, 0, strlen(nstring), 255);
		        line = 6; WritingLine[playerid] = 8;
		    }
		    case 8:
		    {
		        strmid(PaperInfo[WritingPaperNumber[playerid]][PaperText7], nstring, 0, strlen(nstring), 255);
		        PaperInfo[WritingPaperNumber[playerid]][PaperUsed] = 1;
		        SavePapers();
		        line = 7; WritingLine[playerid] = 0; WritingPaper[playerid] = 0; WritingPaperNumber[playerid] = 999;
		    }
		}
		if(line > 0)
		{
			format(string, sizeof(string), "* You wrote Line %d of the Newspaper.", line);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			if(line == 7)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Your Newspaper has been added to the News List (for Paper Boys).");
			}
		}
	    return 0;
	}
	if(ConnectedToPC[playerid] == 255)
	{
		new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Contracts", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Contracts")))
		{
		    if(PlayerInfo[playerid][pRank] < 1)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Only Hitman with Rank 1 or above can search and assign Contracts !");
		        return 0;
		    }
		    SearchingHit(playerid);
			return 0;
		}
		else if ((strcmp("News", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("News")))
		{
		    	new x_nr[256];
				x_nr = strtok(text, idx);

				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ กระดานข่าวนักล่าค่าหัว __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USAGE: News [number] or News delete [number] or News delete all");
					format(string, sizeof(string), "1: %s :: โดย: %s", News[hAdd1], News[hContact1]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "2: %s :: โดย: %s", News[hAdd2], News[hContact2]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "3: %s :: โดย: %s", News[hAdd3], News[hContact3]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "4: %s :: โดย: %s", News[hAdd4], News[hContact4]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "5: %s :: โดย: %s", News[hAdd5], News[hContact5]);
					SendClientMessage(playerid, COLOR_GREY, string);
					SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
					return 0;
				}//lets start
				if(strcmp(x_nr,"1",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken1] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact1], string, 0, strlen(string), 255);
						News[hTaken1] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You placed a News Message on the Hitman Agency's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 1 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken2] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact2], string, 0, strlen(string), 255);
						News[hTaken2] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You placed a News Message on the Hitman Agency's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 2 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken3] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact3], string, 0, strlen(string), 255);
						News[hTaken3] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You placed a News Message on the Hitman Agency's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 3 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"4",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken4] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact4], string, 0, strlen(string), 255);
						News[hTaken4] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You placed a News Message on the Hitman Agency's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 4 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"5",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Already placed a News Message, it must be deleted first !"); return 0; }
				    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 3 to write messages to the News Channel !"); return 0; }
				    if(News[hTaken5] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   News Text to short !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact5], string, 0, strlen(string), 255);
						News[hTaken5] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You placed a News Message on the Hitman Agency's News Channel.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Spot 5 is already Taken !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"delete",true) == 0)
				{
				    if(PlayerInfo[playerid][pRank] < 4)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   You must be Rank 4 to delete messages from the News Channel !");
				        return 0;
				    }
				    new string1[MAX_PLAYER_NAME];
				    new x_tel[256];
					x_tel = strtok(text, idx);
					if(!strlen(x_tel)) {
					    SendClientMessage(playerid, COLOR_WHITE, "USAGE: News delete [number] or News delete all.");
					    return 0;
					}
                    if(strcmp(x_tel,"1",true) == 0)
                    {
                        format(string, sizeof(string), "ไม่มี"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "ไม่มี");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้ลบข้อความช่องที่ (1) ออกจากกระดานข่าวนักล่าค่าหัว.");
						return 0;
                    }
                    else if(strcmp(x_tel,"2",true) == 0)
                    {
                        format(string, sizeof(string), "ไม่มี"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "ไม่มี");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้ลบข้อความช่องที่ (2) ออกจากกระดานข่าวนักล่าค่าหัว.");
						return 0;
                    }
                    else if(strcmp(x_tel,"3",true) == 0)
                    {
                        format(string, sizeof(string), "ไม่มี"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "ไม่มี");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้ลบข้อความช่องที่ (3) ออกจากกระดานข่าวนักล่าค่าหัว.");
						return 0;
                    }
                    else if(strcmp(x_tel,"4",true) == 0)
                    {
                        format(string, sizeof(string), "ไม่มี"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "ไม่มี");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้ลบข้อความช่องที่ (4) ออกจากกระดานข่าวนักล่าค่าหัว.");
						return 0;
                    }
                    else if(strcmp(x_tel,"5",true) == 0)
                    {
                        format(string, sizeof(string), "Nothing"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "No-one");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้ลบข้อความช่องที่ (5) ออกจากกระดานข่าวนักล่าค่าหัว.");
						return 0;
                    }
                    else if(strcmp(x_tel,"all",true) == 0)
                    {
                        format(string, sizeof(string), "ไม่มี"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "ไม่มี");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						format(string, sizeof(string), "ไม่มี"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "ไม่มี");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						format(string, sizeof(string), "ไม่มี"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "ไม่มี");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						format(string, sizeof(string), "ไม่มี"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "ไม่มี");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						format(string, sizeof(string), "ไม่มี"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "ไม่มี");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณลบข้อความทั้งหมด จากกระดานข่าวของนักล่าค่าหัว.");
						return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USAGE: News delete [number] or News delete all.");
					    return 0;
                    }
				}
				else { return 0; }
		}
		else if ((strcmp("Givehit", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Givehit")))
		{
		    if(hitfound == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   There is no Hit Founded yet, use Contracts in the Portable first!");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USAGE: Givehit [playerid/PartOfName]");
				return 0;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    //if(PlayerInfo[giveplayerid][pMember] != 8 || PlayerInfo[playerid][pLeader] != 8)
					if(PlayerInfo[giveplayerid][pMember]==8 || PlayerInfo[giveplayerid][pLeader]==8)
					{
				    	if(GoChase[giveplayerid] < 999)
				    	{
				        	SendClientMessage(playerid, COLOR_GREY, "   That Hitman is already busy with a Contract!");
							return 0;
				    	}
				    	if(IsPlayerConnected(hitid))
				    	{
				        	GetPlayerName(playerid, sendername, sizeof(sendername));
				       	 	GetPlayerName(giveplayerid, giver, sizeof(giver));
				       	 	GetPlayerName(hitid, giveplayer, sizeof(giveplayer));
        					//format(string, sizeof(string), "* You assigned%s to kill: %s(ID:%d), for $%d.", giver, giveplayer, hitid, PlayerInfo[hitid][pValue]);
		    				//SendClientMessage(playerid, COLOR_YELLOW, string);
				        	//format(string, sizeof(string), "* Hitman %s has assigned you to kill: %s(ID:%d), for $%d.", sendername, giveplayer, hitid, PlayerInfo[hitid][pValue]);
		    				//SendClientMessage(giveplayerid, COLOR_YELLOW, string);
		    				format(string, sizeof(string), "* Hitman %s, assigned Hitman %s to kill: %s(ID:%d), for $%d.", sendername, giver, giveplayer, hitid, PlayerInfo[hitid][pHeadValue]);
		    				SendFamilyMessage(8, COLOR_YELLOW, string);
		    				GoChase[giveplayerid] = hitid;
		    				GetChased[hitid] = giveplayerid;
		    				GotHit[hitid] = 1;
		    				hitid = 0;
		    				hitfound = 0;
				        	return 0;
				    	}
				    	else
				    	{
				        	SendClientMessage(playerid, COLOR_GREY, "   The Contracted Person is offline, use Contracts in the Portable again!");
				        	return 0;
				    	}
					}
					return 0;
				}
				else
				{
			    	SendClientMessage(playerid, COLOR_GREY, "   That Hitman is not Online, or ain't a Hitman!");
			    	return 0;
				}
			}
		}
		else if ((strcmp("Ranks", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Ranks")))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Hitman's Ranks __________________|");
		    for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMember] == 8||PlayerInfo[i][pLeader] == 8)
				    {
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* %s: ระดับ %d", giveplayer,PlayerInfo[i][pRank]);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		else if ((strcmp("Order", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Order")))
		{
		    if(OrderReady[playerid] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   คุณได้สั่งสินค้าไปแล้วหากต้องการสั่งใหม่, กรุณาไปเอาปืนออกจากกระเป๋าที่หน้าฐานก่อน !");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if ((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
			{
			    if(PlayerInfo[playerid][pRank] < 1) { SendClientMessage(playerid, COLOR_GREY, "   ยศไม่พอจึงไม่สามารถสั่งซื้อได้ !"); return 0; }
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้สั่งซื้อชุดที่ 1 ($Free), เราจะใส่กระเป๋าและจัดส่งไปที่หน้าฐาน");
			        OrderReady[playerid] = 1;
			        return 0;
			    }
			}
			else if ((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
			    if(PlayerInfo[playerid][pRank] < 2) { SendClientMessage(playerid, COLOR_GREY, "   ยศไม่พอจึงไม่สามารถสั่งซื้อได้ !"); return 0; }
			    if(ScriptMoney[playerid] > 999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้สั่งซื้อชุดที่ 2 ($1000),เราจะใส่กระเป๋าและจัดส่งไปที่หน้าฐาน");
			        OrderReady[playerid] = 2;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   คุณมีเงินไม่พอที่จะสั่งซื้อ !");
			        return 0;
			    }
			}
			else if ((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
			    if(PlayerInfo[playerid][pRank] < 2) { SendClientMessage(playerid, COLOR_GREY, "   ยศไม่พอจึงไม่สามารถสั่งซื้อได้ !"); return 0; }
			    if(ScriptMoney[playerid] > 1999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้สั่งซื้อชุดที่ 3 ($2000), เราจะใส่กระเป๋าและจัดส่งไปที่หน้าฐาน");
			        OrderReady[playerid] = 3;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   คุณมีเงินไม่พอที่จะสั่งซื้อ !");
			        return 0;
			    }
			}
			else if ((strcmp("4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("4")))
			{
			    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   ยศไม่พอจึงไม่สามารถสั่งซื้อได้ !"); return 0; }
			    if(ScriptMoney[playerid] > 4999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้สั่งซื้อชุดที่ 4 ($5500),เราจะใส่กระเป๋าและจัดส่งไปที่หน้าฐาน");
			        OrderReady[playerid] = 4;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   คุณมีเงินไม่พอที่จะสั่งซื้อ !");
			        return 0;
			    }
			}
			else if ((strcmp("5", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("5")))
			{
			    if(PlayerInfo[playerid][pRank] < 3) { SendClientMessage(playerid, COLOR_GREY, "   ยศไม่พอจึงไม่สามารถสั่งซื้อได้ !"); return 0; }
			    if(ScriptMoney[playerid] > 6999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้สั่งซื้อชุดที่ 5 ($7000),เราจะใส่กระเป๋าและจัดส่งไปที่หน้าฐาน");
			        OrderReady[playerid] = 5;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   คุณมีเงินไม่พอที่จะสั่งซื้อ !");
			        return 0;
			    }
			}
			else if ((strcmp("6", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("6")))
			{
			    if(PlayerInfo[playerid][pRank] < 4) { SendClientMessage(playerid, COLOR_GREY, "   ยศไม่พอจึงไม่สามารถสั่งซื้อได้ !"); return 0; }
			    if(ScriptMoney[playerid] > 7999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้สั่งซื้อชุดที่ 6 ($9500), เราจะใส่กระเป๋าและจัดส่งไปที่หน้าฐาน");
			        OrderReady[playerid] = 6;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   คุณมีเงินไม่พอที่จะสั่งซื้อ !");
			        return 0;
			    }
			}
			else if ((strcmp("7", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("7")))
			{
			    if(PlayerInfo[playerid][pRank] < 4) { SendClientMessage(playerid, COLOR_GREY, "   ยศไม่พอจึงไม่สามารถสั่งซื้อได้ !"); return 0; }
			    if(ScriptMoney[playerid] > 8999)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* คุณได้สั่งซื้อชุดที่ 7 ($10000), เราจะใส่กระเป๋าและจัดส่งไปที่หน้าฐาน");
			        OrderReady[playerid] = 7;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   คุณมีเงินไม่พอที่จะสั่งซื้อ !");
			        return 0;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|__________________ สั่งซื้อปืืนออนไลน์ __________________|");
			    if(PlayerInfo[playerid][pRank] >= 1) { SendClientMessage(playerid, COLOR_GREY, "|(1) ($Free ) Rank 1 - 5: Knife, SPistol, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pRank] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(2) ($1000 ) Rank 2 - 5: Knife, SPistol, M4, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pRank] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(3) ($2000 ) Rank 2 - 5: Knife, SPistol, AK47, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pRank] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(4) ($5000) Rank 3 - 5: Knife, SPistol, M4, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pRank] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(5) ($7000) Rank 3 - 5: Knife, SPistol, AK47, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pRank] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(6) ($8000) Rank 4 - 5: Knife, SPistol, M4, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pRank] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(7) ($9000) Rank 4 - 5: Knife, SPistol, AK47, MP5, Shotgun, Sniper"); }
			    SendClientMessage(playerid, COLOR_WHITE, "|________________________________________________________|");
			    return 0;
			}
		}
		else if ((strcmp("Logout", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Logout")))
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ปิดโน๊ตบุ๊ค, และตัดการเชื่อมต่อจากฐานข้อมูล.");
      		ConnectedToPC[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "|___ ฐานข้อมูลนักล่าค่าหัว ___|");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - News");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contracts");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Givehit");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Backup");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Order");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Ranks");
		    SendClientMessage(playerid, COLOR_YELLOW2, "| - Logout");
		    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
		    return 0;
		}
	    return 0;
	}
	if(CallLawyer[playerid] == 111)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("yes", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("yes")))
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    format(string, sizeof(string), "** %s อยู่ในคุก , และเขาต้องการทนาย", sendername);
	    	SendJobMessage(2, TEAM_AZTECAS_COLOR, string);
	    	SendJobMessage(2, TEAM_AZTECAS_COLOR, "* คุณจะช่วยเขาไหม ถ้าคุณจะช่วยเขา ให้คุณไปขออณุญาติตำรวจให้ประกันตัวเขาได้ แล้วพิมพ์ /accept lawyer");
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "ระบบได้ส่งข้อมูลไปให้ทนายรับรู้เรียบร้อยแล้ว");
	    	WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
	    	return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Ok คุณไม่ต้องการทนาย");
		    WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
		    return 0;
		}
	}
	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pJob] == 6 || PlayerInfo[playerid][pMember] == 9 || PlayerInfo[playerid][pLeader] == 9)
		{
		    format(string, sizeof(string), " พิธีกร %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		else
		{
		    format(string, sizeof(string), " แขก %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s(พูดคุยทางโทรศัพท์): %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		//printf("callers line %d called %d caller %d",Mobile[Mobile[playerid]],Mobile[playerid],playerid);
		if(Mobile[playerid] == 914)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispatch: เสียใจ ฉันไม่เข้าใจ?");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispatch: เราได้เตือนหน่วยแพทย์ที่อยู่แล้วค่ะ");
			format(wanted, sizeof(wanted), "Dispatch: แพทย์ทุกนายโปรดทราบ: ผู้รายงาน %s",turner);
			SendTeamMessage(1, TEAM_BLUE_COLOR, string);
			format(wanted, sizeof(wanted), "Dispatch: แจ้งมาว่า %s",text);
			SendTeamMessage(1, TEAM_BLUE_COLOR, string);
			SendClientMessage(playerid, COLOR_GRAD2, "   เขาวางสาย...");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			Mobile[playerid] = 255;
			return 0;
		}
		if(Mobile[playerid] == 913)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: เสียใจ ฉันไม่เข้าใจ?");
				return 0;
			}
			if ((strcmp("no", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("no")))
			{
				new turner[MAX_PLAYER_NAME];
				new wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SendClientMessage(playerid, COLOR_DBLUE, "Dispatch: เราได้แจ้งตำรวจเรียบร้อยแล้ว");
				format(wanted, sizeof(wanted), "HQ: ทุกหน่วยโปรดทราบ: ผู้รายงาน: %s",turner);
				SendTeamMessage(2, TEAM_BLUE_COLOR, string);
				format(wanted, sizeof(wanted), "HQ: ข้อหา: %s, ผู้กระทำความผิด: ไม่ทราบ",PlayerCrime[playerid][pAccusing]);
				SendTeamMessage(2, TEAM_BLUE_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD2, "   เขาวางสาย...");
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				Mobile[playerid] = 255;
				return 0;
			}
			new badguy;
			//badguy = strval(tmp);
			badguy = ReturnUser(tmp);
			if (IsPlayerConnected(badguy))
			{
			    if(badguy != INVALID_PLAYER_ID)
			    {
					if (gTeam[badguy] == 2 || gTeam[badguy] == 1)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: You will have to contact internal affairs. This is an emergency line");
						SendClientMessage(playerid, COLOR_GRAD2, "เขาวางสาย...");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
						Mobile[playerid] = 255;
						return 0;
					}
					if (WantedPoints[badguy] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: Units are already assigned to that case");
						SendClientMessage(playerid, COLOR_DBLUE, "Thank you for reporting this crime");
						SendClientMessage(playerid, COLOR_GRAD2, "เขาวางสาย...");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
						Mobile[playerid] = 255;
						return 0;
					}
					if (badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: Dont Fool Around, This is an emergency line.");
						SendClientMessage(playerid, COLOR_GRAD2, "เขาวางสาย...");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
						Mobile[playerid] = 255;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "Police HQ: We have alerted all units in the area.");
					SendClientMessage(playerid, COLOR_DBLUE, "Thank you for reporting this crime");
					SetPlayerCriminal(badguy,playerid, PlayerCrime[playerid][pAccusing]);
					if(WantedPoints[badguy] > 0) { } else { WantedPoints[badguy] += 2; }
					SendClientMessage(playerid, COLOR_GRAD2, "เขาวางสาย...");
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
					Mobile[playerid] = 255;
					return 0;
				}//invalid id
				return 0;
			}//not connected
			else
			{
				format(string, sizeof(string), "Police HQ: I have no Information on %s, are you sure thats the right name?",tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: เสียใจ ฉันไม่เข้าใจ?");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "Dispatch: หากทราบชื่อผู้ต้องหา กรุณาบอกฉันมา หากไม่ทราบ กรุณาตอบ no");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 911)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: Sorry i dont understand, police or paramedic?");
				return 0;
			}
			else if ((strcmp("police", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("police")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: กรุณาถือสายรอซักครู่");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "Dispatch:: บอกฉันมาว่าเกิดอะไรขึ้น?");
				return 0;
			}
			else if ((strcmp("paramedic", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("paramedic")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: กรุณาถือสายรอซักครู่");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dispatch: สวัสดีค่ะ ที่นี่สายด่วนแพทย์มีอะไรคะ?");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCY: คุณต้องการใช้บริการ Police หรือ Paramedic กันแน่?");
				return 0;
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Theres nobody there");
		}
		return 0;
	}
	if (realchat)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
      	if(deathcpr[playerid] != 1 && GetPlayerState(playerid) == 1)
		{
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s: %s", sendername, text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
			return 0;
		}
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s: %s", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		return 0;
	}
	return 1;
}

/*public OnPlayerPrivmsg(playerid, recieverid, text[])
{
	return 0;
}*/

public SetCamBack(playerid)
{
    if(IsPlayerConnected(playerid))
    {
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
		SetPlayerInterior(playerid,14);
	}
}

public CheckForWalkingTeleport(playerid) // only put teleports ON FOOT here, use another function for vehicle ones - luk0r
{
	/*
	 *  HOW TO USE THIS FUNCTION:
	 *
	 *  Just use your normal PlayerToPoint functions but make them use PlayerToPointStripped instead.
	 *  Use the arguments cx,cy,cz at the end of each call (look at the others for an example).
	 *
	 */
	new Float:cx, Float:cy, Float:cz;
	GetPlayerPos(playerid, cx, cy, cz);

	if(GetPlayerState(playerid) == 1 && PlayerToPoint(1.0, playerid,-1939.6660,1227.4609,31.6424))
	{
	    if (PlayerInfo[playerid][pMember] == 15 || PlayerInfo[playerid][pLeader] == 15 || gTeam[playerid] == 2 || IsACop(playerid))
	    {
			//Aztecas Enter
			SetPlayerInterior(playerid,10);
			SetPlayerPos(playerid,2267.6077,-1210.4731,1048.1165);
			GameTextForPlayer(playerid, "~b~Aztecas ~w~Home", 5000, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED,"คุณไม่ใช่ Varios Los Aztecas!");
			return 0;
		}
	}
	else if(PlayerToPoint(1.0, playerid,2270.2590,-1210.4333,1047.5625))
	{
		//Aztecas Exit
		SetPlayerPos(playerid,-1941.2100,1227.4631,31.6085);
		SetPlayerInterior(playerid,0);
	}
	else if(PlayerToPoint(1.0, playerid,-2454.8596,-135.8240,26.1772))
	{
	    if (PlayerInfo[playerid][pMember] == 12 || PlayerInfo[playerid][pLeader] == 12 || gTeam[playerid] == 2 || IsACop(playerid))
		{
			//GROVE Enter
			SetPlayerInterior(playerid,3);
			SetPlayerPos(playerid,2495.9497,-1694.5311,1014.7422);
			GameTextForPlayer(playerid, "~g~Johnson ~w~House", 5000, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED,"คุณไม่ใช่ Grove Street Family!");
			return 0;
		}
	}
	else if(PlayerToPoint(1.0, playerid,2496.0171,-1692.4968,1014.7422))
	{
		//GROVE Exit
		SetPlayerPos(playerid,-2456.5066,-135.8146,26.0772);
		SetPlayerInterior(playerid,0);
	}
	else if(PlayerToPoint(1.0, playerid,-2579.4365,310.0659,5.1797))
	{
	    if (PlayerInfo[playerid][pMember] == 13 || PlayerInfo[playerid][pLeader] == 13 || gTeam[playerid] == 2 || IsACop(playerid))
		{
			//BALLAS Enter
			SetPlayerInterior(playerid,5);
			SetPlayerPos(playerid,318.6083,1116.9370,1083.8828);
			GameTextForPlayer(playerid, "~p~Ballas~n~~w~Crack Den", 5000, 1);
		}
		else
		{
			SendClientMessage(playerid,COLOR_RED, "คุณไม่ใช่ High-Roller Ballas!");
			return 0;
		}
	}
	else if(PlayerToPoint(1.0, playerid,318.6615,1114.9644,1083.8828))
	{
		//BALLAS Exit
		SetPlayerPos(playerid,-2580.8582,310.3502,5.1856);
		SetPlayerInterior(playerid,0);
	}
	else if(PlayerToPoint(1.0, playerid,-1862.1824,-145.7641,11.8984))
	{
	    if (PlayerInfo[playerid][pMember] == 14 || PlayerInfo[playerid][pLeader] == 14 || gTeam[playerid] == 2 || IsACop(playerid))
		{
			//VAGOS Enter
			SetPlayerInterior(playerid,15);
			SetPlayerPos(playerid,2218.1919,-1150.4969,1025.7969);
			GameTextForPlayer(playerid, "~y~Jefferson~n~~w~Motel", 5000, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "คุณไม่ใช่ Los Santos Vagos!");
			return 0;
		}
	}
	else if(PlayerToPoint(1.0, playerid,2214.6604,-1150.5028,1025.7969))
	{
		//VAGOS Exit
		SetPlayerPos(playerid,-1862.0825,-142.9913,11.9051);
		SetPlayerInterior(playerid,0);
	}
	else if(PlayerToPoint(1.0, playerid,-2192.6519,647.4236,49.4375))
	{
	    if (PlayerInfo[playerid][pMember] == 6 || PlayerInfo[playerid][pLeader] == 6 || gTeam[playerid] == 2 || IsACop(playerid))
		{
			//Yakuza Enter
			SetPlayerInterior(playerid,1);
			SetPlayerPos(playerid,-2161.7400,641.6007,1052.3750);
			GameTextForPlayer(playerid, "~r~Yakuza~n~~w~Office", 5000, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "คุณไม่ใช่ Yakuza!");
			return 0;
		}
	}
	else if(PlayerToPoint(1.0, playerid,-2158.6687,642.9635,1052.3750))
	{
		//Yakuza Exit
		SetPlayerPos(playerid,-2192.7407,643.8399,49.4375);
		SetPlayerInterior(playerid,0);
	}
	else if(PlayerToPoint(1.0, playerid,-2719.4019,-319.1833,7.8438))
	{
	    if (PlayerInfo[playerid][pMember] == 5 || PlayerInfo[playerid][pLeader] == 5 || gTeam[playerid] == 2 || IsACop(playerid))
		{
			//LCN Enter
			SetPlayerInterior(playerid,5);
			SetPlayerPos(playerid,1263.9938,-785.2942,1091.9063);
			GameTextForPlayer(playerid, "~w~La Cosa Nostra~n~~w~Mansion", 5000, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "คุณไม่ใช่ La Cosa Nostra!");
			return 0;
		}
	}
	else if(PlayerToPoint(1.0, playerid,1261.0292,-785.2979,1091.9063))
	{
		//LCN Exit
		SetPlayerPos(playerid,-2720.6028,-317.6403,7.8438);
		SetPlayerInterior(playerid,0);
	}
	else if(PlayerToPoint(1.0, playerid,-2730.2241,72.9380,4.3359))
	{
	    if (PlayerInfo[playerid][pMember] == 16 || PlayerInfo[playerid][pLeader] == 16 || gTeam[playerid] == 2 || IsACop(playerid))
		{
			//VANCE Enter
			SetPlayerInterior(playerid,5);
			SetPlayerPos(playerid,2351.7344,-1180.8826,1027.9766);
			GameTextForPlayer(playerid, "~w~VANCE~n~~w~HOME", 5000, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "คุณไม่ใช่ Vance Boy!");
			return 0;
		}
	}
	else if(PlayerToPoint(1.0, playerid,2352.9360,-1180.8899,1027.9766))
	{
		//VANCE Exit
		SetPlayerPos(playerid,-2730.8579,74.1779,4.3359);
		SetPlayerInterior(playerid,0);
	}
	else if(PlayerToPoint(1.0, playerid,-1694.8345,951.5516,24.8906))
	{
		//clothes Enter
		SetPlayerInterior(playerid,5);
		SetPlayerPos(playerid,225.2681,-7.4342,1002.2109);
		GameTextForPlayer(playerid, "~r~Victim~n~~w~To Die For", 5000, 1);
	}
	else if(PlayerToPoint(1.0, playerid,227.0114,-8.2541,1002.2109))
	{
		//clothes Exit
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1699.2814,950.6028,24.8906);
	}
	else if(PlayerToPoint(1.0, playerid,-1982.5063,190.6806,27.8969))
	{
		//24/7 Enter
		SetPlayerInterior(playerid,6);
		SetPlayerPos(playerid,-26.6543,-55.4972,1003.5469);
		GameTextForPlayer(playerid, "~g~24/7~n~~y~Open 24 Hour.", 5000, 1);
	}
	/*else if(PlayerToPoint(1.0, playerid,-26.6577,-57.7970,1003.5469))
	{
		//24/7 Exit
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1985.8531,190.7779,27.6799);
		GameTextForPlayer(playerid, "~w~Have a nice day.", 5000, 1);
	}*/
	else if (PlayerToPointStripped(1, playerid,-2551.1990,193.6636,6.2210, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~ Party Tower", 5000, 1);
		SetPlayerPos(playerid,493.3910,-22.7228,1000.6797);
		SetPlayerInterior(playerid,17);
		//ผับในเมืองเข้า
	}
	else if (PlayerToPointStripped(1, playerid,493.4740,-24.9566,1000.6719, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
		SetPlayerPos(playerid,-2554.9824,192.1973,6.1169);
		SetPlayerInterior(playerid,0);
		//ผับในเมืองออก
	}
	else if (PlayerToPointStripped(1, playerid,-2624.4995,1412.2290,7.0938, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~The Pleasure Domes", 5000, 1);
		SetPlayerPos(playerid,-2637.4500,1404.6300,906.4609);
		SetPlayerInterior(playerid,3);
		//ผับใหญ่นอกเมืองเข้า
	}
	else if (PlayerToPointStripped(1, playerid,-2636.7498,1402.7544,906.4609, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
		SetPlayerPos(playerid,-2624.1577,1409.1327,7.1016);
		SetPlayerInterior(playerid,0);
		//ผับใหญ่นอกเมืองออก
	}
	else if (PlayerToPointStripped(1, playerid,-2336.8652,-166.6978,35.5547, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~Burger Shot", 5000, 1);
		SetPlayerPos(playerid,365.5280,-72.8014,1001.5078);
		SetPlayerInterior(playerid,10);
		OnPlayerEnterFood(playerid, 2);
		PlayerEnterFood[playerid] = 1;
		//เบอร์เกอร์ shot มาเฟียเก่าเข้า
	}
	else if (PlayerToPointStripped(1, playerid,-1912.0575,828.3444,35.2052, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~Burger Shot", 5000, 1);
		SetPlayerPos(playerid,-1912.0575,828.3444,35.2052);
		SetPlayerInterior(playerid,10);
		OnPlayerEnterFood(playerid, 2);
		PlayerEnterFood[playerid] = 2;
		//เบอร์เกอร์ shot มาเฟียเก่าเข้า2
	}
	else if (PlayerToPointStripped(1, playerid,-2356.3438,1008.1089,50.8984, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~Burger Shot", 5000, 1);
		SetPlayerPos(playerid,-2356.3438,1008.1089,50.8984);
		SetPlayerInterior(playerid,10);
		OnPlayerEnterFood(playerid, 2);
		PlayerEnterFood[playerid] = 3;
		//เบอร์เกอร์ shot มาเฟียเก่าเข้า3
	}
	else if (PlayerToPointStripped(1, playerid,362.8098,-75.1023,1001.5078, cx,cy,cz))
	{
		if(PlayerEnterFood[playerid] == 1)
		{
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerPos(playerid,-2334.1062,-166.8356,35.5547);
			SetPlayerInterior(playerid,0);
			OnPlayerExitFood(playerid);
			PlayerEnterFood[playerid] = 0;
			//เบอร์เกอร์ shotมาเฟียเก่า ออก
		}
		if(PlayerEnterFood[playerid] == 2)
		{
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerPos(playerid,-1911.2488,829.4395,35.1719);
			SetPlayerInterior(playerid,0);
			OnPlayerExitFood(playerid);
			PlayerEnterFood[playerid] = 0;
			//เบอร์เกอร์ shotมาเฟียเก่า ออก
		}
		if(PlayerEnterFood[playerid] == 3)
		{
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerPos(playerid,-2357.6162,1008.1399,50.8984);
			SetPlayerInterior(playerid,0);
			OnPlayerExitFood(playerid);
			PlayerEnterFood[playerid] = 0;
			//เบอร์เกอร์ shotมาเฟียเก่า ออก
		}
	}
	else if (PlayerToPointStripped(1, playerid,-1816.5369,617.5595,35.1719, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~KFC", 5000, 1);
		SetPlayerPos(playerid,365.6757,-9.1719,1001.8516);
		SetPlayerInterior(playerid,9);
		OnPlayerEnterFood(playerid, 1);
		PlayerEnterFood[playerid] = 1;
		//KFC์  มาเฟียเก่าเข้า
	}
	else if (PlayerToPointStripped(1, playerid,-2671.5425,258.3681,4.6328, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~KFC", 5000, 1);
		SetPlayerPos(playerid,365.6757,-9.1719,1001.8516);
		SetPlayerInterior(playerid,9);
		OnPlayerEnterFood(playerid, 1);
		PlayerEnterFood[playerid] = 2;
		//KFC์  มาเฟียเก่าเข้า2
	}
	else if (PlayerToPointStripped(2, playerid,365.6296,-11.8426,1001.8516, cx,cy,cz))
	{
		if(PlayerEnterFood[playerid] == 1)
		{
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerPos(playerid,-1816.5198,615.6231,35.1719);
			SetPlayerInterior(playerid,0);
			OnPlayerExitFood(playerid);
			PlayerEnterFood[playerid] = 0;
			//KFC มาเฟียเก่า ออก
		}
		if(PlayerEnterFood[playerid] == 2)
		{
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerPos(playerid,-2671.5020,259.5700,4.6328);
			SetPlayerInterior(playerid,0);
			OnPlayerExitFood(playerid);
			PlayerEnterFood[playerid] = 0;
			//KFC มาเฟียเก่า ออก
		}
	}
	else if (PlayerToPointStripped(1.0, playerid,-1808.4099,945.6252,24.8906, cx,cy,cz))
	{
		SetPlayerPos(playerid,372.1904,-129.4093,1001.4922);
		SetPlayerInterior(playerid,5);
		OnPlayerEnterFood(playerid, 3);
		PlayerEnterFood[playerid] = 1;
		//ร้านพิซซ่าเข้า
	}
	else if (PlayerToPointStripped(1.0, playerid,-1721.6519,1359.6932,7.185, cx,cy,cz))
	{
		SetPlayerPos(playerid,372.1904,-129.4093,1001.4922);
		SetPlayerInterior(playerid,5);
		OnPlayerEnterFood(playerid, 3);
		PlayerEnterFood[playerid] = 2;
		//ร้านพิซซ่าเข้า1
	}
	else if (PlayerToPointStripped(1.0, playerid,-2027.7329,-41.4331,38.8047, cx,cy,cz))
	{
		SetPlayerPos(playerid,2193.7102,-1202.9077,1049.0234);
		SetPlayerInterior(playerid,6);
		//ร้านยาเข้า
	}
	else if (PlayerToPointStripped(1.0, playerid,2196.8452,-1204.4122,1049.023, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
		SetPlayerPos(playerid,-2027.7661,-44.3980,38.5423);
		SetPlayerInterior(playerid,0);
		//ร้านยาออก
	}
	else if (PlayerToPointStripped(1.0, playerid,372.2748,-133.2052,1001.4922, cx,cy,cz))
	{
		if(PlayerEnterFood[playerid] == 1)
		{
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerPos(playerid,-1805.3014,943.1459,24.8906);
			SetPlayerInterior(playerid,0);
			OnPlayerExitFood(playerid);
			PlayerEnterFood[playerid] = 0;
			//ร้านพิซซ่าออก
		}
		if(PlayerEnterFood[playerid] == 2)
		{
			GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
			SetPlayerPos(playerid,-1722.9170,1359.7495,7.1875);
			SetPlayerInterior(playerid,0);
			OnPlayerExitFood(playerid);
			PlayerEnterFood[playerid] = 0;
			//ร้านพิซซ่าออก
		}
	}
	else if (PlayerToPointStripped(1.0, playerid,-2269.6436,-155.9507,35.3203, cx,cy,cz))
	{
		SetPlayerPos(playerid,774.1343,-48.1576,1000.5859);
		SetPlayerInterior(playerid,6);
		//เข้าที่ชกมวย
	}
	else if (PlayerToPointStripped(1.0, playerid,774.0729,-50.1115,1000.5859, cx,cy,cz))
	{
		GameTextForPlayer(playerid, "~w~San Fierro", 5000, 1);
		SetPlayerPos(playerid,-2267.8787,-156.0791,35.3203);
		SetPlayerInterior(playerid,0);
		//ออกที่ชกมวย
	}
	else if(PlayerToPoint(1.0, playerid,-2026.5779,-102.0588,35.1641))
	{
		//driving school Enter
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,-2026.8340,-105.6921,1035.1719);
		GameTextForPlayer(playerid, "~w~San Fierro~n~~r~License School", 5000, 1);
	}
	else if(PlayerToPoint(1.0, playerid,-2026.8861,-103.6032,1035.1829))
	{
		//driving school Exit
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2026.5880,-99.6515,35.1641);
		GameTextForPlayer(playerid, "~w~see you soon", 5000, 1);
	}
	else if(PlayerToPoint(1.0, playerid,-2029.7667,-120.5223,35.1692))
	{
		//driving school2 Enter
		SetPlayerInterior(playerid,3);
		SetPlayerPos(playerid,-2029.7103,-117.8211,1035.1719);
		GameTextForPlayer(playerid, "~w~San Fierro~n~~r~License School", 5000, 1);
	}
	else if(PlayerToPoint(1.0, playerid,-2029.7220,-119.6173,1035.1719))
	{
		//driving school2 Exit
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-2029.7832,-122.3250,35.1904);
		GameTextForPlayer(playerid, "~w~See You Soon", 5000, 1);
	}
	else if(PlayerToPoint(1.0, playerid,-1605.5879,711.5010,13.8714))
	{
	    if (gTeam[playerid] == 2 || IsACop(playerid))
		{
		//SFPD ENTER
		SetPlayerInterior(playerid,10);
		SetPlayerPos(playerid,246.3975,110.1729,1003.2257);
		}
		else
		{
			ResetPlayerWeapons(playerid);
			SetPlayerInterior(playerid,10);
			SetPlayerPos(playerid,246.3975,110.1729,1003.2257);
		}
	}
	else if(PlayerToPoint(1.0, playerid,246.3121,108.2537,1003.2257))
	{
		//SFPD Exit
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1605.2605,713.6896,13.3253);
		GameTextForPlayer(playerid, "~w~See You Soon", 5000, 1);
	}
	else if(PlayerToPoint(1.0, playerid,-1618.9828,866.7359,7.6953))
	{
		//Bank Enter
		SetPlayerInterior(playerid,0);
		PlayerInfo[playerid][pLocal] = 103;
		SetPlayerPos(playerid,2307.1458,-16.1111,26.7496);
	}
	else if(PlayerToPoint(1.0, playerid,2305.6890,-16.0881,26.7496))
	{
		//Bank Exit
		SetPlayerPos(playerid,-1618.8534,864.5615,7.6953);
		PlayerInfo[playerid][pLocal] = 255;
		GameTextForPlayer(playerid, "~w~See You Soon", 5000, 1);
	}
	else if(PlayerToPoint(1.0, playerid,-1990.5542,209.3115,28.1953))
	{
	    if (PlayerInfo[playerid][pLevel] >= 1 )
		{
		//school Enter
		SetPlayerInterior(playerid,2);
		SetPlayerPos(playerid,1204.8774,-10.8316,1000.9219);
		GameTextForPlayer(playerid, "~w~Welcom to~n~~w~Bar", 5000, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "คุณต้องมีเลเวล 1 เท่านั้น!");
			return 0;
		}
	}
	else if(PlayerToPoint(1.0, playerid,1204.8767,-13.5875,1000.9219))
	{
		//school Bar Exit
		SetPlayerInterior(playerid,0);
		SetPlayerPos(playerid,-1990.9227,207.5916,28.0456);
	}
	return 1;
}

public FixHour(hour)
{
	hour = timeshift+hour;
	if (hour < 0)
	{
		hour = hour+24;
	}
	else if (hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}

public AddsOn()
{
	adds=1;
	return 1;
}
stock strvalEx( const string[] ) // fix for strval-bug with > 50 letters.
{
	// written by mabako in less than a minute :X
	if( strlen( string ) >= 50 ) return 0; // It will just return 0 if the string is too long
	return strval(string);
}
public OnPlayerEnterFood(playerid, foodid)
{
	switch (foodid)
	{
		case 1: // chicken
		{
			SetPlayerInterior(playerid, 9);
			SetPlayerPos(playerid,365.7793,-9.1699,1001.8516);
			SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.5);
			GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
			InAFoodPlace[playerid] = 1;
		}
		case 2: // burger
		{
			SetPlayerInterior(playerid, 10);
			SetPlayerPos(playerid,366.0324,-72.6400,1001.5078);
			SetPlayerCheckpoint(playerid, 376.8571,-67.6620,1001.5151, 1.5);
			GameTextForPlayer(playerid, "~w~Burger Shot", 5000, 1);
			InAFoodPlace[playerid] = 2;
		}
		case 3: // pizza
		{
			SetPlayerInterior(playerid, 5);
			SetPlayerPos(playerid,372.4117,-130.4577,1001.4922);
			SetPlayerCheckpoint(playerid, 375.6895,-118.9683,1001.4995, 1.5);
			GameTextForPlayer(playerid, "~w~Well Stacked Pizza", 5000, 1);
			InAFoodPlace[playerid] = 3;
		}
	}
	return 1;
}
public OnPlayerExitFood(playerid)
{
	DisablePlayerCheckpoint(playerid);
	InAFoodPlace[playerid] = 0;
	return 1;
}
public PlayerToPointStripped(Float:radi, playerid, Float:x, Float:y, Float:z, Float:curx, Float:cury, Float:curz)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:tempposx, Float:tempposy, Float:tempposz;
		tempposx = (curx -x);
		tempposy = (cury -y);
		tempposz = (curz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi))) return 1;
	}
	return 0;
}
public SetPlayerStar(playerid)
{
	if(PlayerInfo[playerid][pJailTime] >= 1)
	{
	WantedPoints[playerid] = 0;
	WantedLevel[playerid] = 0;
	SetPlayerWantedLevel(playerid, 0);
	return 1;
	}
	if(WantedLevel[playerid] == 0)
	{
	SetPlayerWantedLevel(playerid, 0);
	}
	else if(WantedLevel[playerid] == 1)
	{
	SetPlayerWantedLevel(playerid, 1);
	}
	else if(WantedLevel[playerid] == 2)
	{
	SetPlayerWantedLevel(playerid, 2);
	}
	else if(WantedLevel[playerid] == 3)
	{
	SetPlayerWantedLevel(playerid, 3);
	}
	else if(WantedLevel[playerid] == 4)
	{
	SetPlayerWantedLevel(playerid, 4);
	}
	else if(WantedLevel[playerid] == 5)
	{
	SetPlayerWantedLevel(playerid, 5);
	}
	else if(WantedLevel[playerid] >= 6)
	{
	SetPlayerWantedLevel(playerid, 6);
	}
	return 1;
}
public ChangeHostname()
{
     new var = random(3);
     switch (var)
     {
         case 0: SendRconCommand("hostname forum.script-wise.in.th");
         case 1: SendRconCommand("hostname Samp Role-Play Server");
         case 2: SendRconCommand("hostname Samp-Thailand");
     }
}
public BackupClear(playerid, calledbytimer)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid))
		{
			if (PlayerInfo[playerid][pRequestingBackup] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(IsACop(playerid))
						{
							SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
						}
					}
				}
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, " การขอความช่วยเหลือ ถูกยกเลิก...");
				}
				else
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, " การขอความช่วยเหลือถูกยกเลิกอัติโนมัติ");
				}
				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
			else
			{
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, COLOR_RED, "คุณยังไม่ได้ขอความช่วยเหลือใดๆทั้งสิ้น!");
				}
			}
		}
		else
		{
			if (calledbytimer != 1)
			{
				SendClientMessage(playerid, COLOR_RED, "คุณไม่ใช่ตำรวจ!");
			}
		}
	}
	return 1;
}

